{"version":3,"sources":["features/ble/bleSlice.js","utils/constants.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","features/language/languageSlice.js","utils/smartyConstants.js","utils/blocklyCategories.js","modules/Blockly/toolbox/en/toolbox.js","modules/Blockly/toolbox/ru/toolbox.js","assets/images/logic.png","assets/images/robot.png","assets/images/loops.png","assets/images/text_icon.png","assets/images/list_icon.png","assets/images/color.png","assets/images/function_icon.png","assets/images/math.png","utils/toolBoxUtils.js","modules/Blockly/toolbox/customToolBox.js","modules/Blockly/BlocklyComponent.jsx","modules/Blockly/index.js","modules/Blockly/blocks/myBlock.js","modules/Blockly/blocks/directionBlock.js","modules/Blockly/blocks/startBlock.js","modules/Blockly/blocks/rotationBlock.js","modules/Blockly/blocks/directionSteps.js","modules/Blockly/generators/myBlockGenerator.js","modules/Blockly/generators/directionBlockGenerator.js","modules/Blockly/generators/startBlockGenerator.js","modules/Blockly/generators/rotationBlockGenerator.js","modules/Blockly/generators/directionStepGenerator.js","assets/images/blocks_logo.png","assets/images/bluetooth.png","components/NavBar.jsx","assets/fonts/fingerPaint.ttf","utils/blocklyTheme.js","assets/images/bot.png","assets/images/play.png","assets/images/pause.png","assets/images/expand.png","App.js","index.js","utils/bleConstants.js"],"names":["initialState","status","BLE","BLE_DISCONNECTED","device","server","service","char","bleSlice","createSlice","name","reducers","changeStatus","state","action","payload","setDevice","setServer","setService","setchar","actions","CONSTANTS","LANGUAGE","RUSSIAN","ENGLISH","BLOCKS","ROTATION_BLOCK","START_BLOCK","MYBLOCK","DIRECTION_BLOCK","DIRECTIONS_ENGLISH","FORWARD","BACKWARD","LEFT","RIGHT","DIRECTIONS_RUSSIAN","CATERGORIES","SMARTY_CATEGORY","BLOCKLY_CATEGORIES_CONSTANTS","SMARTY","LOGIC_CATEGORY","LOGIC","LOOPS_CATEGORY","LOOPS","MATH_CATEGORY","MATH","TEXT_CATEGORY","TEXT","LISTS_CATEGORY","LISTS","COLOUR_CATEGORY","COLOUR","FUCNTIONS_CATEGORY","FUNCTIONS","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","value","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","customizedMiddleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","counter","counterReducer","language","languageReducer","ble","bleReducer","middleware","languageSlice","setLanguage","console","log","moveForward","getState","writeValue","TextEncoder","encode","moveBackward","moveLeft","moveRight","rotateSmarty","angle","RUNCODE","code","eval","EN_SMARTY","EN_LOGIC","EN_LOOPS","EN_MATH","EN_TEXT","EN_LISTS","EN_COLOUR","EN_FUNCTIONS","RU_SMARTY","RU_LOGIC","RU_LOOPS","RU_MATH","RU_TEXT","RU_LISTS","RU_COLOUR","RU_FUNCTIONS","INITIAL_TOOLBOX_JSON_EN","kind","contents","cssConfig","container","row","label","icon","type","blockxml","custom","INITIAL_TOOLBOX_JSON_RU","toolboxDefaultState","categoryName","rowDiv_","labelDom","iconDom_","style","backgroundColor","fontFamily","fontWeight","bac","Blockly","BlocklyComponent","props","blocklyDiv","React","createRef","toolbox","blocklyArea","modal","currentLanguage","this","setLocale","en","ru","Msg","DIRECTION_BLOCK_FORWARD","DIRECTION_BLOCK_BACKWARD","DIRECTION_BLOCK_LEFT","DIRECTION_BLOCK_RIGHT","setBlocksLang","primaryWorkspace","updateToolbox","element","x","y","offsetLeft","offsetTop","offsetParent","current","left","top","width","offsetWidth","height","offsetHeight","svgResize","initBlockly","initialXml","children","rest","Scrollbar","scrollbarThickness","DEFAULT_SCROLLBAR_MARGIN","Toolbox","inject","Xml","domToWorkspace","textToDom","window","addEventListener","onResize","addChangeListener","onChange","setSearchFuncBlockly","WorkspaceSearch","init","xml","Fragment","className","ref","id","xmlns","is","display","Component","connect","bleState","myBlock","message0","previousStatement","nextStatement","colour","tooltip","helpUrl","jsonInit","directionBlock","args0","options","startBlock","align","rotationBlock","directionSteps","block","dropdown_direction","getFieldValue","statementToCode","dropdown_direction_steps","valueToCode","ORDER_ATOMIC","NavBar","useState","dispatch","useDispatch","useSelector","bleStatus","t","useTranslation","onDisconnected","requestPermission","getDevice","connectGattServer","getServices","getChar","undefined","BLE_CONNECTED","writeBle","src","BlocklsLogo","alt","e","target","i18next","changeLanguage","onClick","BleLogo","BLOCKLY_THEME","THEME","fontStyle","weight","size","blockStyles","colour_blocks","colourPrimary","list_blocks","logic_blocks","loop_blocks","math_blocks","procedure_blocks","text_blocks","variable_blocks","variable_dynamic_blocks","hat_blocks","hat","categoryStyles","componentStyles","workspaceBackgroundColour","toolboxBackgroundColour","flyoutBackgroundColour","flyoutOpacity","scrollbarColour","scrollbarOpacity","App","generateCode","BlocklyJS","workspaceToCode","simpleWorkspace","setState","myButton","initInterpreter","expanded","readOnly","getBlocklyArea","trashcan","toolboxPosition","media","theme","move","scrollbars","drag","wheel","grid","spacing","length","snap","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","ExpandIcon","defaultLanguage","defaultValue","Bot","PlayIcon","PauseIcon","bleChar","use","HttpApi","LanguageDetector","initReactI18next","supportedLngs","fallbackLng","debug","detection","order","react","useSuspense","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById","BLE_DEVICE_NAME","BLE_SERVICE_NAME","BLE_CHAR_UUID","navigator","bluetooth","requestDevice","filters","optionalServices","gatt","getPrimaryService","getCharacteristic","getTextEncoder"],"mappings":"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","file":"static/js/main.fb88eaf0.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\n\r\nconst initialState = {\r\n  status: BLE.BLE_DISCONNECTED,\r\n  device: null,\r\n  server: null,\r\n  service: null,\r\n  char: null,\r\n};\r\n\r\nexport const bleSlice = createSlice({\r\n  name: \"ble\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    setDevice: (state, action) => {\r\n      state.device = action.payload;\r\n    },\r\n    setServer: (state, action) => {\r\n      state.server = action.payload;\r\n    },\r\n    setService: (state, action) => {\r\n      state.service = action.payload;\r\n    },\r\n    setchar: (state, action) => {\r\n      state.char = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus, setDevice, setServer, setService, setchar } = bleSlice.actions;\r\nexport default bleSlice.reducer;\r\n","import { BLOCKLY_CATEGORIES_CONSTANTS } from \"./blocklyCategories\";\r\n\r\nexport const CONSTANTS = {\r\n  LANGUAGE: {\r\n    RUSSIAN: \"ru\",\r\n    ENGLISH: \"en\",\r\n  },\r\n  BLOCKS: {\r\n    ROTATION_BLOCK: {\r\n      ENGLISH: \"Rotation\",\r\n      RUSSIAN: \"вращение\",\r\n    },\r\n    START_BLOCK: {\r\n      ENGLISH: \"Start Program\",\r\n      RUSSIAN: \"запустить программу\",\r\n    },\r\n    MYBLOCK: {\r\n      ENGLISH: \"Show Alert\",\r\n      RUSSIAN: \"Показать оповещение\",\r\n    },\r\n    DIRECTION_BLOCK: {\r\n      ENGLISH: \"MOVE\",\r\n      RUSSIAN: \"двигаться\",\r\n      DIRECTIONS_ENGLISH: {\r\n        FORWARD: \"FORWARD\",\r\n        BACKWARD: \"BACKWARD\",\r\n        LEFT: \"LEFT\",\r\n        RIGHT: \"RIGHT \",\r\n      },\r\n      DIRECTIONS_RUSSIAN: {\r\n        FORWARD: \"вперед\",\r\n        BACKWARD: \"назад\",\r\n        LEFT: \"левый\",\r\n        RIGHT: \"Правильно\",\r\n      },\r\n    },\r\n  },\r\n  CATERGORIES: {\r\n    SMARTY_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.SMARTY,\r\n      RUSSIAN: BLOCKLY_CATEGORIES_CONSTANTS.SMARTY,\r\n    },\r\n    LOGIC_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.LOGIC,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    LOOPS_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.LOOPS,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    MATH_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.MATH,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    TEXT_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.TEXT,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    LISTS_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.LISTS,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    COLOUR_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.COLOUR,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    FUCNTIONS_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.FUNCTIONS,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n  },\r\n};\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport languageReducer from \"../features/language/languageSlice\";\nimport bleReducer from \"../features/ble/bleSlice\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nconst customizedMiddleware = getDefaultMiddleware({\n  serializableCheck: false,\n});\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    language: languageReducer,\n    ble: bleReducer,\n  },\n  middleware: (getDefaultMiddleware) => customizedMiddleware,\n});\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nconst initialState = {\r\n  language: CONSTANTS.LANGUAGE.ENGLISH,\r\n};\r\n\r\nexport const languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState,\r\n  reducers: {\r\n    setLanguage: (state, action) => {\r\n      state.language = action.payload;\r\n      console.log(state.language);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLanguage } = languageSlice.actions;\r\nexport default languageSlice.reducer;\r\n","import { store } from \"../app/store\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nexport const SMARTY = {\r\n  async moveForward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD));\r\n  },\r\n  async moveBackward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD));\r\n  },\r\n  async moveLeft() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT));\r\n  },\r\n  async moveRight() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT));\r\n  },\r\n  async rotateSmarty(angle) {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \",\"+ angle));\r\n  },\r\n\r\n\r\n};\r\n\r\nexport const RUNCODE = (code) => {\r\n  eval(code);\r\n};\r\n","import i18next from \"i18next\";\r\n\r\nexport const BLOCKLY_CATEGORIES_CONSTANTS = {\r\n  // ENGLISH\r\n  EN_SMARTY: \"Smarty\",\r\n  EN_LOGIC: \"Logic\",\r\n  EN_LOOPS: \"Loops\",\r\n  EN_MATH: \"Math\",\r\n  EN_TEXT: \"Text\",\r\n  EN_LISTS: \"List\",\r\n  EN_COLOUR: \"Colour\",\r\n  EN_FUNCTIONS: \"Functions\",\r\n\r\n  // RUSSIAN\r\n  RU_SMARTY: \"Smarty\",\r\n  RU_LOGIC: \"логика\",\r\n  RU_LOOPS: \"петли\",\r\n  RU_MATH: \"математика\",\r\n  RU_TEXT: \"текст\",\r\n  RU_LISTS: \"списки\",\r\n  RU_COLOUR: \"цвет\",\r\n  RU_FUNCTIONS: \"функции\",\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_EN = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-4  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" font-sas text-lg text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_steps\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_RU = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-2  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas   text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_steps\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 ml-2 mr-2 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logic.03ebfc79.png\";","export default __webpack_public_path__ + \"static/media/robot.4d6a9af2.png\";","export default __webpack_public_path__ + \"static/media/loops.542a5fbd.png\";","export default __webpack_public_path__ + \"static/media/text_icon.bc1bdb19.png\";","export default __webpack_public_path__ + \"static/media/list_icon.40255541.png\";","export default __webpack_public_path__ + \"static/media/color.c54203bf.png\";","export default __webpack_public_path__ + \"static/media/function_icon.fa8147a0.png\";","export default __webpack_public_path__ + \"static/media/math.cb664f98.png\";","import Logic from \"../assets/images/logic.png\";\r\nimport Robot from \"../assets/images/robot.png\";\r\nimport loops from \"../assets/images/loops.png\";\r\nimport text_icon from \"../assets/images/text_icon.png\";\r\nimport list_icon from \"../assets/images/list_icon.png\";\r\nimport color from \"../assets/images/color.png\";\r\nimport function_icon from \"../assets/images/function_icon.png\";\r\nimport Math from \"../assets/images/math.png\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"./blocklyCategories\";\r\nimport i18next from \"i18next\";\r\n\r\nexport const toolboxDefaultState = (categoryName, rowDiv_, labelDom, iconDom_) => {\r\n  switch (categoryName) {\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY: {\r\n      rowDiv_.style.backgroundColor = \"#E75480\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      iconDom_.style.bac = \"black\";\r\n\r\n      // rowDiv_.style.fontFamily = \"FingerPaint\";\r\n      break;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC: {\r\n      rowDiv_.style.backgroundColor = \"#9400D3\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      iconDom_.style.bac = \"black\";\r\n\r\n      // rowDiv_.style.fontFamily = \"FingerPaint\";\r\n      break;\r\n    }\r\n\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS: {\r\n      rowDiv_.style.backgroundColor = \"#EF3038\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH: {\r\n      rowDiv_.style.backgroundColor = \"#9C3D54\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT: {\r\n      rowDiv_.style.backgroundColor = \"#FF8C00\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS: {\r\n      rowDiv_.style.backgroundColor = \"#FF69B4\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR: {\r\n      rowDiv_.style.backgroundColor = \"#EF4F4F\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS: {\r\n      rowDiv_.style.backgroundColor = \"#DF711B\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\nexport const setToolBoxIcons = (categoryName) => {\r\n  switch (categoryName) {\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY: {\r\n      const img = document.createElement(\"img\");\r\n      img.src = Robot;\r\n      img.className = \"w-20 h-14 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC: {\r\n      const img = document.createElement(\"img\");\r\n      img.src = Logic;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS: {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = loops;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH: {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Math;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT: {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = text_icon;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS: {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = list_icon;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR: {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = color;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS: {\r\n      const img = document.createElement(\"img\");\r\n      img.src = function_icon;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n  }\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { setToolBoxIcons, toolboxDefaultState } from \"../../../utils/toolBoxUtils\";\r\n\r\nexport default class CustomCategory extends Blockly.ToolboxCategory {\r\n  /**\r\n   * Constructor for a custom category.\r\n   * @override\r\n   */\r\n  constructor(categoryDef, toolbox, opt_parent) {\r\n    super(categoryDef, toolbox, opt_parent);\r\n  }\r\n\r\n  /** @override */\r\n  addColourBorder_() {\r\n    this.htmlDiv_.className = \"p-1 flex flex-col text-center text-white   \";\r\n    let labelDom = this.rowDiv_.getElementsByClassName(\"blocklyTreeLabel\")[0];\r\n    this.rowDiv_.className = \" flex flex-col rounded-xl  shadow-lg font-sans \";\r\n    toolboxDefaultState(this.name_, this.rowDiv_, labelDom, this.iconDom_);\r\n  }\r\n\r\n  /** @override */\r\n  setSelected(isSelected) {\r\n    var labelDom = this.rowDiv_.getElementsByClassName(\"blocklyTreeLabel\")[0];\r\n    if (isSelected) {\r\n      this.rowDiv_.style.backgroundColor = \"#2C1608\";\r\n      labelDom.style.color = \"white\";\r\n    } else {\r\n      toolboxDefaultState(this.name_, this.rowDiv_, labelDom, this.iconDom_);\r\n      labelDom.style.color = \"white\";\r\n    }\r\n    // This is used for accessibility purposes.\r\n    Blockly.utils.aria.setState(/** @type {!Element} */ (this.htmlDiv_), Blockly.utils.aria.State.SELECTED, isSelected);\r\n  }\r\n\r\n  /** @override */\r\n  createIconDom_() {\r\n    return setToolBoxIcons(this.name_);\r\n  }\r\n}\r\n\r\n// Blockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, Blockly.ToolboxCategory.registrationName, CustomCategory, true);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Blockly from \"blockly/core\";\r\nimport en from \"blockly/msg/en\";\r\nimport ru from \"blockly/msg/ru\";\r\nimport \"blockly/blocks\";\r\nimport \"./BlocklyComponent.css\";\r\nimport { INITIAL_TOOLBOX_JSON_EN } from \"./toolbox/en/toolbox\";\r\nimport { INITIAL_TOOLBOX_JSON_RU } from \"./toolbox/ru/toolbox\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { WorkspaceSearch } from \"@blockly/plugin-workspace-search\";\r\nimport \"./toolbox/customToolBox\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.blocklyDiv = React.createRef();\r\n    this.toolbox = React.createRef();\r\n    this.blocklyArea = this.props.blocklyArea;\r\n    this.modal = null;\r\n    this.currentLanguage = \"\";\r\n  }\r\n\r\n  setLanguage() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.setLocale(en);\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.setLocale(ru);\r\n    }\r\n  }\r\n\r\n  setBlocksLang() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.ENGLISH;\r\n      // Directions Block\r\n      Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\n      Blockly.Msg.DIRECTION_BLOCK_FORWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_BACKWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_LEFT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT;\r\n      Blockly.Msg.DIRECTION_BLOCK_RIGHT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT;\r\n      // Start Block\r\n      Blockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.ENGLISH;\r\n\r\n      //Rotation Block\r\n      Blockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH;\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.RUSSIAN;\r\n      // Directions Block\r\n      Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.RUSSIAN;\r\n      Blockly.Msg.DIRECTION_BLOCK_FORWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.FORWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_BACKWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.BACKWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_LEFT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.LEFT;\r\n      Blockly.Msg.DIRECTION_BLOCK_RIGHT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.RIGHT;\r\n\r\n      // Start Block\r\n      Blockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.RUSSIAN;\r\n\r\n      //Rotation Block\r\n      Blockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.RUSSIAN;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setLanguage();\r\n    this.setBlocksLang();\r\n    if (this.currentLanguage != this.props.language) {\r\n      if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_EN);\r\n      } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n        console.log(INITIAL_TOOLBOX_JSON_RU);\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_RU);\r\n      }\r\n      this.currentLanguage = this.props.language;\r\n    }\r\n  }\r\n\r\n  onResize(blocklyArea) {\r\n    console.log(\"fucntion callled\");\r\n    let element = blocklyArea;\r\n    let x = 0;\r\n    let y = 0;\r\n    do {\r\n      x += element.offsetLeft;\r\n      y += element.offsetTop;\r\n      element = element.offsetParent;\r\n    } while (element);\r\n    // Position blocklyDiv over blocklyArea.\r\n    this.blocklyDiv.current.style.left = x + \"px\";\r\n    this.blocklyDiv.current.style.top = y + \"px\";\r\n    this.blocklyDiv.current.style.width = this.blocklyArea.offsetWidth + \"px\";\r\n    this.blocklyDiv.current.style.height = this.blocklyArea.offsetHeight + \"px\";\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setLanguage();\r\n    this.initBlockly();\r\n  }\r\n\r\n  initBlockly() {\r\n    const { initialXml, children, blocklyArea, ...rest } = this.props;\r\n    Blockly.Scrollbar.scrollbarThickness = 0;\r\n    Blockly.Scrollbar.DEFAULT_SCROLLBAR_MARGIN = 0;\r\n    Blockly.Toolbox.height = 30;\r\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\r\n      toolbox: INITIAL_TOOLBOX_JSON_EN,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n    }\r\n    window.addEventListener(\"resize\", this.onResize(blocklyArea), false);\r\n    this.onResize(blocklyArea);\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n    this.primaryWorkspace.addChangeListener(this.props.onChange);\r\n    this.setSearchFuncBlockly();\r\n  }\r\n\r\n  setSearchFuncBlockly() {\r\n    const workspaceSearch = new WorkspaceSearch(this.primaryWorkspace);\r\n    workspaceSearch.init();\r\n  }\r\n\r\n  get workspace() {\r\n    return this.primaryWorkspace;\r\n  }\r\n\r\n  setXml(xml) {\r\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"w-full bottom-0 md:pb-20 lg:pb-0 pb-20  top-0 absolute  h-screen lg:h-full md:h-screen\" ref={this.blocklyDiv} id=\"blocklyDiv\" />\r\n        <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: \"none\" }} ref={this.toolbox}>\r\n          {children}\r\n        </xml>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    language: state.language.language,\r\n    bleState: state.ble.status,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BlocklyComponent);\r\n","import React from \"react\";\r\nimport BlocklyComponent from \"./BlocklyComponent\";\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow };\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet myBlock = {\r\n  type: \"afaq_custom_block\",\r\n  message0: \"%{BKY_MYBLOCK}\",\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 315,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"afaq_custom_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(myBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.ENGLISH;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction\",\r\n  message0: \"%{BKY_DIRECTION_BLOCK} %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [\"%{BKY_DIRECTION_BLOCK_FORWARD}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [\"%{BKY_DIRECTION_BLOCK_BACKWARD}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [\"%{BKY_DIRECTION_BLOCK_LEFT}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [\"%{BKY_DIRECTION_BLOCK_RIGHT}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n    \r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\nBlockly.Msg.DIRECTION_BLOCK_FORWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD;\r\nBlockly.Msg.DIRECTION_BLOCK_BACKWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD;\r\nBlockly.Msg.DIRECTION_BLOCK_LEFT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT;\r\nBlockly.Msg.DIRECTION_BLOCK_RIGHT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block\",\r\n  message0: \"%{BKY_START_BLOCK}  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.ENGLISH;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet rotationBlock ={\r\n    \"type\": \"rotation_block\",\r\n    \"message0\": \"%{BKY_ROTATION_BLOCK} %1\",\r\n    \"args0\": [\r\n      {\r\n        \"type\": \"field_angle\",\r\n        \"name\": \"angle\",\r\n        \"angle\": 90\r\n      }\r\n    ],\r\n    \"previousStatement\": null,\r\n    \"nextStatement\": null,\r\n    \"colour\": 230,\r\n    \"tooltip\": \"\",\r\n    \"helpUrl\": \"\"\r\n  }\r\n\r\nBlockly.Blocks[\"rotation_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet directionSteps = {\r\n    \"type\": \"direction_steps\",\r\n    \"message0\": \"%{BKY_DIRECTION_BLOCK} %1 %2\",\r\n    \"args0\": [\r\n      {\r\n        \"type\": \"field_dropdown\",\r\n        \"name\": \"direction_steps\",\r\n        \"options\": [\r\n\r\n            [\"%{BKY_DIRECTION_BLOCK_FORWARD}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [\"%{BKY_DIRECTION_BLOCK_BACKWARD}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [\"%{BKY_DIRECTION_BLOCK_LEFT}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [\"%{BKY_DIRECTION_BLOCK_RIGHT}\", CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n    \r\n        ]\r\n      },\r\n      {\r\n        \"type\": \"input_value\",\r\n        \"name\": \"number_input\",\r\n        \"check\": \"Number\"\r\n      }\r\n    ],\r\n    \"previousStatement\": null,\r\n    \"nextStatement\": null,\r\n    \"colour\": 230,\r\n    \"tooltip\": \"\",\r\n    \"helpUrl\": \"\"\r\n  }\r\nBlockly.Blocks[\"direction_steps\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionSteps);\r\n  },\r\n};\r\n\r\nBlockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\nBlockly.Msg.DIRECTION_BLOCK_FORWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD;\r\nBlockly.Msg.DIRECTION_BLOCK_BACKWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD;\r\nBlockly.Msg.DIRECTION_BLOCK_LEFT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT;\r\nBlockly.Msg.DIRECTION_BLOCK_RIGHT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly\";\r\n\r\nBlockly.JavaScript[\"afaq_custom_block\"] = function (block) {\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"alert('This is for test');\\n\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nBlockly.JavaScript[\"direction\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"await SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"await SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"await SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"await SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\nBlockly.JavaScript[\"start_block\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\nBlockly.JavaScript['rotation_block'] = function(block) {\r\n    var angle_angle = block.getFieldValue('angle');\r\n    var code = '\\nawait SMARTY.rotateSmarty('+angle_angle+');\\n';\r\n    return code;\r\n  };","\r\nimport * as Blockly from \"blockly\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nBlockly.JavaScript['direction_steps'] = function(block) {\r\n    var dropdown_direction_steps = block.getFieldValue('direction_steps');\r\n    if (dropdown_direction_steps=== CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n        return \"await SMARTY.moveForward();\\n\";\r\n      } else if (dropdown_direction_steps === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n        return \"await SMARTY.moveBackward();\\n\";\r\n      } else if (dropdown_direction_steps === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n        return \"await SMARTY.moveLeft();\\n\";\r\n      } else if (dropdown_direction_steps === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n        return \"await SMARTY.moveRight();\\n\";\r\n      }\r\n        \r\n    var value_number_input = Blockly.JavaScript.valueToCode(block, 'number_input', Blockly.JavaScript.ORDER_ATOMIC);\r\n    // TODO: Assemble JavaScript into code variable.\r\n    var code = '...;\\n';\r\n    return code;\r\n  };","export default __webpack_public_path__ + \"static/media/blocks_logo.bce3b0f2.png\";","export default __webpack_public_path__ + \"static/media/bluetooth.6914d994.png\";","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLanguage } from \"../features/language/languageSlice\";\r\nimport { changeStatus, setDevice, setServer, setService, setchar } from \"../features/ble/bleSlice\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nimport BlocklsLogo from \"../assets/images/blocks_logo.png\";\r\nimport UploadLogo from \"../assets/images/upload.png\";\r\nimport BleLogo from \"../assets/images/bluetooth.png\";\r\nimport { BLE } from \"../utils/bleConstants\";\r\nimport Popup from \"./Popup\";\r\nimport i18next from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function NavBar() {\r\n  const [navState, setnavState] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const language = useSelector((state) => state.language.language);\r\n  const bleStatus = useSelector((state) => state.ble.status);\r\n  const { t } = useTranslation();\r\n\r\n  const onDisconnected = () => {\r\n    console.log(\"Device disconnected!!!\");\r\n    dispatch(changeStatus(BLE.BLE_DISCONNECTED));\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    const device = await BLE.getDevice();\r\n    device.addEventListener(\"gattserverdisconnected\", onDisconnected);\r\n    const server = await BLE.connectGattServer(device);\r\n    const service = await BLE.getServices(server);\r\n    const char = await BLE.getChar(service);\r\n\r\n    if (device != undefined) {\r\n      dispatch(setDevice(device));\r\n      dispatch(setServer(server));\r\n      dispatch(setService(service));\r\n      dispatch(setchar(char));\r\n      dispatch(changeStatus(BLE.BLE_CONNECTED));\r\n      BLE.writeBle(\"This is from chrome\", char);\r\n    } else {\r\n      requestPermission();\r\n    }\r\n  };\r\n\r\n  const onLanguageChange = (e) => {\r\n    dispatch(setLanguage(e.target.value));\r\n    i18next.changeLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-pink-600   w-full\">\r\n      <nav className=\"flex  justify-center gap-x-0 md:gap-x-16 lg:gap-x-16 md:justify-between lg:justify-between pl-5 pr-10 items-center\">\r\n        <div className=\"p-2 flex  items-center justify-start\">\r\n          <img src={BlocklsLogo} className=\"w-12 h-14 \" alt=\"\" />\r\n          <label className=\"text-2xl  text-white font-sans font-medium ml-2\">{t(\"APP_TITLE\")}</label>\r\n        </div>\r\n        <div className=\"flex justify-center items-center invisible md:visible lg:visible\">\r\n          <label className=\"text-xl  text-white font-sans mr-2 uppercase lg:visible md:invisible \">{t(\"LANGUAGE\")}</label>\r\n          <select value={language} onChange={onLanguageChange} className=\" bg-gradient-to-r from-yellow-400 to-red-500 p-2 text-2xl shadow-lg pl-10 pr-10  rounded-2xl\">\r\n            <option value={CONSTANTS.LANGUAGE.ENGLISH} className=\"p-2 bg-blue-500 font-sans\">\r\n              English\r\n            </option>\r\n            <option value={CONSTANTS.LANGUAGE.RUSSIAN} className=\"p-2 bg-blue-500 font-sans\">\r\n              Russian\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\" invisible md:visible lg:visible \">\r\n          <ul className=\"flex items-center justify-between \">\r\n            <li>\r\n              <button\r\n                onClick={requestPermission}\r\n                className={\r\n                  \" ml-3  flex justify-center items-center rounded-md shadow-lg text-white hover:text-black uppercase font-medium text-sm  p-1 md:p-1 lg:p-3 md:p0 lg:p3 md:text-sm lg:text-xl \" +\r\n                  (bleStatus === BLE.BLE_CONNECTED ? \"bg-green-500 hover:bg-green-500\" : \"bg-yellow-300 hover:bg-yellow-500\")\r\n                }\r\n              >\r\n                <img src={BleLogo} className=\"w-8 h-8 mr-2\"></img>\r\n                {bleStatus === BLE.BLE_CONNECTED ? t(\"SUCESS\") : t(\"CONNECT_BLE\")}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fingerPaint.6f84c47d.ttf\";","import fingerPaint from \"../assets/fonts/fingerPaint.ttf\";\r\nexport const BLOCKLY_THEME = {\r\n  THEME: {\r\n    fontStyle: {\r\n      weight: \"bold\",\r\n      size: 12,\r\n    },\r\n    blockStyles: {\r\n      colour_blocks: {\r\n        colourPrimary: \"20\",\r\n      },\r\n      list_blocks: {\r\n        colourPrimary: \"260\",\r\n      },\r\n      logic_blocks: {\r\n        colourPrimary: \"210\",\r\n      },\r\n      loop_blocks: {\r\n        colourPrimary: \"120\",\r\n      },\r\n      math_blocks: {\r\n        colourPrimary: \"230\",\r\n      },\r\n      procedure_blocks: {\r\n        colourPrimary: \"290\",\r\n      },\r\n      text_blocks: {\r\n        colourPrimary: \"160\",\r\n      },\r\n      variable_blocks: {\r\n        colourPrimary: \"330\",\r\n      },\r\n      variable_dynamic_blocks: {\r\n        colourPrimary: \"310\",\r\n      },\r\n      hat_blocks: {\r\n        colourPrimary: \"330\",\r\n        hat: \"cap\",\r\n      },\r\n    },\r\n    categoryStyles: {},\r\n    componentStyles: {\r\n      workspaceBackgroundColour: \"#ECF0F1\",\r\n      toolboxBackgroundColour: \"#DB2777\",\r\n      flyoutBackgroundColour: \"#FFFFFF\",\r\n      flyoutOpacity: \"0.5\",\r\n      scrollbarColour: \"#FFFFFF\",\r\n      scrollbarOpacity: \"0.1\",\r\n      //   toolboxForegroundColour: \"#ffffff\",\r\n    },\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bot.fdb0c459.png\";","export default __webpack_public_path__ + \"static/media/play.74559e61.png\";","export default __webpack_public_path__ + \"static/media/pause.7d4f3660.png\";","export default __webpack_public_path__ + \"static/media/expand.75c14712.png\";","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BlocklyComponent from \"./modules/Blockly\";\r\nimport BlocklyJS from \"blockly/javascript\";\r\nimport { connect } from \"react-redux\";\r\nimport { BLE } from \"./utils/bleConstants\";\r\n//importing blocks\r\nimport \"./modules/Blockly/blocks\";\r\n//importing generators\r\nimport \"./modules/Blockly/generators\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport \"./modules/Blockly/toolbox/customToolBox\";\r\nimport { BLOCKLY_THEME } from \"./utils/blocklyTheme\";\r\nimport { RUNCODE } from \"./utils/smartyConstants\";\r\nimport Bot from \"./assets/images/bot.png\";\r\nimport PlayIcon from \"./assets/images/play.png\";\r\nimport PauseIcon from \"./assets/images/pause.png\";\r\nimport ExpandIcon from \"./assets/images/expand.png\";\r\nimport Editor, { DiffEditor, useMonaco, loader, Monaco } from \"@monaco-editor/react\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n    this.blocklyArea = React.createRef();\r\n    this.myButton = React.createRef();\r\n    this.code = \"\";\r\n    this.initInterpreter = null;\r\n    this.state = {\r\n      code: this.code,\r\n      expanded: false,\r\n    };\r\n  }\r\n  generateCode = () => {\r\n    this.code = BlocklyJS.workspaceToCode(this.simpleWorkspace.current);\r\n    console.log(this.code);\r\n    this.setState({\r\n      code: this.code,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateCode();\r\n  }\r\n\r\n  excecuteCode() {\r\n    RUNCODE(this.code);\r\n  }\r\n\r\n  getBlocklyArea() {\r\n    return this.blocklyArea;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen w-screen overflow-hidden \">\r\n        <div>\r\n          <NavBar></NavBar>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-2 w-full h-full\">\r\n          <div style={{ height: \"90%\" }} className={\"relative col-span-3 md:col-span-3 bg-red-500 w-full \" + (this.state.expanded ? \"lg:col-span-1\" : \"lg:col-span-2\")}>\r\n            <div ref={this.blocklyArea}>\r\n              <BlocklyComponent\r\n                ref={this.simpleWorkspace}\r\n                readOnly={false}\r\n                blocklyArea={this.getBlocklyArea}\r\n                trashcan={true}\r\n                toolboxPosition=\"start\"\r\n                media={process.env.PUBLIC_URL + \"media/\"}\r\n                theme={BLOCKLY_THEME.THEME}\r\n                move={{\r\n                  scrollbars: true,\r\n                  drag: true,\r\n                  wheel: true,\r\n                }}\r\n                grid={{ spacing: 50, length: 5, colour: \"gray\", snap: true }}\r\n                zoom={{ controls: true, wheel: true, startScale: 1.0, maxScale: 3, minScale: 0.3, scaleSpeed: 1.2, pinch: true }}\r\n                onChange={this.generateCode}\r\n                initialXml={`\r\n                <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <block type=\"start_block\" x=\"200\" y= \"200\"></block>\r\n                </xml>\r\n          `}\r\n              ></BlocklyComponent>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={\"flex flex-col p-5 justify-between items-center bg-blue-300 md:invisible lg:visible invisible \" + (this.state.expanded ? \"col-span-2\" : \"\")}>\r\n            {/* This is the generate btn */}\r\n\r\n            <div className=\"flex  justify-center  items-center  w-full h-full p-5 \">\r\n              <div className=\"w-full h-full bg-yellow-500 border-4 border-white  shadow-2xl rounded-t-2xl p-5\">\r\n                <div className=\"flex justify-center md:justify-end -mt-16 \">\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({ expanded: !this.state.expanded });\r\n                    }}\r\n                    className=\"w-14 h-18 p-1 object-top  rounded bg-purple-300 cursor-pointer \"\r\n                    src={ExpandIcon}\r\n                  ></img>\r\n                </div>\r\n                <Editor theme=\"light\" defaultLanguage=\"javascript\" value={this.code} defaultValue={this.code} height=\"100%\" />\r\n              </div>\r\n            </div>\r\n            {/* This is the card */}\r\n            <div className=\"flex flex-col  justify-center w-full p-5 mb-16 items-start\">\r\n              <div className=\"w-full py-4 px-8 bg-pink-600  shadow-lg rounded-lg \">\r\n                <div className=\"flex justify-center md:justify-end -mt-16\">\r\n                  <img className=\"w-18 h-20 object-top  rounded   border-yellow-500 \" src={Bot}></img>\r\n                </div>\r\n                <div>\r\n                  {/* This is the buttons */}\r\n                  <div className=\"flex justify-around items-center \">\r\n                    <button\r\n                      onClick={this.generateCode}\r\n                      className=\"p-5 flex flex-col text-white justify-center items-center text-2xl bg-blue-500 rounded-3xl\r\n                    shadow-3xl\"\r\n                    >\r\n                      <img className=\"w-16 h-16 \" src={PlayIcon}></img>\r\n                    </button>\r\n                    <button className=\"flex text-white flex-col justify-center items-center p-5 text-2xl  bg-blue-500 rounded-3xl shadow-3xl\">\r\n                      <img className=\"w-16 h-16 \" src={PauseIcon}></img>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    bleChar: state.ble.char,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\n// needed for translations\nimport i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport HttpApi from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { CONSTANTS } from \"./utils/constants\";\n\ni18next\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    supportedLngs: [\"en\", \"ru\"],\n    fallbackLng: \"en\",\n    debug: false,\n    // Options for language detector\n    detection: {\n      order: [\"path\", \"cookie\", \"htmlTag\"],\n      // caches: [\"cookie\"],\n    },\n    react: { useSuspense: false },\n    backend: {\n      loadPath: \"/assets/locales/{{lng}}/translation.json\",\n    },\n  });\n\ni18next.changeLanguage(CONSTANTS.LANGUAGE.ENGLISH);\n\nReactDOM.render(\n  // <Suspense fallback={loadingMarkup}>\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // </Suspense>,\n  document.getElementById(\"root\")\n);\n","export const BLE = {\r\n  BLE_DEVICE_NAME: \"Smarty\",\r\n  BLE_SERVICE_NAME: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  BLE_CHAR_UUID: \"beb5483e-36e1-4688-b7f5-ea07361b26a8\",\r\n  BLE_DISCONNECTED: \"disconnected\",\r\n  BLE_CONNECTED: \"Connected\",\r\n  getDevice() {\r\n    return navigator.bluetooth.requestDevice({ filters: [{ name: BLE.BLE_DEVICE_NAME }], optionalServices: [BLE.BLE_SERVICE_NAME] });\r\n  },\r\n  connectGattServer(device) {\r\n    return device.gatt.connect();\r\n  },\r\n  getServices(server) {\r\n    return server.getPrimaryService(BLE.BLE_SERVICE_NAME);\r\n  },\r\n  getChar(service) {\r\n    return service.getCharacteristic(BLE.BLE_CHAR_UUID);\r\n  },\r\n  writeBle(data, char) {\r\n    char.writeValue(BLE.getTextEncoder().encode(data));\r\n  },\r\n  getTextEncoder() {\r\n    return new TextEncoder();\r\n  },\r\n};\r\n"],"sourceRoot":""}