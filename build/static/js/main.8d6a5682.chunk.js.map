{"version":3,"sources":["utils/bleConstants.js","features/modal/modalSlice.js","features/ble/bleSlice.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","features/language/languageSlice.js","utils/constants.js","utils/smartyConstants.js","assets/images/blocks_logo.png","modules/LoginModule/LoginComponent.jsx","modules/Blockly/toolbox/en/toolbox.js","utils/blocklyCategories.js","modules/Blockly/toolbox/ru/toolbox.js","assets/images/robot.png","assets/images/bot.png","modules/Blockly/blocklyModal/index.js","utils/blockConstants.js","modules/Blockly/blocks-en/directionBlock.js","modules/Blockly/blocks-en/startBlock.js","modules/Blockly/blocks-en/rotationBlock.js","modules/Blockly/blocks-en/getDistanceBlock.js","modules/Blockly/blocks-ru/directionBlock.js","modules/Blockly/blocks-ru/startBlock.js","modules/Blockly/blocks-ru/rotationBlock.js","modules/Blockly/blocks-ru/getDistanceBlock.js","modules/Blockly/generators/directionBlockGenerator.js","modules/Blockly/generators/startBlockGenerator.js","modules/Blockly/generators/rotationBlockGenerator.js","modules/Blockly/generators/getDistanceGenerator.js","modules/Blockly/BlocklyComponent.jsx","modules/Blockly/index.js","assets/images/bluetooth.png","components/NavBar.jsx","utils/blocklyTheme.js","assets/images/play.png","assets/images/pause.png","assets/images/expand.png","BlocklySingleMode.js","assets/images/add.png","assets/images/cancel.png","modules/AddDeviceModule/AddDeviceComponent.jsx","modules/Devices/DevicesComponent.jsx","routing/router.jsx","index.js"],"names":["BLE","BLE_DEVICE_NAME","BLE_SERVICE_NAME","BLE_CHAR_UUID","BLE_DISCONNECTED","BLE_CONNECTED","getDevice","navigator","bluetooth","requestDevice","filters","name","optionalServices","connectGattServer","device","gatt","connect","getServices","server","getPrimaryService","getChar","service","getCharacteristic","writeBle","data","char","writeValue","getTextEncoder","encode","TextEncoder","modalSlice","createSlice","initialState","status","reducers","changeStatus","state","action","payload","actions","bleSlice","setDevice","setServer","setService","setchar","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","value","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","customizedMiddleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","counter","counterReducer","language","languageReducer","ble","bleReducer","modal","modalReducer","middleware","CONSTANTS","LANGUAGE","ENGLISH","languageSlice","setLanguage","console","log","RUSSIAN","SMARTY","moveForward","getState","moveBackward","BLOCKS","DIRECTION_BLOCK","DIRECTIONS_ENGLISH","BACKWARD","moveLeft","LEFT","moveRight","RIGHT","rotateSmarty","angle","ROTATION_BLOCK","getDistance","readValue","TextDecoder","decode","RUNCODE","code","eval","LoginComponent","className","src","BlockLogo","alt","for","method","type","placeholder","id","href","onClick","props","history","push","Component","withRouter","INITIAL_TOOLBOX_JSON_EN","kind","contents","cssConfig","container","row","label","icon","blockxml","custom","INITIAL_TOOLBOX_JSON_RU","Modal","title","buttonText","workspace","this","title_","workspace_","lastFocusableEl_","firstFocusableEl_","htmlDiv_","boundEvents_","shouldCloseOnOverlayClick","shouldCloseOnEsc","render","event","Blockly","remove","show","RTL","widgetDispose_","widgetCreate_","focusableEls","querySelectorAll","length","classList","contains","focus","hide","widgetDiv","DIV","dom","addClass","appendChild","removeClass","e","document","activeElement","preventDefault","keyCode","KeyCodes","TAB","stopPropagation","shiftKey","handleBackwardTab_","handleForwardTab_","ESC","node","thisObject","func","createElement","modalContainer","setAttribute","img","Bot","Robot","addEvent_","handleKeyDown_","modalHeader","renderHeader_","modalContent","renderContent_","modalFooter","exitButton","innerHTML","onCancel_","renderFooter_","headerContainer","modalTitle","createTextNode","_contentContainer","_footerContainer","register","BLOCKS_LANGUAGE_CONSTANTS","START_BLOCK","FORWARD","DIRECTIONS_RUSSIAN","GET_DISTANCE_BLOCK","EMGLISH","directionBlock","message0","args0","options","previousStatement","nextStatement","colour","tooltip","helpUrl","init","jsonInit","startBlock","align","rotationBlock","getDistanceBlock","output","block","dropdown_direction","getFieldValue","statementToCode","ORDER_NONE","BlocklyComponent","blocklyDiv","React","createRef","toolbox","blocklyArea","currentLanguage","bleState","setLocale","en","ru","Msg","LOGIC_CATEGORY_NAME","CATERGORIES","LOGIC_CATEGORY","primaryWorkspace","updateToolbox","t","element","x","y","offsetLeft","offsetTop","offsetParent","current","style","left","top","width","offsetWidth","height","offsetHeight","svgResize","initBlockly","initialXml","children","rest","Scrollbar","scrollbarThickness","DEFAULT_SCROLLBAR_MARGIN","Toolbox","inject","Xml","domToWorkspace","textToDom","window","addEventListener","onResize","addChangeListener","onChange","setSearchFuncBlockly","WorkspaceSearch","xml","Fragment","ref","xmlns","is","display","withTranslation","NavBar","useState","dispatch","useDispatch","useSelector","bleStatus","useTranslation","onDisconnected","requestPermission","undefined","BlocklsLogo","target","i18next","changeLanguage","BleLogo","BLOCKLY_THEME","THEME","fontStyle","weight","size","blockStyles","colour_blocks","colourPrimary","list_blocks","logic_blocks","loop_blocks","math_blocks","procedure_blocks","text_blocks","variable_blocks","variable_dynamic_blocks","hat_blocks","hat","categoryStyles","componentStyles","workspaceBackgroundColour","toolboxBackgroundColour","flyoutBackgroundColour","flyoutOpacity","scrollbarColour","scrollbarOpacity","BlocklySingleMode","generateCode","BlocklyJS","workspaceToCode","simpleWorkspace","setState","myButton","initInterpreter","expanded","readOnly","getBlocklyArea","trashcan","toolboxPosition","media","theme","move","scrollbars","drag","wheel","grid","spacing","snap","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","ExpandIcon","defaultLanguage","defaultValue","PlayIcon","PauseIcon","bleChar","AddDeviceComponent","CancelLogo","autocomplete","required","modalState","DevicesComponent","rows","Blocks_logo","BluetoothLogo","hidden","Add_logo","dummpyData","RouterComponent","path","exact","use","HttpApi","LanguageDetector","initReactI18next","supportedLngs","fallbackLng","debug","detection","order","react","useSuspense","backend","loadPath","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d6a5682.chunk.js","sourcesContent":["export const BLE = {\r\n  BLE_DEVICE_NAME: \"Long name works now\",\r\n  BLE_SERVICE_NAME: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  BLE_CHAR_UUID: \"beb5483e-36e1-4688-b7f5-ea07361b26a8\",\r\n  BLE_DISCONNECTED: \"disconnected\",\r\n  BLE_CONNECTED: \"Connected\",\r\n  getDevice() {\r\n    return navigator.bluetooth.requestDevice({ filters: [{ name: BLE.BLE_DEVICE_NAME }], optionalServices: [BLE.BLE_SERVICE_NAME] });\r\n  },\r\n  connectGattServer(device) {\r\n    return device.gatt.connect();\r\n  },\r\n  getServices(server) {\r\n    return server.getPrimaryService(BLE.BLE_SERVICE_NAME);\r\n  },\r\n  getChar(service) {\r\n    return service.getCharacteristic(BLE.BLE_CHAR_UUID);\r\n  },\r\n  writeBle(data, char) {\r\n    char.writeValue(BLE.getTextEncoder().encode(data));\r\n  },\r\n  getTextEncoder() {\r\n    return new TextEncoder();\r\n  },\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  status: false,\r\n};\r\n\r\nexport const modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus } = modalSlice.actions;\r\nexport default modalSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\n\r\nconst initialState = {\r\n  status: BLE.BLE_DISCONNECTED,\r\n  device: null,\r\n  server: null,\r\n  service: null,\r\n  char: null,\r\n};\r\n\r\nexport const bleSlice = createSlice({\r\n  name: \"ble\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    setDevice: (state, action) => {\r\n      state.device = action.payload;\r\n    },\r\n    setServer: (state, action) => {\r\n      state.server = action.payload;\r\n    },\r\n    setService: (state, action) => {\r\n      state.service = action.payload;\r\n    },\r\n    setchar: (state, action) => {\r\n      state.char = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus, setDevice, setServer, setService, setchar } = bleSlice.actions;\r\nexport default bleSlice.reducer;\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport languageReducer from \"../features/language/languageSlice\";\nimport bleReducer from \"../features/ble/bleSlice\";\nimport modalReducer from \"../features/modal/modalSlice\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\n// /This si faetstaese\nconst customizedMiddleware = getDefaultMiddleware({\n  serializableCheck: false,\n});\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    language: languageReducer,\n    ble: bleReducer,\n    modal: modalReducer,\n  },\n  middleware: (getDefaultMiddleware) => customizedMiddleware,\n});\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nconst initialState = {\r\n  language: CONSTANTS.LANGUAGE.ENGLISH,\r\n};\r\n\r\nexport const languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState,\r\n  reducers: {\r\n    setLanguage: (state, action) => {\r\n      state.language = action.payload;\r\n      console.log(state.language);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLanguage } = languageSlice.actions;\r\nexport default languageSlice.reducer;\r\n","export const CONSTANTS = {\r\n  LANGUAGE: {\r\n    RUSSIAN: \"ru\",\r\n    ENGLISH: \"en\",\r\n  },\r\n};\r\n","import { store } from \"../app/store\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nexport const SMARTY = {\r\n  async moveForward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(\"{ 'ssid' : 'Notion360' , 'pass' : 'notion36@' , 'mode' : 'wifi' }\"));\r\n  },\r\n  async moveBackward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD));\r\n  },\r\n  async moveLeft() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT));\r\n  },\r\n  async moveRight() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT));\r\n  },\r\n  async rotateSmarty(angle) {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \",\" + angle));\r\n  },\r\n  async getDistance() {\r\n    let value = await store.getState().ble.char.readValue();\r\n    console.log(new TextDecoder().decode(value));\r\n    return new TextDecoder().decode(value);\r\n  },\r\n/////////////////////////\r\n// async moveForwardSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.FORWARD +\",\"+ num));\r\n// },\r\n// async moveBackwardSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.BACKWARD +\",\"+ num));\r\n// },\r\n// async moveLeftSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.LEFT +\",\"+ num));\r\n// },\r\n// async moveRightSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.RIGHT +\",\"+ num));\r\n// },\r\n\r\n};\r\n\r\nexport const RUNCODE = (code) => {\r\n  eval(code);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/blocks_logo.bce3b0f2.png\";","import React, { Component } from \"react\";\r\nimport BlockLogo from \"../../assets/images/blocks_logo.png\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass LoginComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"font-san\">\r\n        <div className=\"relative min-h-screen flex flex-col sm:justify-center items-center bg-login_back bg-no-repeat bg-cover bg-center \">\r\n          <div className=\"relative sm:max-w-sm w-full shadow-2xl\">\r\n            <div className=\"card bg-blue-400 shadow-lg  w-full h-full rounded-3xl absolute  transform -rotate-6\"></div>\r\n            <div className=\"card bg-red-400 shadow-lg  w-full h-full rounded-3xl absolute  transform rotate-6\"></div>\r\n\r\n            <div className=\"relative w-full rounded-3xl  px-6 py-4 bg-gray-100 shadow-md\">\r\n              <div className=\"flex justify-center items-start\">\r\n                <img className=\"w-16 h-18\" src={BlockLogo} alt=\"\" />\r\n              </div>\r\n              <label for=\"\" className=\"block text-2xl mt-3 text-gray-700 text-center font-semibold\">\r\n                Blockly\r\n              </label>\r\n              <form method=\"#\" action=\"#\" className=\"mt-10\">\r\n                <div>\r\n                  <input type=\"email\" placeholder=\"Email\" className=\"mt-1 p-3 block w-full border-none bg-gray-100 h-11 rounded-xl shadow-lg hover:bg-blue-100 focus:bg-blue-100 focus:ring-0\"></input>\r\n                </div>\r\n\r\n                <div className=\"mt-7\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"mt-1 block w-full p-3 border-none bg-gray-100 h-11 rounded-xl shadow-lg hover:bg-blue-100 focus:bg-blue-100 focus:ring-0\"\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className=\"mt-7 flex\">\r\n                  <label for=\"remember_me\" className=\"inline-flex items-center w-full cursor-pointer\">\r\n                    <input\r\n                      id=\"remember_me\"\r\n                      type=\"checkbox\"\r\n                      className=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                      name=\"remember\"\r\n                    ></input>\r\n                    <span className=\"ml-2 text-sm text-gray-600\">Remember me</span>\r\n                  </label>\r\n\r\n                  <div className=\"w-full text-right\">\r\n                    <a className=\"underline text-sm text-gray-600 hover:text-gray-900\" href=\"#\">\r\n                      Forgot Password\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-7 flex justify-center items-center gap-2\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.history.push(\"blockly\");\r\n                    }}\r\n                    className=\"bg-blue-500 w-1/2 py-3 rounded-xl text-white shadow-xl hover:shadow-inner focus:outline-none transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\"\r\n                  >\r\n                    Login Single Mode\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.history.push(\"devices\");\r\n                    }}\r\n                    className=\"bg-red-500 w-1/2 py-3 rounded-xl text-white shadow-xl hover:shadow-inner focus:outline-none transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\"\r\n                  >\r\n                    Login Mulitple Mode\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"flex mt-7 items-center text-center\">\r\n                  <hr className=\"border-gray-300 border-1 w-full rounded-md\"></hr>\r\n                  <label className=\"block font-medium text-sm text-gray-600 w-full\">Accede con</label>\r\n                  <hr className=\"border-gray-300 border-1 w-full rounded-md\"></hr>\r\n                </div>\r\n\r\n                <div className=\"flex mt-7 justify-center w-full\">\r\n                  <button className=\"mr-5 bg-blue-500 border-none px-4 py-2 rounded-xl cursor-pointer text-white shadow-xl hover:shadow-inner transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\">\r\n                    Facebook\r\n                  </button>\r\n\r\n                  <button className=\"bg-red-500 border-none px-4 py-2 rounded-xl cursor-pointer text-white shadow-xl hover:shadow-inner transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\">\r\n                    Google\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"mt-7\">\r\n                  <div className=\"flex justify-center items-center\">\r\n                    <label className=\"mr-2\">BinaryBitz</label>\r\n                    <a href=\"#\" className=\" text-blue-500 transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\">\r\n                      allRightsReserved@2021\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LoginComponent);\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_EN = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-4  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" font-sas text-lg text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_en\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block_en\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block_en\",\r\n        },\r\n        // {\r\n        //   kind: \"block\",\r\n        //   type: \"direction_steps\",\r\n        // },\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance_en\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export const BLOCKLY_CATEGORIES_CONSTANTS = {\r\n  // ENGLISH\r\n  EN_SMARTY: \"Smarty\",\r\n  EN_LOGIC: \"Logic\",\r\n  EN_LOOPS: \"Loops\",\r\n  EN_MATH: \"Math\",\r\n  EN_TEXT: \"Text\",\r\n  EN_LISTS: \"List\",\r\n  EN_COLOUR: \"Colour\",\r\n  EN_FUNCTIONS: \"Functions\",\r\n\r\n  // RUSSIAN\r\n  RU_SMARTY: \"Smarty\",\r\n  RU_LOGIC: \"логика\",\r\n  RU_LOOPS: \"петли\",\r\n  RU_MATH: \"математика\",\r\n  RU_TEXT: \"текст\",\r\n  RU_LISTS: \"списки\",\r\n  RU_COLOUR: \"цвет\",\r\n  RU_FUNCTIONS: \"функции\",\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_RU = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-2  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas   text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_ru\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block_ru\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block_ru\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance_ru\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 ml-2 mr-2 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/robot.4d6a9af2.png\";","export default __webpack_public_path__ + \"static/media/bot.fdb0c459.png\";","/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n/**\r\n * @fileoverview Class responsible for creating a Blockly modal.\r\n * @author aschmiedt@google.com (Abby Schmiedt)\r\n */\r\n\r\nimport * as Blockly from \"blockly/core\";\r\nimport Robot from \"../../../assets/images/robot.png\";\r\nimport Bot from \"../../../assets/images/bot.png\";\r\n\r\n/**\r\n * Class responsible for creating a Blockly modal.\r\n */\r\nexport class Modal {\r\n  /**\r\n   * Constructor for creating a Blockly modal.\r\n   * @param {string} title The title for the modal.\r\n   * @param {!Blockly.WorkspaceSvg} workspace The workspace to display the modal\r\n   *     over.\r\n   */\r\n  constructor(title, buttonText, workspace) {\r\n    /**\r\n     * The title for the modal.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.title_ = title;\r\n\r\n    /**\r\n     * The workspace to display the modal over.\r\n     * @type {!Blockly.WorkspaceSvg}\r\n     * @protected\r\n     */\r\n    this.workspace_ = workspace;\r\n\r\n    /**\r\n     * The last focusable element for the modal.\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.lastFocusableEl_ = null;\r\n\r\n    /**\r\n     * The first focusable element for the modal.\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.firstFocusableEl_ = null;\r\n\r\n    /**\r\n     * HTML container for the modal.\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.htmlDiv_ = null;\r\n\r\n    /**\r\n     * Array holding info needed to unbind events.\r\n     * Used for disposing.\r\n     * Ex: [[node, name, func], [node, name, func]].\r\n     * @type {!Array.<Array<?>>}\r\n     * @private\r\n     */\r\n    this.boundEvents_ = [];\r\n\r\n    /**\r\n     * If true close the modal when the user clicks outside the modal.\r\n     * Otherwise, only close when user hits the 'X' button or escape.\r\n     * @type {boolean}\r\n     */\r\n    this.shouldCloseOnOverlayClick = true;\r\n\r\n    /**\r\n     * If true close the modal when the user hits escape. Otherwise, do not\r\n     * close on escape.\r\n     */\r\n    this.shouldCloseOnEsc = true;\r\n\r\n    // The button text\r\n    this.buttonText = buttonText;\r\n  }\r\n\r\n  /**\r\n   * Initialize a Blockly modal.\r\n   */\r\n  init() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Disposes of this modal.\r\n   * Unlink from all DOM elements and remove all event listeners\r\n   * to prevent memory leaks.\r\n   */\r\n  dispose() {\r\n    for (const event of this.boundEvents_) {\r\n      Blockly.unbindEvent_(event);\r\n    }\r\n    this.boundEvents_ = [];\r\n    if (this.htmlDiv_) {\r\n      this.htmlDiv_.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows the Blockly modal and focus on the first focusable element.\r\n   */\r\n  show() {\r\n    Blockly.WidgetDiv.show(this, this.workspace_.RTL, () => this.widgetDispose_());\r\n    this.widgetCreate_();\r\n    const focusableEls = this.htmlDiv_.querySelectorAll(\"a[href],\" + \"area[href], input:not([disabled]), select:not([disabled]),\" + 'textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\r\n    if (focusableEls.length > 0) {\r\n      this.firstFocusableEl_ = focusableEls[0];\r\n      this.lastFocusableEl_ = focusableEls[focusableEls.length - 1];\r\n      if (focusableEls[0].classList.contains(\"blocklyModalBtnClose\") && focusableEls.length > 1) {\r\n        focusableEls[1].focus();\r\n      } else {\r\n        this.firstFocusableEl_.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the Blockly modal.\r\n   */\r\n  hide() {\r\n    Blockly.WidgetDiv.hide();\r\n  }\r\n\r\n  /**\r\n   * The function to be called when the user hits the 'x' button.\r\n   * @protected\r\n   */\r\n  onCancel_() {\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * Add the Blockly modal to the widget div and position it properly.\r\n   * @protected\r\n   */\r\n  widgetCreate_() {\r\n    const widgetDiv = Blockly.WidgetDiv.DIV;\r\n    Blockly.utils.dom.addClass(this.htmlDiv_, \"blocklyModalOpen\");\r\n    widgetDiv.appendChild(this.htmlDiv_);\r\n  }\r\n\r\n  /**\r\n   * Disposes of any events or dom-references belonging to the editor.\r\n   * @protected\r\n   */\r\n  widgetDispose_() {\r\n    Blockly.utils.dom.removeClass(this.htmlDiv_, \"blocklyModalOpen\");\r\n  }\r\n\r\n  /**\r\n   * Handle when the user goes to the previous focusable element.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleBackwardTab_(e) {\r\n    if (document.activeElement === this.firstFocusableEl_) {\r\n      e.preventDefault();\r\n      this.lastFocusableEl_.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle when the user goes to the next focusable element.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleForwardTab_(e) {\r\n    if (document.activeElement === this.lastFocusableEl_) {\r\n      e.preventDefault();\r\n      this.firstFocusableEl_.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event for a Blockly modal. Handles forward tab, backward\r\n   * tab, and escape button.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleKeyDown_(e) {\r\n    if (e.keyCode === Blockly.utils.KeyCodes.TAB) {\r\n      // If there are no elements or there is one element don't wrap.\r\n      if (!this.firstFocusableEl_ || this.firstFocusableEl_ === this.lastFocusableEl_) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return;\r\n      }\r\n      if (e.shiftKey) {\r\n        this.handleBackwardTab_(e);\r\n      } else {\r\n        this.handleForwardTab_(e);\r\n      }\r\n    } else if (e.keyCode === Blockly.utils.KeyCodes.ESC && this.shouldCloseOnEsc) {\r\n      this.hide();\r\n    }\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Helper method for adding an event.\r\n   * @param {!Element} node Node upon which to listen.\r\n   * @param {string} name Event name to listen to (e.g. 'mousedown').\r\n   * @param {Object} thisObject The value of 'this' in the function.\r\n   * @param {!Function} func Function to call when event is triggered.\r\n   * @protected\r\n   */\r\n  addEvent_(node, name, thisObject, func) {\r\n    const event = Blockly.bindEventWithChecks_(node, name, thisObject, func);\r\n    this.boundEvents_.push(event);\r\n  }\r\n\r\n  /**\r\n   * Create all the dom elements for the modal.\r\n   */\r\n  render() {\r\n    // Create Overlay\r\n    this.htmlDiv_ = document.createElement(\"div\");\r\n    this.htmlDiv_.className = \"blocklyModalOverlay\";\r\n    // End Creating the Overlay\r\n\r\n    // Create Container\r\n    const modalContainer = document.createElement(\"div\");\r\n    modalContainer.className = \"blocklyModalContainer bg-yellow-500 text-white text-2xl  rounded-3xl font-sas\";\r\n    modalContainer.setAttribute(\"role\", \"dialog\");\r\n    modalContainer.setAttribute(\"aria-labelledby\", this.title_);\r\n    const img = document.createElement(\"img\");\r\n    if (this.buttonText === \"Try Again\" || this.buttonText === \"Попробуйте снова\") {\r\n      img.src = Bot;\r\n    } else {\r\n      img.src = Robot;\r\n    }\r\n    img.className = \"w-30 h-28 \";\r\n    img.alt = \"Lamp\";\r\n    modalContainer.appendChild(img);\r\n    // End creating the container\r\n\r\n    // Add Events\r\n    this.addEvent_(/** @type{!HTMLDivElement} */ modalContainer, \"keydown\", this, this.handleKeyDown_);\r\n\r\n    if (this.shouldCloseOnOverlayClick) {\r\n      this.addEvent_(this.htmlDiv_, \"click\", this, this.hide);\r\n      this.addEvent_(modalContainer, \"click\", this, (e) => {\r\n        e.stopPropagation();\r\n      });\r\n    }\r\n\r\n    // Create the header\r\n    const modalHeader = document.createElement(\"header\");\r\n    modalHeader.className = \"blocklyModalHeader\";\r\n\r\n    this.renderHeader_(modalHeader);\r\n\r\n    // const exitButton = document.createElement(\"button\");\r\n    // exitButton.className = \"blocklyModalBtn blocklyModalBtnClose\";\r\n    // this.addEvent_(exitButton, \"click\", this, this.onCancel_);\r\n    // modalHeader.appendChild(exitButton);\r\n    // End create header\r\n\r\n    // Create content\r\n    const modalContent = document.createElement(\"div\");\r\n    modalContent.className = \"blocklyModalContent\";\r\n    this.renderContent_(modalContent);\r\n    // End creating content\r\n\r\n    // Create Footer\r\n    const modalFooter = document.createElement(\"footer\");\r\n    modalFooter.className = \"flex justify-center items-center\";\r\n    const exitButton = document.createElement(\"button\");\r\n    exitButton.innerHTML = this.buttonText;\r\n    if (this.buttonText === \"Try Again\" || this.buttonText === \"Попробуйте снова\") {\r\n      exitButton.className = \"text-white mt-5 text-sm border-none p-4  bg-red-500 rounded-2xl shadow-lg\";\r\n    } else {\r\n      exitButton.className = \"text-white mt-5 text-sm border-none p-4 bg-purple-500  rounded-2xl shadow-lg\";\r\n    }\r\n    this.addEvent_(exitButton, \"click\", this, this.onCancel_);\r\n    modalFooter.appendChild(exitButton);\r\n\r\n    this.renderFooter_(modalFooter);\r\n    // End creating footer\r\n\r\n    modalContainer.appendChild(modalHeader);\r\n    modalContainer.appendChild(modalContent);\r\n    modalContainer.appendChild(modalFooter);\r\n    this.htmlDiv_.appendChild(modalContainer);\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal header.\r\n   * @param {HTMLElement} headerContainer The modal's header div.\r\n   * @protected\r\n   */\r\n  renderHeader_(headerContainer) {\r\n    const modalTitle = document.createElement(\"h2\");\r\n    modalTitle.className = \"blocklyModalHeaderTitle\";\r\n    modalTitle.appendChild(document.createTextNode(this.title_));\r\n    headerContainer.appendChild(modalTitle);\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal content div.\r\n   * @param {HTMLDivElement} _contentContainer The modal's content div.\r\n   * @protected\r\n   */\r\n  renderContent_(_contentContainer) {\r\n    // No-op on the base class.\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal footer.\r\n   * @param {HTMLElement} _footerContainer The modal's footer div.\r\n   * @protected\r\n   */\r\n  renderFooter_(_footerContainer) {\r\n    // No-op on the base class.\r\n  }\r\n}\r\n\r\nBlockly.Css.register([\r\n  `\r\n     .blocklyModalOverlay {\r\n       width: 100%;\r\n       height: 100%;\r\n       left: 0px;\r\n       top: 0px;\r\n       position: fixed;\r\n     }\r\n     .blocklyModalContainer {\r\n       border: 1px solid gray;\r\n       font-family: Helvetica;\r\n       padding: 1em;\r\n       width: 400px;\r\n       text-align : center;\r\n       display: flex;\r\n       flex-direction: column;\r\n       justify-content: center;\r\n       align-items: center;\r\n       box-shadow: 0px 10px 20px grey;\r\n       z-index: 100;\r\n       margin: 15% auto;\r\n     }\r\n     .blocklyModalHeader {\r\n       display: flex;\r\n       justify-content: space-between;\r\n       align-items: center;\r\n     }\r\n     .blocklyModalHeaderTitle {\r\n       margin-top: 0;\r\n       margin-bottom: 0;\r\n       font-size: 1.2em;\r\n       line-height: 1.25;\r\n     }\r\n     .blocklyModalHeader .blocklyModalBtn {\r\n       margin-left: auto;\r\n       height: fit-content;\r\n     }\r\n     .blocklyModalBtnClose:before {\r\n       content: \"\\\\2715\";\r\n     }\r\n     .blocklyModalBtn {\r\n       margin-right: .5em;\r\n       border: 1px solid gray;\r\n       font-weight: 500;\r\n       color: gray;\r\n       border-radius: 25px;\r\n     }\r\n     .blocklyModalBtnPrimary {\r\n       background-color: gray;\r\n       color: white;\r\n     }`,\r\n]);\r\n","export const BLOCKS_LANGUAGE_CONSTANTS = {\r\n  BLOCKS: {\r\n    ROTATION_BLOCK: {\r\n      ENGLISH: \"Rotation\",\r\n      RUSSIAN: \"вращение\",\r\n    },\r\n    START_BLOCK: {\r\n      ENGLISH: \"Start Program\",\r\n      RUSSIAN: \"запустить программу\",\r\n    },\r\n    DIRECTION_BLOCK: {\r\n      ENGLISH: \"MOVE\",\r\n      RUSSIAN: \"двигаться\",\r\n      DIRECTIONS_ENGLISH: {\r\n        FORWARD: \"FORWARD\",\r\n        BACKWARD: \"BACKWARD\",\r\n        LEFT: \"LEFT\",\r\n        RIGHT: \"RIGHT \",\r\n      },\r\n      DIRECTIONS_RUSSIAN: {\r\n        FORWARD: \"вперед\",\r\n        BACKWARD: \"назад\",\r\n        LEFT: \"левый\",\r\n        RIGHT: \"Правильно\",\r\n      },\r\n    },\r\n    GET_DISTANCE_BLOCK: {\r\n      EMGLISH: \"Get Distance\",\r\n      RUSSIAN: \"Получить расстояние\",\r\n    },\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.START_BLOCK.ENGLISH + \"  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet rotationBlock = {\r\n  type: \"rotation_block_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_angle\",\r\n      name: \"angle\",\r\n      angle: 90,\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"rotation_block_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.GET_DISTANCE_BLOCK.EMGLISH,\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.RUSSIAN + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.FORWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.BACKWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.LEFT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.RIGHT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.START_BLOCK.RUSSIAN + \"  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet rotationBlock = {\r\n  type: \"rotation_block_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.ROTATION_BLOCK.RUSSIAN + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_angle\",\r\n      name: \"angle\",\r\n      angle: 90,\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"rotation_block_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.GET_DISTANCE_BLOCK.RUSSIAN,\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\n// For English Block\r\nBlockly.JavaScript[\"direction_en\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"\\nawait SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"\\nawait SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"\\nawait SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"\\nawait SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\n// For Russian Block\r\nBlockly.JavaScript[\"direction_ru\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"\\nawait SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"\\nawait SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"\\nawait SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"\\nawait SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\n// For english block\r\nBlockly.JavaScript[\"start_block_en\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n\r\n// For russian block\r\nBlockly.JavaScript[\"start_block_ru\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\n// For english block\r\nBlockly.JavaScript[\"rotation_block_en\"] = function (block) {\r\n  var angle_angle = block.getFieldValue(\"angle\");\r\n  var code = \"\\nawait SMARTY.rotateSmarty(\" + angle_angle + \");\\n\";\r\n  return code;\r\n};\r\n\r\n// For russian block\r\nBlockly.JavaScript[\"rotation_block_ru\"] = function (block) {\r\n  var angle_angle = block.getFieldValue(\"angle\");\r\n  var code = \"\\nawait SMARTY.rotateSmarty(\" + angle_angle + \");\\n\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\n// For English Block\r\nBlockly.JavaScript[\"getdistance_en\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n\r\n// For russian  Block\r\nBlockly.JavaScript[\"getdistance_ru\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Blockly from \"blockly/core\";\r\nimport en from \"blockly/msg/en\";\r\nimport ru from \"blockly/msg/ru\";\r\nimport \"blockly/blocks\";\r\nimport \"./BlocklyComponent.css\";\r\nimport { INITIAL_TOOLBOX_JSON_EN } from \"./toolbox/en/toolbox\";\r\nimport { INITIAL_TOOLBOX_JSON_RU } from \"./toolbox/ru/toolbox\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { WorkspaceSearch } from \"@blockly/plugin-workspace-search\";\r\nimport { Modal } from \"./blocklyModal\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n// importing blocks\r\nimport \"./blocks-en\";\r\nimport \"./blocks-ru\";\r\nimport \"./generators\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.blocklyDiv = React.createRef();\r\n    this.toolbox = React.createRef();\r\n    this.blocklyArea = this.props.blocklyArea;\r\n    this.modal = null;\r\n    this.currentLanguage = \"\";\r\n    this.bleState = BLE.BLE_DISCONNECTED;\r\n  }\r\n\r\n  setLanguage() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.setLocale(en);\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.setLocale(ru);\r\n    }\r\n  }\r\n\r\n  setCategoryLang() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.ENGLISH;\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.RUSSIAN;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.currentLanguage !== this.props.language) {\r\n      this.setLanguage();\r\n      if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_EN);\r\n      } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n        console.log(INITIAL_TOOLBOX_JSON_RU);\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_RU);\r\n      }\r\n      this.currentLanguage = this.props.language;\r\n    }\r\n\r\n    if (this.bleState !== this.props.bleState) {\r\n      const { t } = this.props;\r\n      if (this.props.bleState === BLE.BLE_CONNECTED) {\r\n        this.modal = new Modal(t(\"SMARTY_CONNECTION_SUCESS\"), t(\"OK\"), this.primaryWorkspace);\r\n        this.modal.init();\r\n        this.modal.show();\r\n      } else {\r\n        this.modal = new Modal(t(\"SMARTY_CONNECTION_FAILED\"), t(\"TRY_AGAIN\"), this.primaryWorkspace);\r\n        this.modal.init();\r\n        this.modal.show();\r\n      }\r\n      this.bleState = this.props.bleState;\r\n    }\r\n  }\r\n\r\n  onResize(blocklyArea) {\r\n    console.log(\"fucntion callled\");\r\n    let element = blocklyArea;\r\n    let x = 0;\r\n    let y = 0;\r\n    do {\r\n      x += element.offsetLeft;\r\n      y += element.offsetTop;\r\n      element = element.offsetParent;\r\n    } while (element);\r\n    // Position blocklyDiv over blocklyArea.\r\n    this.blocklyDiv.current.style.left = x + \"px\";\r\n    this.blocklyDiv.current.style.top = y + \"px\";\r\n    this.blocklyDiv.current.style.width = this.blocklyArea.offsetWidth + \"px\";\r\n    this.blocklyDiv.current.style.height = this.blocklyArea.offsetHeight + \"px\";\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setLanguage();\r\n    this.initBlockly();\r\n  }\r\n\r\n  initBlockly() {\r\n    const { initialXml, children, blocklyArea, ...rest } = this.props;\r\n    Blockly.Scrollbar.scrollbarThickness = 0;\r\n    Blockly.Scrollbar.DEFAULT_SCROLLBAR_MARGIN = 0;\r\n    Blockly.Toolbox.height = 30;\r\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\r\n      toolbox: INITIAL_TOOLBOX_JSON_EN,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n    }\r\n    window.addEventListener(\"resize\", this.onResize(blocklyArea), false);\r\n    this.onResize(blocklyArea);\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n    this.primaryWorkspace.addChangeListener(this.props.onChange);\r\n    this.setSearchFuncBlockly();\r\n  }\r\n\r\n  setSearchFuncBlockly() {\r\n    const workspaceSearch = new WorkspaceSearch(this.primaryWorkspace);\r\n    workspaceSearch.init();\r\n  }\r\n\r\n  get workspace() {\r\n    return this.primaryWorkspace;\r\n  }\r\n\r\n  setXml(xml) {\r\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"w-full bottom-0 md:pb-20 lg:pb-0 pb-20  top-0 absolute  h-screen lg:h-full md:h-screen\" ref={this.blocklyDiv} id=\"blocklyDiv\" />\r\n        <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: \"none\" }} ref={this.toolbox}>\r\n          {children}\r\n        </xml>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    language: state.language.language,\r\n    bleState: state.ble.status,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withTranslation()(BlocklyComponent));\r\n","import React from \"react\";\r\nimport BlocklyComponent from \"./BlocklyComponent\";\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow };\r\n","export default __webpack_public_path__ + \"static/media/bluetooth.6914d994.png\";","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLanguage } from \"../features/language/languageSlice\";\r\nimport { changeStatus, setDevice, setServer, setService, setchar } from \"../features/ble/bleSlice\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nimport BlocklsLogo from \"../assets/images/blocks_logo.png\";\r\nimport UploadLogo from \"../assets/images/upload.png\";\r\nimport BleLogo from \"../assets/images/bluetooth.png\";\r\nimport { BLE } from \"../utils/bleConstants\";\r\nimport Popup from \"./Popup\";\r\nimport i18next from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function NavBar() {\r\n  const [navState, setnavState] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const language = useSelector((state) => state.language.language);\r\n  const bleStatus = useSelector((state) => state.ble.status);\r\n  const { t } = useTranslation();\r\n\r\n  const onDisconnected = () => {\r\n    console.log(\"Device disconnected!!!\");\r\n    dispatch(changeStatus(BLE.BLE_DISCONNECTED));\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    const device = await BLE.getDevice();\r\n    device.addEventListener(\"gattserverdisconnected\", onDisconnected);\r\n    const server = await BLE.connectGattServer(device);\r\n    const service = await BLE.getServices(server);\r\n    const char = await BLE.getChar(service);\r\n\r\n    if (device != undefined) {\r\n      dispatch(setDevice(device));\r\n      dispatch(setServer(server));\r\n      dispatch(setService(service));\r\n      dispatch(setchar(char));\r\n      dispatch(changeStatus(BLE.BLE_CONNECTED));\r\n      BLE.writeBle(\"This is from chrome\", char);\r\n    } else {\r\n      requestPermission();\r\n    }\r\n  };\r\n\r\n  const onLanguageChange = (e) => {\r\n    dispatch(setLanguage(e.target.value));\r\n    i18next.changeLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-pink-600   w-full\">\r\n      <nav className=\"flex  justify-center gap-x-0 md:gap-x-16 lg:gap-x-16 md:justify-between lg:justify-between pl-5 pr-10 items-center\">\r\n        <div className=\"p-2 flex  items-center justify-start\">\r\n          <img src={BlocklsLogo} className=\"w-12 h-14 \" alt=\"\" />\r\n          <label className=\"text-2xl  text-white font-sans font-medium ml-2\">{t(\"APP_TITLE\")}</label>\r\n        </div>\r\n        <div className=\"flex justify-center items-center invisible md:visible lg:visible\">\r\n          <label className=\"text-xl  text-white font-sans mr-2 uppercase lg:visible md:invisible \">{t(\"LANGUAGE\")}</label>\r\n          <select value={language} onChange={onLanguageChange} className=\" bg-gradient-to-r from-yellow-400 to-red-500 p-2 text-2xl shadow-lg pl-10 pr-10  rounded-2xl\">\r\n            <option value={CONSTANTS.LANGUAGE.ENGLISH} className=\"p-2 bg-blue-500 font-sans\">\r\n              English\r\n            </option>\r\n            <option value={CONSTANTS.LANGUAGE.RUSSIAN} className=\"p-2 bg-blue-500 font-sans\">\r\n              Russian\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\" invisible md:visible lg:visible \">\r\n          <ul className=\"flex items-center justify-between \">\r\n            <li>\r\n              <button\r\n                onClick={requestPermission}\r\n                className={\r\n                  \" ml-3  flex justify-center items-center rounded-md shadow-lg text-white hover:text-black uppercase font-medium text-sm  p-1 md:p-1 lg:p-3 md:p0 lg:p3 md:text-sm lg:text-xl \" +\r\n                  (bleStatus === BLE.BLE_CONNECTED ? \"bg-green-500 hover:bg-green-500\" : \"bg-yellow-300 hover:bg-yellow-500\")\r\n                }\r\n              >\r\n                <img src={BleLogo} className=\"w-8 h-8 mr-2\"></img>\r\n                {bleStatus === BLE.BLE_CONNECTED ? t(\"SUCESS\") : t(\"CONNECT_BLE\")}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export const BLOCKLY_THEME = {\r\n  THEME: {\r\n    fontStyle: {\r\n      weight: \"bold\",\r\n      size: 12,\r\n    },\r\n    blockStyles: {\r\n      colour_blocks: {\r\n        colourPrimary: \"20\",\r\n      },\r\n      list_blocks: {\r\n        colourPrimary: \"260\",\r\n      },\r\n      logic_blocks: {\r\n        colourPrimary: \"210\",\r\n      },\r\n      loop_blocks: {\r\n        colourPrimary: \"120\",\r\n      },\r\n      math_blocks: {\r\n        colourPrimary: \"230\",\r\n      },\r\n      procedure_blocks: {\r\n        colourPrimary: \"290\",\r\n      },\r\n      text_blocks: {\r\n        colourPrimary: \"160\",\r\n      },\r\n      variable_blocks: {\r\n        colourPrimary: \"330\",\r\n      },\r\n      variable_dynamic_blocks: {\r\n        colourPrimary: \"310\",\r\n      },\r\n      hat_blocks: {\r\n        colourPrimary: \"330\",\r\n        hat: \"cap\",\r\n      },\r\n    },\r\n    categoryStyles: {},\r\n    componentStyles: {\r\n      workspaceBackgroundColour: \"#ECF0F1\",\r\n      toolboxBackgroundColour: \"#DB2777\",\r\n      flyoutBackgroundColour: \"#FFFFFF\",\r\n      flyoutOpacity: \"0.5\",\r\n      scrollbarColour: \"#FFFFFF\",\r\n      scrollbarOpacity: \"0.1\",\r\n      //   toolboxForegroundColour: \"#ffffff\",\r\n    },\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/play.74559e61.png\";","export default __webpack_public_path__ + \"static/media/pause.7d4f3660.png\";","export default __webpack_public_path__ + \"static/media/expand.75c14712.png\";","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BlocklyComponent from \"./modules/Blockly\";\r\nimport BlocklyJS from \"blockly/javascript\";\r\nimport { connect } from \"react-redux\";\r\n//importing blocks\r\nimport \"./modules/Blockly/blocks-en\";\r\n//importing generators\r\nimport \"./modules/Blockly/generators\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { BLOCKLY_THEME } from \"./utils/blocklyTheme\";\r\nimport { RUNCODE } from \"./utils/smartyConstants\";\r\nimport Bot from \"./assets/images/bot.png\";\r\nimport PlayIcon from \"./assets/images/play.png\";\r\nimport PauseIcon from \"./assets/images/pause.png\";\r\nimport ExpandIcon from \"./assets/images/expand.png\";\r\nimport Editor, { DiffEditor, useMonaco, loader, Monaco } from \"@monaco-editor/react\";\r\n\r\nclass BlocklySingleMode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n    this.blocklyArea = React.createRef();\r\n    this.myButton = React.createRef();\r\n    this.code = \"\";\r\n    this.initInterpreter = null;\r\n    this.state = {\r\n      code: this.code,\r\n      expanded: false,\r\n    };\r\n  }\r\n  generateCode = () => {\r\n    this.code = BlocklyJS.workspaceToCode(this.simpleWorkspace.current);\r\n    console.log(this.code);\r\n    this.setState({\r\n      code: this.code,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.generateCode();\r\n  }\r\n\r\n  getBlocklyArea() {\r\n    return this.blocklyArea;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen w-screen overflow-hidden \">\r\n        <div>\r\n          <NavBar></NavBar>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-2 w-full h-full\">\r\n          <div style={{ height: \"90%\" }} className={\"relative col-span-3 md:col-span-3 bg-red-500 w-full \" + (this.state.expanded ? \"lg:col-span-1\" : \"lg:col-span-2\")}>\r\n            <div ref={this.blocklyArea}>\r\n              <BlocklyComponent\r\n                ref={this.simpleWorkspace}\r\n                readOnly={false}\r\n                blocklyArea={this.getBlocklyArea}\r\n                trashcan={true}\r\n                toolboxPosition=\"start\"\r\n                media={process.env.PUBLIC_URL + \"media/\"}\r\n                theme={BLOCKLY_THEME.THEME}\r\n                move={{\r\n                  scrollbars: true,\r\n                  drag: true,\r\n                  wheel: true,\r\n                }}\r\n                grid={{ spacing: 50, length: 5, colour: \"gray\", snap: true }}\r\n                zoom={{ controls: true, wheel: true, startScale: 1.0, maxScale: 3, minScale: 0.3, scaleSpeed: 1.2, pinch: true }}\r\n                onChange={this.generateCode}\r\n                initialXml={`\r\n                <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <block type=\"start_block_en\" x=\"200\" y= \"200\"></block>\r\n                </xml>\r\n          `}\r\n              ></BlocklyComponent>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={\"flex flex-col p-5 justify-between items-center bg-blue-300 md:invisible lg:visible invisible \" + (this.state.expanded ? \"col-span-2\" : \"\")}>\r\n            {/* This is the generate btn */}\r\n\r\n            <div className=\"flex  justify-center  items-center  w-full h-full p-5 \">\r\n              <div className=\"w-full h-full bg-yellow-500 border-4 border-white  shadow-2xl rounded-t-2xl p-5\">\r\n                <div className=\"flex justify-center md:justify-end -mt-16 \">\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({ expanded: !this.state.expanded });\r\n                    }}\r\n                    className=\"w-14 h-18 p-1 object-top  rounded bg-purple-300 cursor-pointer \"\r\n                    src={ExpandIcon}\r\n                  ></img>\r\n                </div>\r\n                <Editor theme=\"light\" defaultLanguage=\"javascript\" value={this.code} defaultValue={this.code} height=\"100%\" />\r\n              </div>\r\n            </div>\r\n            {/* This is the card */}\r\n            <div className=\"flex flex-col  justify-center w-full p-5 mb-16 items-start\">\r\n              <div className=\"w-full py-4 px-8 bg-pink-600  shadow-lg rounded-lg \">\r\n                <div className=\"flex justify-center md:justify-end -mt-16\">\r\n                  <img className=\"w-18 h-20 object-top  rounded   border-yellow-500 \" src={Bot}></img>\r\n                </div>\r\n                <div>\r\n                  {/* This is the buttons */}\r\n                  <div className=\"flex justify-around items-center \">\r\n                    <button\r\n                      onClick={() => {\r\n                        RUNCODE(this.state.code);\r\n                      }}\r\n                      className=\"p-5 flex flex-col text-white justify-center items-center text-2xl bg-blue-500 rounded-3xl\r\n                    shadow-3xl\"\r\n                    >\r\n                      <img className=\"w-16 h-16 \" src={PlayIcon}></img>\r\n                    </button>\r\n                    <button className=\"flex text-white flex-col justify-center items-center p-5 text-2xl  bg-blue-500 rounded-3xl shadow-3xl\">\r\n                      <img className=\"w-16 h-16 \" src={PauseIcon}></img>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    bleChar: state.ble.char,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BlocklySingleMode);\r\n","export default __webpack_public_path__ + \"static/media/add.034e2b0c.png\";","export default __webpack_public_path__ + \"static/media/cancel.9d0a9f89.png\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeStatus } from \"../../features/modal/modalSlice\";\r\nimport CancelLogo from \"../../assets/images/cancel.png\";\r\n\r\nclass AddDeviceComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"modal h-screen w-full fixed left-0 top-0 flex justify-center items-center bg-black bg-opacity-50\">\r\n        <div className=\"bg-white rounded shadow-lg w-10/12 md:w-1/3\">\r\n          <div className=\"border-b px-4 py-2 flex justify-between items-center\">\r\n            <h3 className=\" text-2xl font-light\">Add Device</h3>\r\n            <button\r\n              className=\"text-black close-modal\"\r\n              onClick={() => {\r\n                this.props.dispatch(changeStatus(false));\r\n              }}\r\n            >\r\n              <img src={CancelLogo} className=\"w-6 h-6\"></img>\r\n            </button>\r\n          </div>\r\n          <div className=\"grid   w-full h-full place-items-center\">\r\n            <div className=\"w-full p-12 bg-white sm:w-8/12 md:w-full lg:w-full\">\r\n              <form className=\"mt-6\">\r\n                <div className=\"flex justify-between gap-3\"></div>\r\n                <label for=\"email\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                  Current Device Name\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"john.doe@company.com\"\r\n                  autocomplete=\"email\"\r\n                  className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                  required\r\n                />\r\n                <label for=\"password\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                  Current Ssid\r\n                </label>\r\n                <input\r\n                  placeholder=\"ssid\"\r\n                  autocomplete=\"new-password\"\r\n                  className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                  required\r\n                />\r\n                <label for=\"password-confirm\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                  Current Password\r\n                </label>\r\n                <input\r\n                  placeholder=\"Current Password\"\r\n                  autocomplete=\"new-password\"\r\n                  className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                  required\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end items-center w-100 border-t p-3\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.dispatch(changeStatus(false));\r\n              }}\r\n              className=\"bg-red-600 hover:bg-red-700 p-4 rounded text-white mr-1 close-modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.dispatch(changeStatus(false));\r\n              }}\r\n              className=\"bg-blue-600 hover:bg-blue-700 p-4 rounded text-white\"\r\n            >\r\n              Add Device\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    modalState: state.modal.status,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AddDeviceComponent);\r\n","import { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport BluetoothLogo from \"../../assets/images/bluetooth.png\";\r\nimport Blocks_logo from \"../../assets/images/blocks_logo.png\";\r\nimport Add_logo from \"../../assets/images/add.png\";\r\nimport AddDeviceComponent from \"../AddDeviceModule/AddDeviceComponent\";\r\nimport { changeStatus } from \"../../features/modal/modalSlice\";\r\n\r\nclass DevicesComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  dummpyData() {\r\n    var rows = [];\r\n    for (var x = 0; x < 4; x++) {\r\n      rows.push(<td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xl whitespace-nowrap p-4 text-left text-blueGray-700 \">Robot-1</td>);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"py-1 h-screen w-screen bg-login_back bg-center bg-no-repeat\">\r\n          {this.props.modalState && <AddDeviceComponent></AddDeviceComponent>}\r\n          {!this.props.modalState && (\r\n            <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4 mx-auto mt-24\">\r\n              <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded \">\r\n                <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n                  <div className=\"flex flex-wrap items-center\">\r\n                    <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                      <img src={Blocks_logo} className=\"w-12 h-14 float-left mr-2\"></img>\r\n                      <h3 className=\"text-2xl font-light text-blueGray-700 mt-2 \">Smarty List</h3>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        placeholder={\"Smarty Name\"}\r\n                        className=\"bg-purple-400 shadow-xl placeholder-white font-sans font-light placeholder-opacity-60 text-black p-2 ml-2 rounded-full\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input placeholder={\"Wifi SSid\"} className=\"bg-purple-400 shadow-xl font-sans font-light placeholder-opacity-60 placeholder-white text-black p-2 ml-2 rounded-full\" type=\"text\" />\r\n                    </div>\r\n                    <div>\r\n                      <input placeholder={\"Password\"} className=\"bg-purple-400 shadow-xl placeholder-white font-sans font-light placeholder-opacity-60 text-black p-2 ml-2 rounded-full\" type=\"text\" />\r\n                    </div>\r\n\r\n                    <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n                      <button\r\n                        onClick={() => {\r\n                          this.props.dispatch(changeStatus(true));\r\n                        }}\r\n                        className=\"bg-gray-300 text-white active:bg-indigo-600  font-light uppercase p-2 hover:bg-indigo-600 rounded-2xl outline-none text-2xl focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                      >\r\n                        <img src={BluetoothLogo} className=\"w-12 h-12\"></img>\r\n                      </button>\r\n                      <button\r\n                        hidden={true}\r\n                        onClick={() => {\r\n                          this.props.dispatch(changeStatus(true));\r\n                        }}\r\n                        className=\"bg-gray-300 text-white active:bg-indigo-600  font-light uppercase p-2 hover:bg-indigo-600 rounded-2xl outline-none text-2xl focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                      >\r\n                        <img src={Add_logo} className=\"w-12 h-12\"></img>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"block w-full overflow-x-auto\">\r\n                  <table className=\"items-center bg-transparent w-full border-collapse \">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Device Name\r\n                        </th>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Wifi Ssid\r\n                        </th>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Password\r\n                        </th>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Status\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      <tr>{this.dummpyData()}</tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* <footer className=\"relative pt-8 pb-6 mt-16\">\r\n            <div className=\"container mx-auto px-4\">\r\n              <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n                <div className=\"w-full md:w-6/12 px-4 mx-auto text-center\">\r\n                  <div className=\"text-sm text-blueGray-500 font-semibold py-1\">\r\n                    Made with{\" \"}\r\n                    <a href=\"https://www.creative-tim.com/product/notus-js\" className=\"text-blueGray-500 hover:text-gray-800\" target=\"_blank\">\r\n                      Notus JS\r\n                    </a>{\" \"}\r\n                    by{\" \"}\r\n                    <a href=\"https://www.creative-tim.com\" className=\"text-blueGray-500 hover:text-blueGray-800\" target=\"_blank\">\r\n                      {\" \"}\r\n                      Creative Tim\r\n                    </a>\r\n                    .\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </footer> */}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    modalState: state.modal.status,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DevicesComponent);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LoginComponent from \"../modules/LoginModule/LoginComponent\";\r\nimport BlocklySingleMode from \"../BlocklySingleMode\";\r\nimport DevicesComponent from \"../modules/Devices/DevicesComponent\";\r\n\r\nexport default class RouterComponent extends Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <LoginComponent></LoginComponent>\r\n          </Route>\r\n          <Route path=\"/devices\" exact>\r\n            <DevicesComponent></DevicesComponent>\r\n          </Route>\r\n          <Route path=\"/blockly\">\r\n            <BlocklySingleMode></BlocklySingleMode>\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n// needed for translations\r\nimport i18next from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport HttpApi from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { CONSTANTS } from \"./utils/constants\";\r\nimport { client } from \"./mqtt\";\r\nimport RouterComponent from \"./routing/router\";\r\ni18next\r\n  .use(HttpApi)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    supportedLngs: [\"en\", \"ru\"],\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // Options for language detector\r\n    detection: {\r\n      order: [\"path\", \"cookie\", \"htmlTag\"],\r\n      // caches: [\"cookie\"],\r\n    },\r\n    react: { useSuspense: false },\r\n    backend: {\r\n      loadPath: \"/assets/locales/{{lng}}/translation.json\",\r\n    },\r\n  });\r\n\r\ni18next.changeLanguage(CONSTANTS.LANGUAGE.ENGLISH);\r\n//This sifsfsadfdasfds\r\nReactDOM.render(\r\n  // <Suspense fallback={loadingMarkup}>\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <RouterComponent></RouterComponent>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  // </Suspense>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}