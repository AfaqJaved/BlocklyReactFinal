{"version":3,"sources":["App.js","components/NavBar.jsx","modules/Blockly/toolbox/toolbox.js","modules/Blockly/BlocklyComponent.jsx","modules/Blockly/index.js","assets/images/bottom-background.png","assets/images/logic.png","assets/images/loops.png","assets/images/math.png","utils/toolBoxUtils.js","modules/Blockly/toolbox/customToolBox.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","index.js","modules/Blockly/blocks/myBlock.js","modules/Blockly/generators/myBlockGenerator.js"],"names":["App","props","generateCode","code","BlocklyJS","workspaceToCode","simpleWorkspace","current","workspace","console","log","eval","React","createRef","blocklyArea","myButton","this","className","style","height","ref","readOnly","getBlocklyArea","trashcan","toolboxPosition","media","move","scrollbars","drag","wheel","initialXml","fontFamily","fontWeight","fontSize","onClick","Component","NavBar","useState","navState","setnavState","class","type","xmlns","fill","viewBox","stroke","d","src","alt","href","id","role","tabindex","hidden","INITIAL_TOOLBOX_JSON","kind","contents","name","blockxml","colour","custom","Blockly","setLocale","locale","BlocklyComponent","blocklyDiv","toolbox","element","x","y","offsetLeft","offsetTop","offsetParent","left","top","width","offsetWidth","offsetHeight","svgResize","primaryWorkspace","children","rest","Scrollbar","scrollbarThickness","inject","Xml","domToWorkspace","textToDom","window","addEventListener","onResize","xml","Fragment","is","display","toolboxDefaultState","categoryName","rowDiv_","labelDom","iconDom_","backgroundColor","bac","CustomCategory","categoryDef","opt_parent","htmlDiv_","getElementsByClassName","name_","isSelected","color","colour_","aria","setState","State","SELECTED","img","document","createElement","Logic","Loops","Math","Logo","setToolBoxIcons","register","Type","TOOLBOX_ITEM","registrationName","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","getElementById","myBlock","message0","previousStatement","nextStatement","tooltip","helpUrl","init","jsonInit","block"],"mappings":"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","file":"static/js/main.3eba7c45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BlocklyComponent from \"./modules/Blockly\";\r\nimport BlocklyJS from \"blockly/javascript\";\r\nimport BottomBackGround from \"./assets/images/bottom-background.png\";\r\n\r\n//importing blocks\r\nimport \"./modules/Blockly/blocks\";\r\n\r\n//importing generators\r\nimport \"./modules/Blockly/generators\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport \"./modules/Blockly/toolbox/customToolBox\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n    this.blocklyArea = React.createRef();\r\n    this.myButton = React.createRef();\r\n  }\r\n  generateCode = () => {\r\n    var code = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\r\n    console.log(code);\r\n    eval(code);\r\n  };\r\n\r\n  getBlocklyArea() {\r\n    return this.blocklyArea;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen w-screen overflow-hidden \">\r\n        <div>\r\n          <NavBar></NavBar>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-2 w-full h-full\">\r\n          <div style={{ height: \"90%\" }} className=\"relative col-span-2 md:col-span-2 lg:col-span-1 bg-red-500 w-full\">\r\n            <div ref={this.blocklyArea}>\r\n              <BlocklyComponent\r\n                ref={this.simpleWorkspace}\r\n                readOnly={false}\r\n                blocklyArea={this.getBlocklyArea}\r\n                trashcan={true}\r\n                toolboxPosition=\"end\"\r\n                media={process.env.PUBLIC_URL + \"media/\"}\r\n                move={{\r\n                  scrollbars: true,\r\n                  drag: true,\r\n                  wheel: true,\r\n                }}\r\n                initialXml={`\r\n                <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <block type=\"controls_ifelse\" x=\"10\" y=\"10\"></block>\r\n                </xml>\r\n          `}\r\n              ></BlocklyComponent>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"relative  md:invisible lg:visible invisible \">\r\n            <div className=\"flex justify-center items-center\">\r\n              <button\r\n                style={{ fontFamily: \"Finger Paint\", fontWeight: 2, fontSize: 30 }}\r\n                onClick={this.generateCode}\r\n                className=\"bg-purple-500  rounded text-xl font-semibold text text-white font-sans   hover:bg-purple-600 hover:text-yellow-600 shadow-sm items-center p-2\"\r\n              >\r\n                Generate Code\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function NavBar() {\r\n  const [navState, setnavState] = useState(true);\r\n\r\n  return (\r\n    <div>\r\n      <nav class=\"bg-indigo-700\">\r\n        <div class=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n          <div class=\"relative flex items-center justify-between h-16\">\r\n            <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n              <button\r\n                onClick={() => setnavState(!navState)}\r\n                type=\"button\"\r\n                class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n                aria-controls=\"mobile-menu\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <span class=\"sr-only\">Open main menu</span>\r\n\r\n                <svg class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                </svg>\r\n\r\n                <svg class=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n              <div class=\"flex-shrink-0 flex items-center\">\r\n                <img class=\"block lg:hidden h-8 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\" alt=\"Workflow\"></img>\r\n                <img class=\"hidden lg:block h-8 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\" alt=\"Workflow\"></img>\r\n              </div>\r\n              <div class=\"hidden sm:block sm:ml-6\">\r\n                <div class=\"flex space-x-4\">\r\n                  <a href=\"#\" class=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\" aria-current=\"page\">\r\n                    Dashboard\r\n                  </a>\r\n\r\n                  <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">\r\n                    Team\r\n                  </a>\r\n\r\n                  <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">\r\n                    Projects\r\n                  </a>\r\n\r\n                  <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">\r\n                    Calendar\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n              <button type=\"button\" class=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                <span class=\"sr-only\">View notifications</span>\r\n                <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                  <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    stroke-width=\"2\"\r\n                    d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n\r\n              <div class=\"ml-3 relative\">\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\r\n                    id=\"user-menu-button\"\r\n                    aria-expanded=\"false\"\r\n                    aria-haspopup=\"true\"\r\n                  >\r\n                    <span class=\"sr-only\">Open user menu</span>\r\n                    <img\r\n                      class=\"h-8 w-8 rounded-full\"\r\n                      src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                      alt=\"\"\r\n                    ></img>\r\n                  </button>\r\n                </div>\r\n\r\n                <div\r\n                  class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                  role=\"menu\"\r\n                  aria-orientation=\"vertical\"\r\n                  aria-labelledby=\"user-menu-button\"\r\n                  tabindex=\"-1\"\r\n                  hidden\r\n                >\r\n                  <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-0\">\r\n                    Your Profile\r\n                  </a>\r\n                  <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-1\">\r\n                    Settings\r\n                  </a>\r\n                  <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-2\">\r\n                    Sign out\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"sm:hidden\" id=\"mobile-menu\" hidden={navState}>\r\n          <div class=\"px-2 pt-2 pb-3 space-y-1\">\r\n            <a href=\"#\" class=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\" aria-current=\"page\">\r\n              Dashboard\r\n            </a>\r\n\r\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\r\n              Team\r\n            </a>\r\n\r\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\r\n              Projects\r\n            </a>\r\n\r\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">\r\n              Calendar\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import \"./toolbox.css\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: \"Logic\",\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"afaq_custom_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: \"Loops\",\r\n      colour: 120,\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: \"Math\",\r\n\r\n      colour: 230,\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: \"Text\",\r\n\r\n      colour: 160,\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: \"Lists\",\r\n\r\n      colour: 259,\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: \"Colour\",\r\n\r\n      colour: 19,\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: \"Functions\",\r\n      custom: \"PROCEDURE\",\r\n      colour: 290,\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\n\r\nimport Blockly from \"blockly/core\";\r\nimport locale from \"blockly/msg/en\";\r\nimport \"blockly/blocks\";\r\nimport \"./BlocklyComponent.css\";\r\nimport { INITIAL_TOOLBOX_JSON } from \"./toolbox/toolbox\";\r\n\r\nBlockly.setLocale(locale);\r\n\r\nclass BlocklyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.blocklyDiv = React.createRef();\r\n    this.toolbox = React.createRef();\r\n    this.blocklyArea = this.props.blocklyArea;\r\n  }\r\n\r\n  onResize(blocklyArea) {\r\n    console.log(\"fucntion callled\");\r\n    let element = blocklyArea;\r\n    let x = 0;\r\n    let y = 0;\r\n    do {\r\n      x += element.offsetLeft;\r\n      y += element.offsetTop;\r\n      element = element.offsetParent;\r\n    } while (element);\r\n    // Position blocklyDiv over blocklyArea.\r\n    this.blocklyDiv.current.style.left = x + \"px\";\r\n    this.blocklyDiv.current.style.top = y + \"px\";\r\n    this.blocklyDiv.current.style.width = this.blocklyArea.offsetWidth + \"px\";\r\n    this.blocklyDiv.current.style.height = this.blocklyArea.offsetHeight + \"px\";\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { initialXml, children, blocklyArea, ...rest } = this.props;\r\n    Blockly.Scrollbar.scrollbarThickness = 5;\r\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\r\n      toolbox: INITIAL_TOOLBOX_JSON,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n    }\r\n    window.addEventListener(\"resize\", this.onResize(blocklyArea), false);\r\n    this.onResize(blocklyArea);\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  get workspace() {\r\n    return this.primaryWorkspace;\r\n  }\r\n\r\n  setXml(xml) {\r\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"w-full bottom-0 md:pb-20 lg:pb-0 pb-20  top-0 absolute  h-screen lg:h-full md:h-screen\" ref={this.blocklyDiv} id=\"blocklyDiv\" />\r\n        <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: \"none\" }} ref={this.toolbox}>\r\n          {children}\r\n        </xml>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlocklyComponent;\r\n","import React from \"react\";\r\nimport BlocklyComponent from \"./BlocklyComponent\";\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow };\r\n","export default __webpack_public_path__ + \"static/media/bottom-background.2d752746.png\";","export default __webpack_public_path__ + \"static/media/logic.b82c0547.png\";","export default __webpack_public_path__ + \"static/media/loops.8b951248.png\";","export default __webpack_public_path__ + \"static/media/math.cb664f98.png\";","import Logic from \"../assets/images/logic.png\";\r\nimport Logo from \"../assets/images/logic.png\";\r\nimport Loops from \"../assets/images/loops.png\";\r\nimport Math from \"../assets/images/math.png\";\r\n\r\nexport const toolboxDefaultState = (categoryName, rowDiv_, labelDom, iconDom_) => {\r\n  switch (categoryName) {\r\n    case \"Logic\": {\r\n      rowDiv_.style.backgroundColor = \"#EEB76B\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      iconDom_.style.bac = \"black\";\r\n\r\n      // rowDiv_.style.fontFamily = \"FingerPaint\";\r\n      break;\r\n    }\r\n    case \"Loops\": {\r\n      rowDiv_.style.backgroundColor = \"#E2703A\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Math\": {\r\n      rowDiv_.style.backgroundColor = \"#9C3D54\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Text\": {\r\n      rowDiv_.style.backgroundColor = \"#FFCDA3\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Lists\": {\r\n      rowDiv_.style.backgroundColor = \"#EE9595\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Colour\": {\r\n      rowDiv_.style.backgroundColor = \"#EF4F4F\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Custom Button\": {\r\n      rowDiv_.style.backgroundColor = \"#D4AC2B\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Variables\": {\r\n      rowDiv_.style.backgroundColor = \"#64C9CF\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n    case \"Functions\": {\r\n      rowDiv_.style.backgroundColor = \"#DF711B\";\r\n      labelDom.style.fontFamily = \"Finger Paint\";\r\n      labelDom.style.fontWeight = 2;\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\nexport const setToolBoxIcons = (categoryName) => {\r\n  switch (categoryName) {\r\n    case \"Logic\": {\r\n      const img = document.createElement(\"img\");\r\n      img.src = Logic;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Loops\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Loops;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Math\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Math;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Text\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Logo;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Lists\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Logo;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Colour\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Logo;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Custom Button\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Logo;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Variables\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Logo;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n    case \"Functions\": {\r\n      const img = document.createElement(\"img\");\r\n\r\n      img.src = Logo;\r\n      img.className = \"w-10 h-10 \";\r\n      img.alt = \"Lamp\";\r\n      return img;\r\n    }\r\n  }\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { setToolBoxIcons, toolboxDefaultState } from \"../../../utils/toolBoxUtils\";\r\nclass CustomCategory extends Blockly.ToolboxCategory {\r\n  /**\r\n   * Constructor for a custom category.\r\n   * @override\r\n   */\r\n  constructor(categoryDef, toolbox, opt_parent) {\r\n    super(categoryDef, toolbox, opt_parent);\r\n  }\r\n\r\n  /** @override */\r\n  addColourBorder_() {\r\n    this.htmlDiv_.className = \"p-1 flex flex-col text-center border-l-4  border-r-4  border-purple-700   shadow-lg bg-purple-500 bg-opacity-40 opacity-100 bg-bottom \";\r\n    let labelDom = this.rowDiv_.getElementsByClassName(\"blocklyTreeLabel\")[0];\r\n    this.rowDiv_.className = \" mt-1 flex flex-col rounded-xl mb-2 shadow-lg font-sans \";\r\n    toolboxDefaultState(this.name_, this.rowDiv_, labelDom, this.iconDom_);\r\n  }\r\n\r\n  /** @override */\r\n  setSelected(isSelected) {\r\n    var labelDom = this.rowDiv_.getElementsByClassName(\"blocklyTreeLabel\")[0];\r\n    if (isSelected) {\r\n      this.rowDiv_.style.backgroundColor = \"white\";\r\n      labelDom.style.color = this.colour_;\r\n    } else {\r\n      toolboxDefaultState(this.name_, this.rowDiv_, labelDom, this.iconDom_);\r\n      labelDom.style.color = \"black\";\r\n    }\r\n    // This is used for accessibility purposes.\r\n    Blockly.utils.aria.setState(/** @type {!Element} */ (this.htmlDiv_), Blockly.utils.aria.State.SELECTED, isSelected);\r\n  }\r\n\r\n  /** @override */\r\n  createIconDom_() {\r\n    return setToolBoxIcons(this.name_);\r\n  }\r\n}\r\n\r\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, Blockly.ToolboxCategory.registrationName, CustomCategory, true);\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import * as Blockly from \"blockly/core\";\r\n\r\nlet myBlock = {\r\n  type: \"afaq_custom_block\",\r\n  message0: \"Show Alert\",\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 315,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"afaq_custom_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(myBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\nBlockly.JavaScript[\"afaq_custom_block\"] = function (block) {\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"alert('This is for test');\\n\";\r\n  return code;\r\n};\r\n"],"sourceRoot":""}