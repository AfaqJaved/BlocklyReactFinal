{"version":3,"sources":["utils/smartyConstants.js","features/ble/bleSlice.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","mqtt/index.js","assets/images/blocks_logo.png","axios/index.js","utils/utils.js","modules/LoginModule/LoginComponent.jsx","modules/Blockly/toolbox/en/toolbox.js","utils/blocklyCategories.js","modules/Blockly/toolbox/ru/toolbox.js","assets/images/robot.png","assets/images/bot.png","modules/Blockly/blocklyModal/index.js","utils/blockConstants.js","modules/Blockly/blocks-en/directionBlock.js","modules/Blockly/blocks-en/startBlock.js","modules/Blockly/blocks-en/rotationBlock.js","modules/Blockly/blocks-en/getDistanceBlock.js","modules/Blockly/blocks-ru/directionBlock.js","modules/Blockly/blocks-ru/startBlock.js","modules/Blockly/blocks-ru/rotationBlock.js","modules/Blockly/blocks-ru/getDistanceBlock.js","modules/Blockly/generators/directionBlockGenerator.js","modules/Blockly/generators/startBlockGenerator.js","modules/Blockly/generators/rotationBlockGenerator.js","modules/Blockly/generators/getDistanceGenerator.js","modules/Blockly/BlocklyComponent.jsx","modules/Blockly/index.js","assets/images/bluetooth.png","assets/images/logout.png","components/NavBar.jsx","utils/blocklyTheme.js","assets/images/play.png","assets/images/pause.png","assets/images/expand.png","BlocklySingleMode.js","assets/images/scan.png","assets/images/add.png","assets/images/cancel.png","modules/AddDeviceModule/AddDeviceComponent.jsx","utils/topicUtils.js","assets/images/delete.png","assets/images/edit.png","assets/images/no-wifi.png","assets/images/wifi.png","modules/Devices/DevicesComponent.jsx","modules/SingupModule/SignupComponent.jsx","routing/PrivateRoute.js","routing/router.jsx","index.js","features/modal/modalSlice.js","utils/constants.js","features/language/languageSlice.js","features/auth/authSlice.js","utils/bleConstants.js"],"names":["SMARTY","moveForward","store","getState","ble","char","writeValue","TextEncoder","encode","moveBackward","CONSTANTS","BLOCKS","DIRECTION_BLOCK","DIRECTIONS_ENGLISH","BACKWARD","moveLeft","LEFT","moveRight","RIGHT","rotateSmarty","angle","ROTATION_BLOCK","ENGLISH","getDistance","readValue","value","console","log","TextDecoder","decode","RUNCODE","code","eval","initialState","status","BLE","BLE_DISCONNECTED","device","server","service","bleSlice","createSlice","name","reducers","changeStatus","state","action","payload","setDevice","setServer","setService","setchar","actions","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","customizedMiddleware","getDefaultMiddleware","serializableCheck","persistConfig","key","storage","combineReducers","counter","counterReducer","language","languageReducer","bleReducer","modal","modalReducer","auth","authReducer","persistedReducer","persistReducer","configureStore","reducer","middleware","persistor","persistStore","client","mqtt","port","username","password","on","subscribe","err","publish","axiosInstance","axios","create","baseURL","process","headers","Accept","interceptors","request","use","config","token","Authorization","error","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","reject","DECODEJWT","jwt_decode","SHOW_TOAST_WARN","message","SHOW_TOAST_SUCESS","success","LoginComponent","props","componentDidMount","onLogin","e","preventDefault","email","post","API","LOGIN","then","res","userId","first_name","last_name","dispatch","setAuth","setFirstName","setLastName","setEmail","setUserId","setToken","history","push","catch","onMulitLogin","className","src","BlockLogo","alt","for","method","onChange","event","setState","target","type","placeholder","id","href","onClick","Component","compose","withRouter","connect","authenticated","INITIAL_TOOLBOX_JSON_EN","kind","contents","cssConfig","container","row","label","icon","blockxml","custom","INITIAL_TOOLBOX_JSON_RU","Modal","title","buttonText","workspace","this","title_","workspace_","lastFocusableEl_","firstFocusableEl_","htmlDiv_","boundEvents_","shouldCloseOnOverlayClick","shouldCloseOnEsc","render","Blockly","remove","show","RTL","widgetDispose_","widgetCreate_","focusableEls","querySelectorAll","length","classList","contains","focus","hide","widgetDiv","DIV","dom","addClass","appendChild","removeClass","document","activeElement","keyCode","KeyCodes","TAB","stopPropagation","shiftKey","handleBackwardTab_","handleForwardTab_","ESC","node","thisObject","func","createElement","modalContainer","setAttribute","img","Bot","Robot","addEvent_","handleKeyDown_","modalHeader","renderHeader_","modalContent","renderContent_","modalFooter","exitButton","innerHTML","onCancel_","renderFooter_","headerContainer","modalTitle","createTextNode","_contentContainer","_footerContainer","register","BLOCKS_LANGUAGE_CONSTANTS","RUSSIAN","START_BLOCK","FORWARD","DIRECTIONS_RUSSIAN","GET_DISTANCE_BLOCK","EMGLISH","directionBlock","message0","args0","options","previousStatement","nextStatement","colour","tooltip","helpUrl","init","jsonInit","startBlock","align","rotationBlock","getDistanceBlock","output","block","dropdown_direction","getFieldValue","statementToCode","ORDER_NONE","BlocklyComponent","blocklyDiv","React","createRef","toolbox","blocklyArea","currentLanguage","bleState","LANGUAGE","setLocale","en","ru","Msg","LOGIC_CATEGORY_NAME","CATERGORIES","LOGIC_CATEGORY","setLanguage","primaryWorkspace","updateToolbox","t","BLE_CONNECTED","element","x","y","offsetLeft","offsetTop","offsetParent","current","style","left","top","width","offsetWidth","height","offsetHeight","svgResize","initBlockly","initialXml","children","rest","Scrollbar","scrollbarThickness","DEFAULT_SCROLLBAR_MARGIN","Toolbox","inject","Xml","domToWorkspace","textToDom","window","addEventListener","onResize","addChangeListener","setSearchFuncBlockly","WorkspaceSearch","xml","Fragment","ref","xmlns","is","display","withTranslation","NavBar","useState","useDispatch","useSelector","bleStatus","useHistory","useTranslation","onDisconnected","requestPermission","getDevice","connectGattServer","getServices","getChar","writeBle","BlocklsLogo","i18next","changeLanguage","BleLogo","Logout","BLOCKLY_THEME","THEME","fontStyle","weight","size","blockStyles","colour_blocks","colourPrimary","list_blocks","logic_blocks","loop_blocks","math_blocks","procedure_blocks","text_blocks","variable_blocks","variable_dynamic_blocks","hat_blocks","hat","categoryStyles","componentStyles","workspaceBackgroundColour","toolboxBackgroundColour","flyoutBackgroundColour","flyoutOpacity","scrollbarColour","scrollbarOpacity","BlocklySingleMode","generateCode","BlocklyJS","workspaceToCode","simpleWorkspace","myButton","initInterpreter","expanded","readOnly","getBlocklyArea","trashcan","toolboxPosition","media","theme","move","scrollbars","drag","wheel","grid","spacing","snap","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","ExpandIcon","defaultLanguage","defaultValue","PlayIcon","PauseIcon","bleChar","AddDeviceComponent","CancelLogo","autocomplete","required","TOPICS","modalState","deviceName","unsubscribe","DevicesComponent","onMqttCallBack","topic","newDevices","devices","currentDevice","str_deviceName","str_status","onDeleteDevice","item","get","DELETE_DEVICE","affected","getAllDevices","GET_ALL_DEVICES","addBtnStatus","forEach","bleStart","getSsidPassword","JSON","parse","ssid","pass","deviceId","logout","addDevice","obj","SAVE_DEVICE","sendBle","stringify","Blocks_logo","hidden","disabled","Add_logo","Scan","map","i","str_ssid","str_pass","Online","Offline","DeleteIcon","SignupComponent","signup","firstname","lastname","passwordCnfrm","REGISTER","PrivateRoute","component","authed","to","pathname","from","location","RouterComponent","path","exact","HttpApi","LanguageDetector","initReactI18next","supportedLngs","fallbackLng","debug","detection","order","react","useSuspense","backend","loadPath","ReactDOM","StrictMode","loading","getElementById","modalSlice","languageSlice","authSlice","firstName","LastName","Email","BLE_DEVICE_NAME","BLE_SERVICE_NAME","BLE_CHAR_UUID","navigator","bluetooth","requestDevice","filters","optionalServices","gatt","getPrimaryService","getCharacteristic","getTextEncoder"],"mappings":"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","file":"static/js/main.cc61aa8b.chunk.js","sourcesContent":["import { store } from \"../app/store\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nexport const SMARTY = {\r\n  async moveForward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(\"{ 'ssid' : 'Notion360' , 'pass' : 'notion36@' , 'mode' : 'wifi' }\"));\r\n  },\r\n  async moveBackward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD));\r\n  },\r\n  async moveLeft() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT));\r\n  },\r\n  async moveRight() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT));\r\n  },\r\n  async rotateSmarty(angle) {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \",\" + angle));\r\n  },\r\n  async getDistance() {\r\n    let value = await store.getState().ble.char.readValue();\r\n    console.log(new TextDecoder().decode(value));\r\n    return new TextDecoder().decode(value);\r\n  },\r\n/////////////////////////\r\n// async moveForwardSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.FORWARD +\",\"+ num));\r\n// },\r\n// async moveBackwardSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.BACKWARD +\",\"+ num));\r\n// },\r\n// async moveLeftSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.LEFT +\",\"+ num));\r\n// },\r\n// async moveRightSteps(num) {\r\n//   await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.RIGHT +\",\"+ num));\r\n// },\r\n\r\n};\r\n\r\nexport const RUNCODE = (code) => {\r\n  eval(code);\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\n\r\nconst initialState = {\r\n  status: BLE.BLE_DISCONNECTED,\r\n  device: null,\r\n  server: null,\r\n  service: null,\r\n  char: null,\r\n};\r\n\r\nexport const bleSlice = createSlice({\r\n  name: \"ble\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    setDevice: (state, action) => {\r\n      state.device = action.payload;\r\n    },\r\n    setServer: (state, action) => {\r\n      state.server = action.payload;\r\n    },\r\n    setService: (state, action) => {\r\n      state.service = action.payload;\r\n    },\r\n    setchar: (state, action) => {\r\n      state.char = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus, setDevice, setServer, setService, setchar } = bleSlice.actions;\r\nexport default bleSlice.reducer;\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport languageReducer from \"../features/language/languageSlice\";\nimport bleReducer from \"../features/ble/bleSlice\";\nimport modalReducer from \"../features/modal/modalSlice\";\nimport authReducer from \"../features/auth/authSlice\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\n\n// /This si faetstaese\nconst customizedMiddleware = getDefaultMiddleware({\n  serializableCheck: false,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst reducers = combineReducers({\n  counter: counterReducer,\n  language: languageReducer,\n  ble: bleReducer,\n  modal: modalReducer,\n  auth: authReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => customizedMiddleware,\n});\n\nexport const persistor = persistStore(store);\n","import * as mqtt from \"mqtt\";\r\n\r\nlet client = mqtt.connect(\"mqtts://mqtt.afaqjaved.com\", {\r\n  port: 1885,\r\n  username: \"afaq\",\r\n  password: \"test\",\r\n}); // create a client\r\n\r\nclient.on(\"connect\", function () {\r\n  client.subscribe(\"presence\", function (err) {\r\n    if (!err) {\r\n      //   client.publish(\"presence\", \"Hello mqtt\");\r\n      client.subscribe(\"test\");\r\n      client.publish(\"test\", \"working\");\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  });\r\n});\r\n\r\n// client.on(\"message\", function (topic, message) {\r\n//   // message is Buffer\r\n//   console.log(\"Topic  : \" + topic + \"     \" + message.toString());\r\n//   //   console.log(message.toString());\r\n// });\r\n\r\nexport default client;\r\n","export default __webpack_public_path__ + \"static/media/blocks_logo.bce3b0f2.png\";","import axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { store } from \"../app/store\";\r\n\r\nconst getToken = async () => {\r\n  return await store.getState().auth.token;\r\n};\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  headers: {\r\n    // authorization: \"Bearer \" + getToken(),\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor for jwt token\r\naxiosInstance.interceptors.request.use(function (config) {\r\n  const token = \"Bearer \" + store.getState().auth.token;\r\n  config.headers.Authorization = token;\r\n  return config;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    console.log(error.response.data);\r\n    console.log(error.response.status);\r\n    console.log(error.response.headers);\r\n\r\n    if (error.response.status === 401) {\r\n      toast.warn(\"Invalid Credintionals!!!\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n\r\n    if (error.response.status === 404) {\r\n      toast.warn(\"User Not Found!!!\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const DECODEJWT = (token) => {\r\n  return jwt_decode(token);\r\n};\r\n\r\nexport const SHOW_TOAST_WARN = (message) => {\r\n  toast.warn(message, {\r\n    position: \"top-center\",\r\n    autoClose: 2000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n\r\nexport const SHOW_TOAST_SUCESS = (message) => {\r\n  toast.success(message, {\r\n    position: \"top-center\",\r\n    autoClose: 2000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport BlockLogo from \"../../assets/images/blocks_logo.png\";\r\nimport { withRouter } from \"react-router\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { DECODEJWT, SHOW_TOAST_WARN } from \"../../utils/utils\";\r\nimport { setToken, setAuth, setEmail, setFirstName, setLastName, setUserId } from \"../../features/auth/authSlice\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { LOGIC_COMPARE_HELPURL } from \"blockly/msg/en\";\r\n\r\nclass LoginComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {};\r\n\r\n  onLogin = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === \"\" || this.state.password === \"\") {\r\n      SHOW_TOAST_WARN(\"Please Enter Email and Password\");\r\n    } else {\r\n      console.log(this.state.password);\r\n      axiosInstance\r\n        .post(CONSTANTS.API.LOGIN, { email: this.state.email, password: this.state.password })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          console.log(DECODEJWT(res.data.data.token));\r\n          let { userId, first_name, last_name, email } = DECODEJWT(res.data.data.token);\r\n          this.props.dispatch(setAuth(true));\r\n          this.props.dispatch(setFirstName(first_name));\r\n          this.props.dispatch(setLastName(last_name));\r\n          this.props.dispatch(setEmail(email));\r\n          this.props.dispatch(setUserId(userId));\r\n          this.props.dispatch(setToken(res.data.data.token));\r\n\r\n          console.log(this.state.email);\r\n          this.props.history.push(\"blockly\");\r\n        })\r\n        .catch((res) => {\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  onMulitLogin = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === \"\" || this.state.password === \"\") {\r\n      SHOW_TOAST_WARN(\"Please Enter Email and Password\");\r\n    } else {\r\n      console.log(this.state.password);\r\n      axiosInstance\r\n        .post(\"/api/login\", { email: this.state.email, password: this.state.password })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          console.log(DECODEJWT(res.data.data.token));\r\n          let { userId, first_name, last_name, email } = DECODEJWT(res.data.data.token);\r\n          this.props.dispatch(setAuth(true));\r\n          this.props.dispatch(setFirstName(first_name));\r\n          this.props.dispatch(setLastName(last_name));\r\n          this.props.dispatch(setEmail(email));\r\n          this.props.dispatch(setUserId(userId));\r\n          this.props.dispatch(setToken(res.data.data.token));\r\n          console.log(this.state.email);\r\n          this.props.history.push(\"devices\");\r\n        })\r\n        .catch((res) => {\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"font-san\">\r\n        <div className=\"relative min-h-screen flex flex-col sm:justify-center items-center bg-login_back bg-no-repeat bg-cover bg-center\">\r\n          <div className=\"relative sm:max-w-sm w-full shadow-2xl\">\r\n            <div className=\"card bg-blue-400 shadow-lg  w-full h-full rounded-3xl absolute  transform -rotate-6\"></div>\r\n            <div className=\"card bg-red-400 shadow-lg  w-full h-full rounded-3xl absolute  transform rotate-6\"></div>\r\n\r\n            <div className=\"relative w-full rounded-3xl  px-6 py-4 bg-gray-100 shadow-md\">\r\n              <div className=\"flex justify-center items-start\">\r\n                <img className=\"w-16 h-18\" src={BlockLogo} alt=\"\" />\r\n              </div>\r\n              <label for=\"\" className=\"block text-2xl  text-gray-700 text-center font-semibold\">\r\n                Blockly\r\n              </label>\r\n              <form method=\"#\" action=\"#\" className=\"mt-10\">\r\n                <div>\r\n                  <input\r\n                    onChange={(event) => this.setState({ email: event.target.value })}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"mt-1 p-3 block w-full border-none bg-gray-100 h-11 rounded-xl shadow-lg hover:bg-blue-100 focus:bg-blue-100 focus:ring-0\"\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className=\"mt-7\">\r\n                  <input\r\n                    onChange={(event) => this.setState({ password: event.target.value })}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    className=\"mt-1 block w-full p-3 border-none bg-gray-100 h-11 rounded-xl shadow-lg hover:bg-blue-100 focus:bg-blue-100 focus:ring-0\"\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className=\"mt-7 flex\">\r\n                  <label for=\"remember_me\" className=\"inline-flex items-center w-full cursor-pointer\">\r\n                    <input\r\n                      id=\"remember_me\"\r\n                      type=\"checkbox\"\r\n                      className=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                      name=\"remember\"\r\n                    ></input>\r\n                    <span className=\"ml-2 text-sm text-gray-600\">Remember me</span>\r\n                  </label>\r\n\r\n                  <div className=\"w-full text-right\">\r\n                    <a className=\"underline text-sm text-gray-600 hover:text-gray-900\" href=\"#\">\r\n                      Forgot Password\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-7 flex justify-center items-center gap-2\">\r\n                  <button\r\n                    onClick={(event) => this.onLogin(event)}\r\n                    className=\"bg-blue-500 w-1/2 py-3 rounded-xl text-white shadow-xl hover:shadow-inner focus:outline-none transition duration-1000 ease-in  transform hover:-translate-x hover:scale-105\"\r\n                  >\r\n                    Login Single Mode\r\n                  </button>\r\n                  <button\r\n                    onClick={(event) => this.onMulitLogin(event)}\r\n                    className=\"bg-red-500 w-1/2 py-3 rounded-xl text-white shadow-xl hover:shadow-inner focus:outline-none transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\"\r\n                  >\r\n                    Login Mulitple Mode\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"flex mt-7 items-center text-center\">\r\n                  <hr className=\"border-gray-300 border-1 w-full rounded-md\"></hr>\r\n                  <label className=\"block font-medium text-sm text-gray-600 w-full\">End</label>\r\n                  <hr className=\"border-gray-300 border-1 w-full rounded-md\"></hr>\r\n                </div>\r\n\r\n                <div className=\"flex mt-7 justify-center w-full\">\r\n                  <button\r\n                    onClick={() => {\r\n                      this.props.history.push(\"register\");\r\n                    }}\r\n                    className=\" w-full bg-purple-500 border-none px-4 py-2 rounded-xl cursor-pointer text-white shadow-xl hover:shadow-inner transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\"\r\n                  >\r\n                    Sign up\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"mt-7\">\r\n                  <div className=\"flex justify-center items-center\">\r\n                    <label className=\"mr-2\">binarybitz</label>\r\n                    <a href=\"#\" className=\" text-blue-500 transition duration-500 ease-in-out  transform hover:-translate-x hover:scale-105\">\r\n                      @allrightsreserved2021\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n  };\r\n};\r\n\r\nexport default compose(withRouter, connect(mapStateToProps))(LoginComponent);\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_EN = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-4  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" font-sas text-lg text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_en\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block_en\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block_en\",\r\n        },\r\n        // {\r\n        //   kind: \"block\",\r\n        //   type: \"direction_steps\",\r\n        // },\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance_en\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export const BLOCKLY_CATEGORIES_CONSTANTS = {\r\n  // ENGLISH\r\n  EN_SMARTY: \"Smarty\",\r\n  EN_LOGIC: \"Logic\",\r\n  EN_LOOPS: \"Loops\",\r\n  EN_MATH: \"Math\",\r\n  EN_TEXT: \"Text\",\r\n  EN_LISTS: \"List\",\r\n  EN_COLOUR: \"Colour\",\r\n  EN_FUNCTIONS: \"Functions\",\r\n\r\n  // RUSSIAN\r\n  RU_SMARTY: \"Smarty\",\r\n  RU_LOGIC: \"логика\",\r\n  RU_LOOPS: \"петли\",\r\n  RU_MATH: \"математика\",\r\n  RU_TEXT: \"текст\",\r\n  RU_LISTS: \"списки\",\r\n  RU_COLOUR: \"цвет\",\r\n  RU_FUNCTIONS: \"функции\",\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_RU = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-2  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas   text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_ru\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block_ru\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block_ru\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance_ru\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 ml-2 mr-2 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/robot.4d6a9af2.png\";","export default __webpack_public_path__ + \"static/media/bot.fdb0c459.png\";","/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n/**\r\n * @fileoverview Class responsible for creating a Blockly modal.\r\n * @author aschmiedt@google.com (Abby Schmiedt)\r\n */\r\n\r\nimport * as Blockly from \"blockly/core\";\r\nimport Robot from \"../../../assets/images/robot.png\";\r\nimport Bot from \"../../../assets/images/bot.png\";\r\n\r\n/**\r\n * Class responsible for creating a Blockly modal.\r\n */\r\nexport class Modal {\r\n  /**\r\n   * Constructor for creating a Blockly modal.\r\n   * @param {string} title The title for the modal.\r\n   * @param {!Blockly.WorkspaceSvg} workspace The workspace to display the modal\r\n   *     over.\r\n   */\r\n  constructor(title, buttonText, workspace) {\r\n    /**\r\n     * The title for the modal.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.title_ = title;\r\n\r\n    /**\r\n     * The workspace to display the modal over.\r\n     * @type {!Blockly.WorkspaceSvg}\r\n     * @protected\r\n     */\r\n    this.workspace_ = workspace;\r\n\r\n    /**\r\n     * The last focusable element for the modal.\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.lastFocusableEl_ = null;\r\n\r\n    /**\r\n     * The first focusable element for the modal.\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.firstFocusableEl_ = null;\r\n\r\n    /**\r\n     * HTML container for the modal.\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.htmlDiv_ = null;\r\n\r\n    /**\r\n     * Array holding info needed to unbind events.\r\n     * Used for disposing.\r\n     * Ex: [[node, name, func], [node, name, func]].\r\n     * @type {!Array.<Array<?>>}\r\n     * @private\r\n     */\r\n    this.boundEvents_ = [];\r\n\r\n    /**\r\n     * If true close the modal when the user clicks outside the modal.\r\n     * Otherwise, only close when user hits the 'X' button or escape.\r\n     * @type {boolean}\r\n     */\r\n    this.shouldCloseOnOverlayClick = true;\r\n\r\n    /**\r\n     * If true close the modal when the user hits escape. Otherwise, do not\r\n     * close on escape.\r\n     */\r\n    this.shouldCloseOnEsc = true;\r\n\r\n    // The button text\r\n    this.buttonText = buttonText;\r\n  }\r\n\r\n  /**\r\n   * Initialize a Blockly modal.\r\n   */\r\n  init() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Disposes of this modal.\r\n   * Unlink from all DOM elements and remove all event listeners\r\n   * to prevent memory leaks.\r\n   */\r\n  dispose() {\r\n    for (const event of this.boundEvents_) {\r\n      Blockly.unbindEvent_(event);\r\n    }\r\n    this.boundEvents_ = [];\r\n    if (this.htmlDiv_) {\r\n      this.htmlDiv_.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows the Blockly modal and focus on the first focusable element.\r\n   */\r\n  show() {\r\n    Blockly.WidgetDiv.show(this, this.workspace_.RTL, () => this.widgetDispose_());\r\n    this.widgetCreate_();\r\n    const focusableEls = this.htmlDiv_.querySelectorAll(\"a[href],\" + \"area[href], input:not([disabled]), select:not([disabled]),\" + 'textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\r\n    if (focusableEls.length > 0) {\r\n      this.firstFocusableEl_ = focusableEls[0];\r\n      this.lastFocusableEl_ = focusableEls[focusableEls.length - 1];\r\n      if (focusableEls[0].classList.contains(\"blocklyModalBtnClose\") && focusableEls.length > 1) {\r\n        focusableEls[1].focus();\r\n      } else {\r\n        this.firstFocusableEl_.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the Blockly modal.\r\n   */\r\n  hide() {\r\n    Blockly.WidgetDiv.hide();\r\n  }\r\n\r\n  /**\r\n   * The function to be called when the user hits the 'x' button.\r\n   * @protected\r\n   */\r\n  onCancel_() {\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * Add the Blockly modal to the widget div and position it properly.\r\n   * @protected\r\n   */\r\n  widgetCreate_() {\r\n    const widgetDiv = Blockly.WidgetDiv.DIV;\r\n    Blockly.utils.dom.addClass(this.htmlDiv_, \"blocklyModalOpen\");\r\n    widgetDiv.appendChild(this.htmlDiv_);\r\n  }\r\n\r\n  /**\r\n   * Disposes of any events or dom-references belonging to the editor.\r\n   * @protected\r\n   */\r\n  widgetDispose_() {\r\n    Blockly.utils.dom.removeClass(this.htmlDiv_, \"blocklyModalOpen\");\r\n  }\r\n\r\n  /**\r\n   * Handle when the user goes to the previous focusable element.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleBackwardTab_(e) {\r\n    if (document.activeElement === this.firstFocusableEl_) {\r\n      e.preventDefault();\r\n      this.lastFocusableEl_.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle when the user goes to the next focusable element.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleForwardTab_(e) {\r\n    if (document.activeElement === this.lastFocusableEl_) {\r\n      e.preventDefault();\r\n      this.firstFocusableEl_.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event for a Blockly modal. Handles forward tab, backward\r\n   * tab, and escape button.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleKeyDown_(e) {\r\n    if (e.keyCode === Blockly.utils.KeyCodes.TAB) {\r\n      // If there are no elements or there is one element don't wrap.\r\n      if (!this.firstFocusableEl_ || this.firstFocusableEl_ === this.lastFocusableEl_) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return;\r\n      }\r\n      if (e.shiftKey) {\r\n        this.handleBackwardTab_(e);\r\n      } else {\r\n        this.handleForwardTab_(e);\r\n      }\r\n    } else if (e.keyCode === Blockly.utils.KeyCodes.ESC && this.shouldCloseOnEsc) {\r\n      this.hide();\r\n    }\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Helper method for adding an event.\r\n   * @param {!Element} node Node upon which to listen.\r\n   * @param {string} name Event name to listen to (e.g. 'mousedown').\r\n   * @param {Object} thisObject The value of 'this' in the function.\r\n   * @param {!Function} func Function to call when event is triggered.\r\n   * @protected\r\n   */\r\n  addEvent_(node, name, thisObject, func) {\r\n    const event = Blockly.bindEventWithChecks_(node, name, thisObject, func);\r\n    this.boundEvents_.push(event);\r\n  }\r\n\r\n  /**\r\n   * Create all the dom elements for the modal.\r\n   */\r\n  render() {\r\n    // Create Overlay\r\n    this.htmlDiv_ = document.createElement(\"div\");\r\n    this.htmlDiv_.className = \"blocklyModalOverlay\";\r\n    // End Creating the Overlay\r\n\r\n    // Create Container\r\n    const modalContainer = document.createElement(\"div\");\r\n    modalContainer.className = \"blocklyModalContainer bg-yellow-500 text-white text-2xl  rounded-3xl font-sas\";\r\n    modalContainer.setAttribute(\"role\", \"dialog\");\r\n    modalContainer.setAttribute(\"aria-labelledby\", this.title_);\r\n    const img = document.createElement(\"img\");\r\n    if (this.buttonText === \"Try Again\" || this.buttonText === \"Попробуйте снова\") {\r\n      img.src = Bot;\r\n    } else {\r\n      img.src = Robot;\r\n    }\r\n    img.className = \"w-30 h-28 \";\r\n    img.alt = \"Lamp\";\r\n    modalContainer.appendChild(img);\r\n    // End creating the container\r\n\r\n    // Add Events\r\n    this.addEvent_(/** @type{!HTMLDivElement} */ modalContainer, \"keydown\", this, this.handleKeyDown_);\r\n\r\n    if (this.shouldCloseOnOverlayClick) {\r\n      this.addEvent_(this.htmlDiv_, \"click\", this, this.hide);\r\n      this.addEvent_(modalContainer, \"click\", this, (e) => {\r\n        e.stopPropagation();\r\n      });\r\n    }\r\n\r\n    // Create the header\r\n    const modalHeader = document.createElement(\"header\");\r\n    modalHeader.className = \"blocklyModalHeader\";\r\n\r\n    this.renderHeader_(modalHeader);\r\n\r\n    // const exitButton = document.createElement(\"button\");\r\n    // exitButton.className = \"blocklyModalBtn blocklyModalBtnClose\";\r\n    // this.addEvent_(exitButton, \"click\", this, this.onCancel_);\r\n    // modalHeader.appendChild(exitButton);\r\n    // End create header\r\n\r\n    // Create content\r\n    const modalContent = document.createElement(\"div\");\r\n    modalContent.className = \"blocklyModalContent\";\r\n    this.renderContent_(modalContent);\r\n    // End creating content\r\n\r\n    // Create Footer\r\n    const modalFooter = document.createElement(\"footer\");\r\n    modalFooter.className = \"flex justify-center items-center\";\r\n    const exitButton = document.createElement(\"button\");\r\n    exitButton.innerHTML = this.buttonText;\r\n    if (this.buttonText === \"Try Again\" || this.buttonText === \"Попробуйте снова\") {\r\n      exitButton.className = \"text-white mt-5 text-sm border-none p-4  bg-red-500 rounded-2xl shadow-lg\";\r\n    } else {\r\n      exitButton.className = \"text-white mt-5 text-sm border-none p-4 bg-purple-500  rounded-2xl shadow-lg\";\r\n    }\r\n    this.addEvent_(exitButton, \"click\", this, this.onCancel_);\r\n    modalFooter.appendChild(exitButton);\r\n\r\n    this.renderFooter_(modalFooter);\r\n    // End creating footer\r\n\r\n    modalContainer.appendChild(modalHeader);\r\n    modalContainer.appendChild(modalContent);\r\n    modalContainer.appendChild(modalFooter);\r\n    this.htmlDiv_.appendChild(modalContainer);\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal header.\r\n   * @param {HTMLElement} headerContainer The modal's header div.\r\n   * @protected\r\n   */\r\n  renderHeader_(headerContainer) {\r\n    const modalTitle = document.createElement(\"h2\");\r\n    modalTitle.className = \"blocklyModalHeaderTitle\";\r\n    modalTitle.appendChild(document.createTextNode(this.title_));\r\n    headerContainer.appendChild(modalTitle);\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal content div.\r\n   * @param {HTMLDivElement} _contentContainer The modal's content div.\r\n   * @protected\r\n   */\r\n  renderContent_(_contentContainer) {\r\n    // No-op on the base class.\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal footer.\r\n   * @param {HTMLElement} _footerContainer The modal's footer div.\r\n   * @protected\r\n   */\r\n  renderFooter_(_footerContainer) {\r\n    // No-op on the base class.\r\n  }\r\n}\r\n\r\nBlockly.Css.register([\r\n  `\r\n     .blocklyModalOverlay {\r\n       width: 100%;\r\n       height: 100%;\r\n       left: 0px;\r\n       top: 0px;\r\n       position: fixed;\r\n     }\r\n     .blocklyModalContainer {\r\n       border: 1px solid gray;\r\n       font-family: Helvetica;\r\n       padding: 1em;\r\n       width: 400px;\r\n       text-align : center;\r\n       display: flex;\r\n       flex-direction: column;\r\n       justify-content: center;\r\n       align-items: center;\r\n       box-shadow: 0px 10px 20px grey;\r\n       z-index: 100;\r\n       margin: 15% auto;\r\n     }\r\n     .blocklyModalHeader {\r\n       display: flex;\r\n       justify-content: space-between;\r\n       align-items: center;\r\n     }\r\n     .blocklyModalHeaderTitle {\r\n       margin-top: 0;\r\n       margin-bottom: 0;\r\n       font-size: 1.2em;\r\n       line-height: 1.25;\r\n     }\r\n     .blocklyModalHeader .blocklyModalBtn {\r\n       margin-left: auto;\r\n       height: fit-content;\r\n     }\r\n     .blocklyModalBtnClose:before {\r\n       content: \"\\\\2715\";\r\n     }\r\n     .blocklyModalBtn {\r\n       margin-right: .5em;\r\n       border: 1px solid gray;\r\n       font-weight: 500;\r\n       color: gray;\r\n       border-radius: 25px;\r\n     }\r\n     .blocklyModalBtnPrimary {\r\n       background-color: gray;\r\n       color: white;\r\n     }`,\r\n]);\r\n","export const BLOCKS_LANGUAGE_CONSTANTS = {\r\n  BLOCKS: {\r\n    ROTATION_BLOCK: {\r\n      ENGLISH: \"Rotation\",\r\n      RUSSIAN: \"вращение\",\r\n    },\r\n    START_BLOCK: {\r\n      ENGLISH: \"Start Program\",\r\n      RUSSIAN: \"запустить программу\",\r\n    },\r\n    DIRECTION_BLOCK: {\r\n      ENGLISH: \"MOVE\",\r\n      RUSSIAN: \"двигаться\",\r\n      DIRECTIONS_ENGLISH: {\r\n        FORWARD: \"FORWARD\",\r\n        BACKWARD: \"BACKWARD\",\r\n        LEFT: \"LEFT\",\r\n        RIGHT: \"RIGHT \",\r\n      },\r\n      DIRECTIONS_RUSSIAN: {\r\n        FORWARD: \"вперед\",\r\n        BACKWARD: \"назад\",\r\n        LEFT: \"левый\",\r\n        RIGHT: \"Правильно\",\r\n      },\r\n    },\r\n    GET_DISTANCE_BLOCK: {\r\n      EMGLISH: \"Get Distance\",\r\n      RUSSIAN: \"Получить расстояние\",\r\n    },\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.START_BLOCK.ENGLISH + \"  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet rotationBlock = {\r\n  type: \"rotation_block_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_angle\",\r\n      name: \"angle\",\r\n      angle: 90,\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"rotation_block_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.GET_DISTANCE_BLOCK.EMGLISH,\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.RUSSIAN + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.FORWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.BACKWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.LEFT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.RIGHT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.START_BLOCK.RUSSIAN + \"  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet rotationBlock = {\r\n  type: \"rotation_block_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.ROTATION_BLOCK.RUSSIAN + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_angle\",\r\n      name: \"angle\",\r\n      angle: 90,\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"rotation_block_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.GET_DISTANCE_BLOCK.RUSSIAN,\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\n// For English Block\r\nBlockly.JavaScript[\"direction_en\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"\\nawait SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"\\nawait SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"\\nawait SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"\\nawait SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\n// For Russian Block\r\nBlockly.JavaScript[\"direction_ru\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"\\nawait SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"\\nawait SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"\\nawait SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"\\nawait SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\n// For english block\r\nBlockly.JavaScript[\"start_block_en\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n\r\n// For russian block\r\nBlockly.JavaScript[\"start_block_ru\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\n// For english block\r\nBlockly.JavaScript[\"rotation_block_en\"] = function (block) {\r\n  var angle_angle = block.getFieldValue(\"angle\");\r\n  var code = \"\\nawait SMARTY.rotateSmarty(\" + angle_angle + \");\\n\";\r\n  return code;\r\n};\r\n\r\n// For russian block\r\nBlockly.JavaScript[\"rotation_block_ru\"] = function (block) {\r\n  var angle_angle = block.getFieldValue(\"angle\");\r\n  var code = \"\\nawait SMARTY.rotateSmarty(\" + angle_angle + \");\\n\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\n// For English Block\r\nBlockly.JavaScript[\"getdistance_en\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n\r\n// For russian  Block\r\nBlockly.JavaScript[\"getdistance_ru\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Blockly from \"blockly/core\";\r\nimport en from \"blockly/msg/en\";\r\nimport ru from \"blockly/msg/ru\";\r\nimport \"blockly/blocks\";\r\nimport \"./BlocklyComponent.css\";\r\nimport { INITIAL_TOOLBOX_JSON_EN } from \"./toolbox/en/toolbox\";\r\nimport { INITIAL_TOOLBOX_JSON_RU } from \"./toolbox/ru/toolbox\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { WorkspaceSearch } from \"@blockly/plugin-workspace-search\";\r\nimport { Modal } from \"./blocklyModal\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n// importing blocks\r\nimport \"./blocks-en\";\r\nimport \"./blocks-ru\";\r\nimport \"./generators\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.blocklyDiv = React.createRef();\r\n    this.toolbox = React.createRef();\r\n    this.blocklyArea = this.props.blocklyArea;\r\n    this.modal = null;\r\n    this.currentLanguage = \"\";\r\n    this.bleState = BLE.BLE_DISCONNECTED;\r\n  }\r\n\r\n  setLanguage() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.setLocale(en);\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.setLocale(ru);\r\n    }\r\n  }\r\n\r\n  setCategoryLang() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.ENGLISH;\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.RUSSIAN;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.currentLanguage !== this.props.language) {\r\n      this.setLanguage();\r\n      if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_EN);\r\n      } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n        console.log(INITIAL_TOOLBOX_JSON_RU);\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_RU);\r\n      }\r\n      this.currentLanguage = this.props.language;\r\n    }\r\n\r\n    if (this.bleState !== this.props.bleState) {\r\n      const { t } = this.props;\r\n      if (this.props.bleState === BLE.BLE_CONNECTED) {\r\n        this.modal = new Modal(t(\"SMARTY_CONNECTION_SUCESS\"), t(\"OK\"), this.primaryWorkspace);\r\n        this.modal.init();\r\n        this.modal.show();\r\n      } else {\r\n        this.modal = new Modal(t(\"SMARTY_CONNECTION_FAILED\"), t(\"TRY_AGAIN\"), this.primaryWorkspace);\r\n        this.modal.init();\r\n        this.modal.show();\r\n      }\r\n      this.bleState = this.props.bleState;\r\n    }\r\n  }\r\n\r\n  onResize(blocklyArea) {\r\n    console.log(\"fucntion callled\");\r\n    let element = blocklyArea;\r\n    let x = 0;\r\n    let y = 0;\r\n    do {\r\n      x += element.offsetLeft;\r\n      y += element.offsetTop;\r\n      element = element.offsetParent;\r\n    } while (element);\r\n    // Position blocklyDiv over blocklyArea.\r\n    this.blocklyDiv.current.style.left = x + \"px\";\r\n    this.blocklyDiv.current.style.top = y + \"px\";\r\n    this.blocklyDiv.current.style.width = this.blocklyArea.offsetWidth + \"px\";\r\n    this.blocklyDiv.current.style.height = this.blocklyArea.offsetHeight + \"px\";\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setLanguage();\r\n    this.initBlockly();\r\n  }\r\n\r\n  initBlockly() {\r\n    const { initialXml, children, blocklyArea, ...rest } = this.props;\r\n    Blockly.Scrollbar.scrollbarThickness = 0;\r\n    Blockly.Scrollbar.DEFAULT_SCROLLBAR_MARGIN = 0;\r\n    Blockly.Toolbox.height = 30;\r\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\r\n      toolbox: INITIAL_TOOLBOX_JSON_EN,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n    }\r\n    window.addEventListener(\"resize\", this.onResize(blocklyArea), false);\r\n    this.onResize(blocklyArea);\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n    this.primaryWorkspace.addChangeListener(this.props.onChange);\r\n    this.setSearchFuncBlockly();\r\n  }\r\n\r\n  setSearchFuncBlockly() {\r\n    const workspaceSearch = new WorkspaceSearch(this.primaryWorkspace);\r\n    workspaceSearch.init();\r\n  }\r\n\r\n  get workspace() {\r\n    return this.primaryWorkspace;\r\n  }\r\n\r\n  setXml(xml) {\r\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"w-full bottom-0 md:pb-20 lg:pb-0 pb-20  top-0 absolute  h-screen lg:h-full md:h-screen\" ref={this.blocklyDiv} id=\"blocklyDiv\" />\r\n        <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: \"none\" }} ref={this.toolbox}>\r\n          {children}\r\n        </xml>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    language: state.language.language,\r\n    bleState: state.ble.status,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withTranslation()(BlocklyComponent));\r\n","import React from \"react\";\r\nimport BlocklyComponent from \"./BlocklyComponent\";\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow };\r\n","export default __webpack_public_path__ + \"static/media/bluetooth.6914d994.png\";","export default __webpack_public_path__ + \"static/media/logout.a78baedd.png\";","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLanguage } from \"../features/language/languageSlice\";\r\nimport { changeStatus, setDevice, setServer, setService, setchar } from \"../features/ble/bleSlice\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nimport BlocklsLogo from \"../assets/images/blocks_logo.png\";\r\nimport UploadLogo from \"../assets/images/upload.png\";\r\nimport BleLogo from \"../assets/images/bluetooth.png\";\r\nimport { BLE } from \"../utils/bleConstants\";\r\nimport Popup from \"./Popup\";\r\nimport i18next from \"i18next\";\r\nimport { setToken, setAuth, setEmail, setFirstName, setLastName, setUserId } from \"../features/auth/authSlice\";\r\nimport Logout from \"../assets/images/logout.png\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n  const [navState, setnavState] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const language = useSelector((state) => state.language.language);\r\n  const bleStatus = useSelector((state) => state.ble.status);\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  const onDisconnected = () => {\r\n    console.log(\"Device disconnected!!!\");\r\n    dispatch(changeStatus(BLE.BLE_DISCONNECTED));\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    const device = await BLE.getDevice();\r\n    device.addEventListener(\"gattserverdisconnected\", onDisconnected);\r\n    const server = await BLE.connectGattServer(device);\r\n    const service = await BLE.getServices(server);\r\n    const char = await BLE.getChar(service);\r\n\r\n    if (device != undefined) {\r\n      dispatch(setDevice(device));\r\n      dispatch(setServer(server));\r\n      dispatch(setService(service));\r\n      dispatch(setchar(char));\r\n      dispatch(changeStatus(BLE.BLE_CONNECTED));\r\n      BLE.writeBle(\"This is from chrome\", char);\r\n    } else {\r\n      requestPermission();\r\n    }\r\n  };\r\n\r\n  const onLanguageChange = (e) => {\r\n    dispatch(setLanguage(e.target.value));\r\n    i18next.changeLanguage(e.target.value);\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(setAuth(false));\r\n    dispatch(setFirstName(\"\"));\r\n    dispatch(setLastName(\"\"));\r\n    dispatch(setEmail(\"\"));\r\n    dispatch(setUserId(\"\"));\r\n    dispatch(setToken(\"\"));\r\n    history.push(\"login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-pink-600   w-full\">\r\n      <nav className=\"flex  justify-center gap-x-0 md:gap-x-16 lg:gap-x-16 md:justify-between lg:justify-between pl-5 pr-10 items-center\">\r\n        <div className=\"p-2 flex  items-center justify-start\">\r\n          <img src={BlocklsLogo} className=\"w-12 h-14 \" alt=\"\" />\r\n          <label className=\"text-2xl  text-white font-sans font-medium ml-2\">{t(\"APP_TITLE\")}</label>\r\n        </div>\r\n        <div className=\"flex justify-center items-center invisible md:visible lg:visible\">\r\n          <label className=\"text-xl  text-white font-sans mr-2 uppercase lg:visible md:invisible \">{t(\"LANGUAGE\")}</label>\r\n          <select value={language} onChange={onLanguageChange} className=\" bg-gradient-to-r from-yellow-400 to-red-500 p-2 text-2xl shadow-lg pl-10 pr-10  rounded-2xl\">\r\n            <option value={CONSTANTS.LANGUAGE.ENGLISH} className=\"p-2 bg-blue-500 font-sans\">\r\n              English\r\n            </option>\r\n            <option value={CONSTANTS.LANGUAGE.RUSSIAN} className=\"p-2 bg-blue-500 font-sans\">\r\n              Russian\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\" invisible md:visible lg:visible \">\r\n          <ul className=\"flex items-center justify-between \">\r\n            <li>\r\n              <button\r\n                onClick={requestPermission}\r\n                className={\r\n                  \" ml-3  flex justify-center items-center rounded-md shadow-lg text-white hover:text-black uppercase font-medium text-sm  p-1 md:p-1 lg:p-3 md:p0 lg:p3 md:text-sm lg:text-xl \" +\r\n                  (bleStatus === BLE.BLE_CONNECTED ? \"bg-green-500 hover:bg-green-500\" : \"bg-yellow-300 hover:bg-yellow-500\")\r\n                }\r\n              >\r\n                <img src={BleLogo} className=\"w-8 h-8 mr-2\"></img>\r\n                {bleStatus === BLE.BLE_CONNECTED ? t(\"SUCESS\") : t(\"CONNECT_BLE\")}\r\n              </button>\r\n            </li>\r\n            <button\r\n              onClick={logout}\r\n              className=\" ml-3 bg-purple-400 hover:bg-purple-500  flex justify-center items-center rounded-md shadow-lg text-white hover:text-black uppercase font-medium text-sm  p-1 md:p-1 lg:p-3 md:p0 lg:p3 md:text-sm lg:text-xl \"\r\n            >\r\n              <img src={Logout} className=\"w-8 h-8 mr-2\"></img>\r\n              Logout\r\n            </button>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export const BLOCKLY_THEME = {\r\n  THEME: {\r\n    fontStyle: {\r\n      weight: \"bold\",\r\n      size: 12,\r\n    },\r\n    blockStyles: {\r\n      colour_blocks: {\r\n        colourPrimary: \"20\",\r\n      },\r\n      list_blocks: {\r\n        colourPrimary: \"260\",\r\n      },\r\n      logic_blocks: {\r\n        colourPrimary: \"210\",\r\n      },\r\n      loop_blocks: {\r\n        colourPrimary: \"120\",\r\n      },\r\n      math_blocks: {\r\n        colourPrimary: \"230\",\r\n      },\r\n      procedure_blocks: {\r\n        colourPrimary: \"290\",\r\n      },\r\n      text_blocks: {\r\n        colourPrimary: \"160\",\r\n      },\r\n      variable_blocks: {\r\n        colourPrimary: \"330\",\r\n      },\r\n      variable_dynamic_blocks: {\r\n        colourPrimary: \"310\",\r\n      },\r\n      hat_blocks: {\r\n        colourPrimary: \"330\",\r\n        hat: \"cap\",\r\n      },\r\n    },\r\n    categoryStyles: {},\r\n    componentStyles: {\r\n      workspaceBackgroundColour: \"#ECF0F1\",\r\n      toolboxBackgroundColour: \"#DB2777\",\r\n      flyoutBackgroundColour: \"#FFFFFF\",\r\n      flyoutOpacity: \"0.5\",\r\n      scrollbarColour: \"#FFFFFF\",\r\n      scrollbarOpacity: \"0.1\",\r\n      //   toolboxForegroundColour: \"#ffffff\",\r\n    },\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/play.74559e61.png\";","export default __webpack_public_path__ + \"static/media/pause.7d4f3660.png\";","export default __webpack_public_path__ + \"static/media/expand.75c14712.png\";","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BlocklyComponent from \"./modules/Blockly\";\r\nimport BlocklyJS from \"blockly/javascript\";\r\nimport { connect } from \"react-redux\";\r\n//importing blocks\r\nimport \"./modules/Blockly/blocks-en\";\r\n//importing generators\r\nimport \"./modules/Blockly/generators\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { BLOCKLY_THEME } from \"./utils/blocklyTheme\";\r\nimport { RUNCODE } from \"./utils/smartyConstants\";\r\nimport Bot from \"./assets/images/bot.png\";\r\nimport PlayIcon from \"./assets/images/play.png\";\r\nimport PauseIcon from \"./assets/images/pause.png\";\r\nimport ExpandIcon from \"./assets/images/expand.png\";\r\nimport Editor, { DiffEditor, useMonaco, loader, Monaco } from \"@monaco-editor/react\";\r\n\r\nclass BlocklySingleMode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n    this.blocklyArea = React.createRef();\r\n    this.myButton = React.createRef();\r\n    this.code = \"\";\r\n    this.initInterpreter = null;\r\n    this.state = {\r\n      code: this.code,\r\n      expanded: false,\r\n    };\r\n  }\r\n  generateCode = () => {\r\n    this.code = BlocklyJS.workspaceToCode(this.simpleWorkspace.current);\r\n    console.log(this.code);\r\n    this.setState({\r\n      code: this.code,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.generateCode();\r\n  }\r\n\r\n  getBlocklyArea() {\r\n    return this.blocklyArea;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen w-screen overflow-hidden \">\r\n        <div>\r\n          <NavBar></NavBar>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-2 w-full h-full\">\r\n          <div style={{ height: \"90%\" }} className={\"relative col-span-3 md:col-span-3 bg-red-500 w-full \" + (this.state.expanded ? \"lg:col-span-1\" : \"lg:col-span-2\")}>\r\n            <div ref={this.blocklyArea}>\r\n              <BlocklyComponent\r\n                ref={this.simpleWorkspace}\r\n                readOnly={false}\r\n                blocklyArea={this.getBlocklyArea}\r\n                trashcan={true}\r\n                toolboxPosition=\"start\"\r\n                media={process.env.PUBLIC_URL + \"media/\"}\r\n                theme={BLOCKLY_THEME.THEME}\r\n                move={{\r\n                  scrollbars: true,\r\n                  drag: true,\r\n                  wheel: true,\r\n                }}\r\n                grid={{ spacing: 50, length: 5, colour: \"gray\", snap: true }}\r\n                zoom={{ controls: true, wheel: true, startScale: 1.0, maxScale: 3, minScale: 0.3, scaleSpeed: 1.2, pinch: true }}\r\n                onChange={this.generateCode}\r\n                initialXml={`\r\n                <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <block type=\"start_block_en\" x=\"200\" y= \"200\"></block>\r\n                </xml>\r\n          `}\r\n              ></BlocklyComponent>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={\"flex flex-col p-5 justify-between items-center bg-blue-300 md:invisible lg:visible invisible \" + (this.state.expanded ? \"col-span-2\" : \"\")}>\r\n            {/* This is the generate btn */}\r\n\r\n            <div className=\"flex  justify-center  items-center  w-full h-full p-5 \">\r\n              <div className=\"w-full h-full bg-yellow-500 border-4 border-white  shadow-2xl rounded-t-2xl p-5\">\r\n                <div className=\"flex justify-center md:justify-end -mt-16 \">\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({ expanded: !this.state.expanded });\r\n                    }}\r\n                    className=\"w-14 h-18 p-1 object-top  rounded bg-purple-300 cursor-pointer \"\r\n                    src={ExpandIcon}\r\n                  ></img>\r\n                </div>\r\n                <Editor theme=\"light\" defaultLanguage=\"javascript\" value={this.code} defaultValue={this.code} height=\"100%\" />\r\n              </div>\r\n            </div>\r\n            {/* This is the card */}\r\n            <div className=\"flex flex-col  justify-center w-full p-5 mb-16 items-start\">\r\n              <div className=\"w-full py-4 px-8 bg-pink-600  shadow-lg rounded-lg \">\r\n                <div className=\"flex justify-center md:justify-end -mt-16\">\r\n                  <img className=\"w-18 h-20 object-top  rounded   border-yellow-500 \" src={Bot}></img>\r\n                </div>\r\n                <div>\r\n                  {/* This is the buttons */}\r\n                  <div className=\"flex justify-around items-center \">\r\n                    <button\r\n                      onClick={() => {\r\n                        RUNCODE(this.state.code);\r\n                      }}\r\n                      className=\"p-5 flex flex-col text-white justify-center items-center text-2xl bg-blue-500 rounded-3xl\r\n                    shadow-3xl\"\r\n                    >\r\n                      <img className=\"w-16 h-16 \" src={PlayIcon}></img>\r\n                    </button>\r\n                    <button className=\"flex text-white flex-col justify-center items-center p-5 text-2xl  bg-blue-500 rounded-3xl shadow-3xl\">\r\n                      <img className=\"w-16 h-16 \" src={PauseIcon}></img>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    bleChar: state.ble.char,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BlocklySingleMode);\r\n","export default __webpack_public_path__ + \"static/media/scan.ea70e4d8.png\";","export default __webpack_public_path__ + \"static/media/add.034e2b0c.png\";","export default __webpack_public_path__ + \"static/media/cancel.9d0a9f89.png\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeStatus } from \"../../features/modal/modalSlice\";\r\nimport CancelLogo from \"../../assets/images/cancel.png\";\r\n\r\nclass AddDeviceComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"modal h-screen w-full fixed left-0 top-0 flex justify-center items-center bg-black bg-opacity-50\">\r\n        <div className=\"bg-white rounded shadow-lg w-10/12 md:w-1/3\">\r\n          <div className=\"border-b px-4 py-2 flex justify-between items-center\">\r\n            <h3 className=\" text-2xl font-light\">Add Device</h3>\r\n            <button\r\n              className=\"text-black close-modal\"\r\n              onClick={() => {\r\n                this.props.dispatch(changeStatus(false));\r\n              }}\r\n            >\r\n              <img src={CancelLogo} className=\"w-6 h-6\"></img>\r\n            </button>\r\n          </div>\r\n          <div className=\"grid   w-full h-full place-items-center\">\r\n            <div className=\"w-full p-12 bg-white sm:w-8/12 md:w-full lg:w-full\">\r\n              <form className=\"mt-6\">\r\n                <div className=\"flex justify-between gap-3\"></div>\r\n                <label for=\"email\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                  Current Device Name\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"john.doe@company.com\"\r\n                  autocomplete=\"email\"\r\n                  className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                  required\r\n                />\r\n                <label for=\"password\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                  Current Ssid\r\n                </label>\r\n                <input\r\n                  placeholder=\"ssid\"\r\n                  autocomplete=\"new-password\"\r\n                  className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                  required\r\n                />\r\n                <label for=\"password-confirm\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                  Current Password\r\n                </label>\r\n                <input\r\n                  placeholder=\"Current Password\"\r\n                  autocomplete=\"new-password\"\r\n                  className=\"block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                  required\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end items-center w-100 border-t p-3\">\r\n            <button\r\n              onClick={() => {\r\n                this.props.dispatch(changeStatus(false));\r\n              }}\r\n              className=\"bg-red-600 hover:bg-red-700 p-4 rounded text-white mr-1 close-modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.props.dispatch(changeStatus(false));\r\n              }}\r\n              className=\"bg-blue-600 hover:bg-blue-700 p-4 rounded text-white\"\r\n            >\r\n              Add Device\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    modalState: state.modal.status,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(AddDeviceComponent);\r\n","export const TOPICS = {\r\n  subscribeDeviceStatus(client, deviceName) {\r\n    client.subscribe(\"/topic/\" + deviceName + \"/status\");\r\n  },\r\n  unSubscribeDeviceStatus(client, deviceName) {\r\n    client.unsubscribe(\"/topic/\" + deviceName + \"/status\");\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/delete.b5d68e25.png\";","export default __webpack_public_path__ + \"static/media/edit.4d2f22b4.png\";","export default __webpack_public_path__ + \"static/media/no-wifi.247a5327.png\";","export default __webpack_public_path__ + \"static/media/wifi.8dd2bea0.png\";","import { connect } from \"react-redux\";\r\nimport React, { Component } from \"react\";\r\nimport Scan from \"../../assets/images/scan.png\";\r\nimport Blocks_logo from \"../../assets/images/blocks_logo.png\";\r\nimport Logout from \"../../assets/images/logout.png\";\r\nimport Add_logo from \"../../assets/images/add.png\";\r\nimport AddDeviceComponent from \"../AddDeviceModule/AddDeviceComponent\";\r\nimport { setToken, setAuth, setEmail, setFirstName, setLastName, setUserId } from \"../../features/auth/authSlice\";\r\nimport { changeStatus, setDevice, setServer, setService, setchar } from \"../../features/ble/bleSlice\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport axiosInstance from \"../../axios\";\r\nimport client from \"../../mqtt\";\r\nimport { TOPICS } from \"../../utils/topicUtils\";\r\nimport EditIcon from \"../../assets/images/edit.png\";\r\nimport DeleteIcon from \"../../assets/images/delete.png\";\r\nimport Offline from \"../../assets/images/no-wifi.png\";\r\nimport Online from \"../../assets/images/wifi.png\";\r\nimport { SHOW_TOAST_SUCESS } from \"../../utils/utils\";\r\n\r\nclass DevicesComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deviceName: \"\",\r\n      ssid: \"\",\r\n      password: \"\",\r\n      devices: [],\r\n      addBtnStatus: true,\r\n    };\r\n  }\r\n\r\n  onMqttCallBack = (topic, message) => {\r\n    let newDevices = [];\r\n    console.log(topic + \"   \" + message);\r\n    for (let x = 0; x < this.state.devices.length; x++) {\r\n      let currentDevice = this.state.devices[x];\r\n      if (topic === \"/topic/\" + currentDevice.str_deviceName + \"/status\") {\r\n        currentDevice.str_status = true;\r\n      }\r\n      newDevices.push(currentDevice);\r\n    }\r\n    this.setState({\r\n      devices: newDevices,\r\n    });\r\n  };\r\n\r\n  onDeleteDevice = (item) => {\r\n    TOPICS.unSubscribeDeviceStatus(client, item.str_deviceName);\r\n    axiosInstance\r\n      .get(CONSTANTS.API.DELETE_DEVICE + item.id)\r\n      .then((res) => {\r\n        let code = res.data.data.affected;\r\n        if (code == 1) {\r\n          SHOW_TOAST_SUCESS(\"Sucessfully Deleted!!!\");\r\n          this.getAllDevices();\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAllDevices();\r\n  };\r\n\r\n  getAllDevices = () => {\r\n    axiosInstance\r\n      .get(CONSTANTS.API.GET_ALL_DEVICES)\r\n      .then((res) => {\r\n        let data = res.data.data;\r\n        this.setState({\r\n          devices: data,\r\n          addBtnStatus: true,\r\n        });\r\n        // Subscribe topics for status\r\n        this.state.devices.forEach((device) => {\r\n          TOPICS.subscribeDeviceStatus(client, device.str_deviceName);\r\n        });\r\n        // Listening for message\r\n        client.on(\"message\", this.onMqttCallBack);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  onDisconnected = () => {\r\n    console.log(\"Device disconnected!!!\");\r\n    this.props.dispatch(changeStatus(BLE.BLE_DISCONNECTED));\r\n  };\r\n\r\n  bleStart = async () => {\r\n    const device = await BLE.getDevice();\r\n    device.addEventListener(\"gattserverdisconnected\", this.onDisconnected);\r\n    const server = await BLE.connectGattServer(device);\r\n    const service = await BLE.getServices(server);\r\n    const char = await BLE.getChar(service);\r\n\r\n    if (device != undefined) {\r\n      this.props.dispatch(setDevice(device));\r\n      this.props.dispatch(setServer(server));\r\n      this.props.dispatch(setService(service));\r\n      this.props.dispatch(setchar(char));\r\n      this.props.dispatch(changeStatus(BLE.BLE_CONNECTED));\r\n      console.log(await BLE.getSsidPassword());\r\n      let { ssid, pass, deviceId } = JSON.parse(await BLE.getSsidPassword());\r\n      console.log(ssid);\r\n      console.log(pass);\r\n      this.setState({\r\n        ssid: ssid,\r\n        password: pass,\r\n        deviceName: deviceId,\r\n        addBtnStatus: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    this.props.dispatch(setAuth(false));\r\n    this.props.dispatch(setFirstName(\"\"));\r\n    this.props.dispatch(setLastName(\"\"));\r\n    this.props.dispatch(setEmail(\"\"));\r\n    this.props.dispatch(setUserId(\"\"));\r\n    this.props.dispatch(setToken(\"\"));\r\n    this.props.history.push(\"login\");\r\n  };\r\n\r\n  addDevice = (obj) => {\r\n    axiosInstance\r\n      .post(CONSTANTS.API.SAVE_DEVICE, {\r\n        userId: this.state.userId,\r\n        devices: [\r\n          {\r\n            ssid: obj.ssid,\r\n            pass: obj.pass,\r\n            deviceId: obj.deviceId,\r\n          },\r\n        ],\r\n      })\r\n      .then((res) => {\r\n        SHOW_TOAST_SUCESS(\"Device Added Sucessfully!!\");\r\n        this.getAllDevices();\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  sendBle = async () => {\r\n    let obj = {\r\n      ssid: this.state.ssid,\r\n      pass: this.state.password,\r\n      deviceId: this.state.deviceName,\r\n    };\r\n    await BLE.writeBle(JSON.stringify(obj), this.props.char);\r\n    this.addDevice(obj);\r\n    this.setState({\r\n      ssid: \"\",\r\n      password: \"\",\r\n      deviceName: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"py-1 h-screen w-screen bg-login_back bg-center bg-no-repeat\">\r\n          <div className=\"flex justify-end gap-2 items-center p-5\">\r\n            <img onClick={this.logout} src={Logout} className=\"w-18 h-16 bg-gray-100 rounded-full cursor-pointer p-2\"></img>\r\n          </div>\r\n          {!this.props.modalState && (\r\n            <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4 mx-auto mt-24\">\r\n              <div className=\"relative flex flex-col min-w-0 break-words bg-pink-300 w-full mb-6 shadow-lg rounded-3xl \">\r\n                <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n                  <div className=\"flex flex-wrap items-center \">\r\n                    <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n                      <img src={Blocks_logo} className=\"w-12 h-14 float-left mr-2\"></img>\r\n                      <h3 className=\"text-2xl font-light text-blueGray-700 mt-2 \">Smarty List</h3>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        value={this.state.deviceName}\r\n                        onChange={(event) => this.setState({ deviceName: event.target.value })}\r\n                        placeholder={\"Smarty Name\"}\r\n                        className=\"text-gray-700 bg-gray-200 shadow-xl  font-sans font-light   p-2 ml-2 rounded-full\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        value={this.state.ssid}\r\n                        onChange={(event) => this.setState({ ssid: event.target.value })}\r\n                        placeholder={\"Wifi SSid\"}\r\n                        className=\"text-gray-700 bg-gray-200 shadow-xl font-sans font-light   p-2 ml-2 rounded-full\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        value={this.state.password}\r\n                        onChange={(event) => this.setState({ password: event.target.value })}\r\n                        placeholder={\"Password\"}\r\n                        className=\"text-gray-700 bg-gray-200 shadow-xl  font-sans font-light  p-2 ml-2 rounded-full\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n                      <button\r\n                        hidden={false}\r\n                        disabled={this.state.addBtnStatus}\r\n                        onClick={() => {\r\n                          this.sendBle();\r\n                        }}\r\n                        className=\"bg-gray-300 text-white active:bg-indigo-600  font-light uppercase p-2 hover:bg-indigo-600 rounded-2xl outline-none text-2xl focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                      >\r\n                        <img src={Add_logo} className=\"w-12 h-12\"></img>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => this.bleStart()}\r\n                        className={\r\n                          \" active:bg-indigo-600  font-light uppercase p-2 rounded-2xl outline-none text-2xl focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 \" +\r\n                          (this.props.bleState === BLE.BLE_CONNECTED ? \"bg-blue-600 text-white \" : \"  bg-gray-300 text-white\")\r\n                        }\r\n                        type=\"button\"\r\n                      >\r\n                        <img src={Scan} className=\"w-12 h-12\"></img>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"block w-full overflow-x-auto\">\r\n                  <table className=\"items-center bg-transparent w-full border-collapse \">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Device Name\r\n                        </th>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Wifi Ssid\r\n                        </th>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Password\r\n                        </th>\r\n                        <th className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Status\r\n                        </th>\r\n                        <th className=\" flex justify-center items-center px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left\">\r\n                          Actions\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                      {/* <tr>{this.state.devices}</tr> */}\r\n                      {this.state.devices.map((item, i) => (\r\n                        <tr key={i}>\r\n                          <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xl whitespace-nowrap p-4 text-left text-blueGray-700 \">{item.str_deviceName}</td>\r\n                          <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xl whitespace-nowrap p-4 text-left text-blueGray-700 \">{item.str_ssid}</td>\r\n                          <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xl whitespace-nowrap p-4 text-left text-blueGray-700 \">{item.str_pass}</td>\r\n                          <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xl whitespace-nowrap p-4 text-left text-blueGray-700 \">\r\n                            <img className=\" ml-1 w-12 h-12 flex justify-center items-center flex-col\" src={item.str_status === true ? Online : Offline} alt=\"\" />\r\n                            <h1>{item.str_status === true ? \"Online\" : \"Offline\"}</h1>\r\n                          </td>\r\n                          <td className=\" flex justify-center items-center gap-2 border-t-0 px-6 align-middle border-l-0 border-r-0 text-xl whitespace-nowrap p-4 text-left text-blueGray-700 \">\r\n                            <button onClick={() => this.onDeleteDevice(item)} className=\"flex justify-center gap-2 items-center px-6 py-2 rounded-2xl  text-xl shadow-xl bg-red-500 text-white\">\r\n                              <img src={DeleteIcon} className=\"w-8 h-8\"></img>Delete\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <footer className=\"relative pt-8 pb-6 mt-16\">\r\n            <div className=\"container mx-auto px-4\">\r\n              <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n                <div className=\"w-full md:w-6/12 px-4 mx-auto text-center\">\r\n                  <div className=\"text-sm text-blueGray-500 font-semibold py-1\">\r\n                    <button className=\"p-8 shadow-2xl text-3xl hover:bg-purple-900 hover:shadow-sm text-white bg-purple-700 rounded-full \">Start Coding </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    modalState: state.modal.status,\r\n    bleState: state.ble.status,\r\n    char: state.ble.char,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default compose(withRouter, connect(mapStateToProps))(DevicesComponent);\r\n","import Blocks_logo from \"../../assets/images/blocks_logo.png\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { SHOW_TOAST_SUCESS, SHOW_TOAST_WARN } from \"../../utils/utils\";\r\nimport axiosInstance from \"../../axios\";\r\n\r\nclass SignupComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordCnfrm: \"\",\r\n    };\r\n  }\r\n\r\n  signup = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.firstname === \"\" || this.state.lastname === \"\" || this.state.email === \"\" || this.state.password === \"\" || this.state.password === \"\") {\r\n      SHOW_TOAST_WARN(\"Please Fill The form\");\r\n    } else {\r\n      if (this.state.password != this.state.passwordCnfrm) {\r\n        SHOW_TOAST_WARN(\"Password does not match\");\r\n        return;\r\n      }\r\n      axiosInstance\r\n        .post(CONSTANTS.API.REGISTER, { email: this.state.email, password: this.state.password, first_name: this.state.firstname, last_name: this.state.lastname })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          SHOW_TOAST_SUCESS(\"Account Registered Sucess\");\r\n          setTimeout(() => {\r\n            this.props.history.push(\"login\");\r\n          }, 4000);\r\n        })\r\n        .catch((res) => {\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"grid min-h-screen place-items-center bg-login_back bg-center bg-no-repeat\">\r\n          <div className=\"w-11/12 rounded-xl shadow-2xl p-12 bg-gray-100 sm:w-8/12 md:w-1/2 lg:w-5/12\">\r\n            <div className=\"flex flex-col justify-center items-center\">\r\n              <img src={Blocks_logo} className=\"w-14 h-16 float-left mr-2\"></img>\r\n\r\n              <h1 className=\"text-2xl font-semibold\">Signup Blockly</h1>\r\n            </div>\r\n\r\n            <form className=\"mt-8\">\r\n              <div className=\"flex justify-between gap-3\">\r\n                <span className=\"w-1/2\">\r\n                  <label for=\"firstname\" className=\"block text-xs font-semibold text-gray-600 uppercase\">\r\n                    Firstname\r\n                  </label>\r\n                  <input\r\n                    onChange={(event) => {\r\n                      this.setState({ firstname: event.target.value });\r\n                    }}\r\n                    id=\"firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"John\"\r\n                    autocomplete=\"given-name\"\r\n                    className=\"rounded-full  block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                    required\r\n                  />\r\n                </span>\r\n                <span className=\"w-1/2\">\r\n                  <label for=\"lastname\" className=\"block text-xs font-semibold text-gray-600 uppercase\">\r\n                    Lastname\r\n                  </label>\r\n                  <input\r\n                    onChange={(event) => {\r\n                      this.setState({ lastname: event.target.value });\r\n                    }}\r\n                    id=\"lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Doe\"\r\n                    autocomplete=\"family-name\"\r\n                    className=\"rounded-full block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                    required\r\n                  />\r\n                </span>\r\n              </div>\r\n              <label for=\"email\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                E-mail\r\n              </label>\r\n              <input\r\n                onChange={(event) => {\r\n                  this.setState({ email: event.target.value });\r\n                }}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"john.doe@company.com\"\r\n                autocomplete=\"email\"\r\n                className=\"rounded-full block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                required\r\n              />\r\n              <label for=\"password\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                Password\r\n              </label>\r\n              <input\r\n                onChange={(event) => {\r\n                  this.setState({ password: event.target.value });\r\n                }}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"********\"\r\n                autocomplete=\"new-password\"\r\n                className=\"rounded-full block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                required\r\n              />\r\n              <label for=\"password-confirm\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">\r\n                Confirm password\r\n              </label>\r\n              <input\r\n                onChange={(event) => {\r\n                  this.setState({ passwordCnfrm: event.target.value });\r\n                }}\r\n                id=\"password-confirm\"\r\n                type=\"password\"\r\n                name=\"password-confirm\"\r\n                placeholder=\"********\"\r\n                autocomplete=\"new-password\"\r\n                className=\"rounded-full block w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\"\r\n                required\r\n              />\r\n              <div className=\"w-full flex justify-center items-center\">\r\n                <button\r\n                  onClick={(event) => this.signup(event)}\r\n                  type=\"submit\"\r\n                  className=\"w-1/2  py-3 mt-6 font-medium tracking-widest text-white uppercase bg-purple-500 rounded-full shadow-lg focus:outline-none hover:bg-purple-900 hover:shadow-none\"\r\n                >\r\n                  Sign up\r\n                </button>\r\n              </div>\r\n\r\n              <p\r\n                onClick={() => {\r\n                  this.props.history.push(\"../\");\r\n                }}\r\n                className=\"flex justify-between inline-block mt-4 text-xs text-gray-500 cursor-pointer hover:text-black\"\r\n              >\r\n                Already registered?\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignupComponent);\r\n","import { Switch, Route, Redirect } from \"react-router-dom\";\r\nfunction PrivateRoute({ component: Component, authed, ...rest }) {\r\n  return <Route {...rest} render={(props) => (authed === true ? <Component {...props} /> : <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />)} />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LoginComponent from \"../modules/LoginModule/LoginComponent\";\r\nimport BlocklySingleMode from \"../BlocklySingleMode\";\r\nimport DevicesComponent from \"../modules/Devices/DevicesComponent\";\r\nimport SignupComponent from \"../modules/SingupModule/SignupComponent\";\r\nimport BlocklyComponent from \"../modules/Blockly\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass RouterComponent extends Component {\r\n  render() {\r\n    return (\r\n      <main>\r\n        <ToastContainer />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LoginComponent} />\r\n          <Route path=\"/login\" component={LoginComponent} />\r\n          <Route path=\"/register\" component={SignupComponent} />\r\n          <PrivateRoute authed={this.props.authenticated} path=\"/blockly\" component={BlocklySingleMode} />\r\n          <PrivateRoute authed={this.props.authenticated} path=\"/devices\" component={DevicesComponent} />\r\n        </Switch>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RouterComponent);\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { persistor, store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n// needed for translations\r\nimport i18next from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport HttpApi from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { CONSTANTS } from \"./utils/constants\";\r\nimport { client } from \"./mqtt\";\r\nimport RouterComponent from \"./routing/router\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\ni18next\r\n  .use(HttpApi)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    supportedLngs: [\"en\", \"ru\"],\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // Options for language detector\r\n    detection: {\r\n      order: [\"path\", \"cookie\", \"htmlTag\"],\r\n      // caches: [\"cookie\"],\r\n    },\r\n    react: { useSuspense: false },\r\n    backend: {\r\n      loadPath: \"/assets/locales/{{lng}}/translation.json\",\r\n    },\r\n  });\r\n\r\ni18next.changeLanguage(CONSTANTS.LANGUAGE.ENGLISH);\r\n//This sifsfsadfdasfds\r\nReactDOM.render(\r\n  // <Suspense fallback={loadingMarkup}>\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <RouterComponent></RouterComponent>\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  // </Suspense>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  status: false,\r\n};\r\n\r\nexport const modalSlice = createSlice({\r\n  name: \"modal\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus } = modalSlice.actions;\r\nexport default modalSlice.reducer;\r\n","export const CONSTANTS = {\r\n  LANGUAGE: {\r\n    RUSSIAN: \"ru\",\r\n    ENGLISH: \"en\",\r\n  },\r\n  API: {\r\n    LOGIN: \"/api/login\",\r\n    REGISTER: \"/api/register\",\r\n    SAVE_DEVICE: \"/api/device/add\",\r\n    GET_ALL_DEVICES: \"/api/device/findAll\",\r\n    DELETE_DEVICE: \"/api/device/delete/\",\r\n  },\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nconst initialState = {\r\n  language: CONSTANTS.LANGUAGE.ENGLISH,\r\n};\r\n\r\nexport const languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState,\r\n  reducers: {\r\n    setLanguage: (state, action) => {\r\n      state.language = action.payload;\r\n      console.log(state.language);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLanguage } = languageSlice.actions;\r\nexport default languageSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  token: \"\",\r\n  userId: 0,\r\n  firstName: \"\",\r\n  LastName: \"\",\r\n  Email: \"\",\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setAuth: (state, action) => {\r\n      state.authenticated = action.payload;\r\n    },\r\n    setToken: (state, action) => {\r\n      state.token = action.payload;\r\n    },\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    setFirstName: (state, action) => {\r\n      state.firstName = action.payload;\r\n    },\r\n    setLastName: (state, action) => {\r\n      state.LastName = action.payload;\r\n    },\r\n    setEmail: (state, action) => {\r\n      state.char = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAuth, setToken, setFirstName, setLastName, setEmail, setUserId } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","import { store } from \"../app/store\";\r\nexport const BLE = {\r\n  BLE_DEVICE_NAME: \"MyESP32\",\r\n  BLE_SERVICE_NAME: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  BLE_CHAR_UUID: \"beb5483e-36e1-4688-b7f5-ea07361b26a8\",\r\n  BLE_DISCONNECTED: \"disconnected\",\r\n  BLE_CONNECTED: \"Connected\",\r\n  getDevice() {\r\n    return navigator.bluetooth.requestDevice({ filters: [{ name: BLE.BLE_DEVICE_NAME }], optionalServices: [BLE.BLE_SERVICE_NAME] });\r\n  },\r\n  connectGattServer(device) {\r\n    return device.gatt.connect();\r\n  },\r\n  getServices(server) {\r\n    return server.getPrimaryService(BLE.BLE_SERVICE_NAME);\r\n  },\r\n  getChar(service) {\r\n    return service.getCharacteristic(BLE.BLE_CHAR_UUID);\r\n  },\r\n  writeBle(data, char) {\r\n    char.writeValue(BLE.getTextEncoder().encode(data));\r\n  },\r\n  async getSsidPassword() {\r\n    let value = await store.getState().ble.char.readValue();\r\n    console.log(new TextDecoder().decode(value));\r\n    return new TextDecoder().decode(value);\r\n  },\r\n  getTextEncoder() {\r\n    return new TextEncoder();\r\n  },\r\n};\r\n"],"sourceRoot":""}