{"version":3,"sources":["features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","features/ble/bleSlice.js","features/language/languageSlice.js","utils/constants.js","utils/smartyConstants.js","utils/blocklyCategories.js","utils/bleConstants.js","modules/Blockly/toolbox/en/toolbox.js","modules/Blockly/toolbox/ru/toolbox.js","assets/images/robot.png","assets/images/bot.png","modules/Blockly/blocklyModal/index.js","utils/blockConstants.js","modules/Blockly/blocks-en/directionBlock.js","modules/Blockly/blocks-en/startBlock.js","modules/Blockly/blocks-en/rotationBlock.js","modules/Blockly/blocks-en/getDistanceBlock.js","modules/Blockly/blocks-ru/directionBlock.js","modules/Blockly/blocks-ru/startBlock.js","modules/Blockly/blocks-ru/rotationBlock.js","modules/Blockly/blocks-ru/getDistanceBlock.js","modules/Blockly/generators/directionBlockGenerator.js","modules/Blockly/generators/startBlockGenerator.js","modules/Blockly/generators/rotationBlockGenerator.js","modules/Blockly/generators/getDistanceGenerator.js","modules/Blockly/BlocklyComponent.jsx","modules/Blockly/index.js","assets/images/blocks_logo.png","assets/images/bluetooth.png","components/NavBar.jsx","assets/fonts/fingerPaint.ttf","utils/blocklyTheme.js","assets/images/play.png","assets/images/pause.png","assets/images/expand.png","App.js","index.js"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","customizedMiddleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","counter","counterReducer","language","languageReducer","ble","bleReducer","middleware","BLE","BLE_DISCONNECTED","device","server","service","char","bleSlice","changeStatus","setDevice","setServer","setService","setchar","CONSTANTS","LANGUAGE","ENGLISH","languageSlice","setLanguage","console","log","RUSSIAN","SMARTY","moveForward","getState","writeValue","TextEncoder","encode","moveBackward","BLOCKS","DIRECTION_BLOCK","DIRECTIONS_ENGLISH","BACKWARD","moveLeft","LEFT","moveRight","RIGHT","rotateSmarty","angle","ROTATION_BLOCK","getDistance","readValue","TextDecoder","decode","moveForwardSteps","num","DIRECTION_STEPS_BLOCK","DIRECTIONS_STEPS_ENGLISH","FORWARD","moveBackwardSteps","moveLeftSteps","moveRightSteps","RUNCODE","code","eval","BLOCKLY_CATEGORIES_CONSTANTS","EN_SMARTY","EN_LOGIC","EN_LOOPS","EN_MATH","EN_TEXT","EN_LISTS","EN_COLOUR","EN_FUNCTIONS","RU_SMARTY","RU_LOGIC","RU_LOOPS","RU_MATH","RU_TEXT","RU_LISTS","RU_COLOUR","RU_FUNCTIONS","BLE_DEVICE_NAME","BLE_SERVICE_NAME","BLE_CHAR_UUID","BLE_CONNECTED","getDevice","navigator","bluetooth","requestDevice","filters","optionalServices","connectGattServer","gatt","connect","getServices","getPrimaryService","getChar","getCharacteristic","writeBle","getTextEncoder","INITIAL_TOOLBOX_JSON_EN","kind","contents","cssConfig","container","row","label","icon","type","blockxml","custom","INITIAL_TOOLBOX_JSON_RU","Modal","title","buttonText","workspace","this","title_","workspace_","lastFocusableEl_","firstFocusableEl_","htmlDiv_","boundEvents_","shouldCloseOnOverlayClick","shouldCloseOnEsc","render","event","Blockly","remove","show","RTL","widgetDispose_","widgetCreate_","focusableEls","querySelectorAll","length","classList","contains","focus","hide","widgetDiv","DIV","dom","addClass","appendChild","removeClass","e","document","activeElement","preventDefault","keyCode","KeyCodes","TAB","stopPropagation","shiftKey","handleBackwardTab_","handleForwardTab_","ESC","node","thisObject","func","push","createElement","className","modalContainer","setAttribute","img","src","Bot","Robot","alt","addEvent_","handleKeyDown_","modalHeader","renderHeader_","modalContent","renderContent_","modalFooter","exitButton","innerHTML","onCancel_","renderFooter_","headerContainer","modalTitle","createTextNode","_contentContainer","_footerContainer","register","BLOCKS_LANGUAGE_CONSTANTS","START_BLOCK","DIRECTIONS_RUSSIAN","GET_DISTANCE_BLOCK","EMGLISH","directionBlock","message0","args0","options","previousStatement","nextStatement","colour","tooltip","helpUrl","init","jsonInit","startBlock","align","rotationBlock","getDistanceBlock","output","block","dropdown_direction","getFieldValue","statementToCode","ORDER_NONE","BlocklyComponent","props","blocklyDiv","React","createRef","toolbox","blocklyArea","modal","currentLanguage","bleState","setLocale","en","ru","Msg","LOGIC_CATEGORY_NAME","CATERGORIES","LOGIC_CATEGORY","primaryWorkspace","updateToolbox","t","element","x","y","offsetLeft","offsetTop","offsetParent","current","style","left","top","width","offsetWidth","height","offsetHeight","svgResize","initBlockly","initialXml","children","rest","Scrollbar","scrollbarThickness","DEFAULT_SCROLLBAR_MARGIN","Toolbox","inject","Xml","domToWorkspace","textToDom","window","addEventListener","onResize","addChangeListener","onChange","setSearchFuncBlockly","WorkspaceSearch","xml","Fragment","ref","id","xmlns","is","display","Component","withTranslation","NavBar","useState","dispatch","useDispatch","useSelector","bleStatus","useTranslation","onDisconnected","requestPermission","undefined","BlocklsLogo","target","i18next","changeLanguage","onClick","BleLogo","BLOCKLY_THEME","THEME","fontStyle","weight","size","blockStyles","colour_blocks","colourPrimary","list_blocks","logic_blocks","loop_blocks","math_blocks","procedure_blocks","text_blocks","variable_blocks","variable_dynamic_blocks","hat_blocks","hat","categoryStyles","componentStyles","workspaceBackgroundColour","toolboxBackgroundColour","flyoutBackgroundColour","flyoutOpacity","scrollbarColour","scrollbarOpacity","App","generateCode","BlocklyJS","workspaceToCode","simpleWorkspace","setState","myButton","initInterpreter","expanded","readOnly","getBlocklyArea","trashcan","toolboxPosition","media","theme","move","scrollbars","drag","wheel","grid","spacing","snap","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","ExpandIcon","defaultLanguage","defaultValue","PlayIcon","PauseIcon","bleChar","use","HttpApi","LanguageDetector","initReactI18next","supportedLngs","fallbackLng","debug","detection","order","react","useSuspense","backend","loadPath","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf123e34.chunk.js","sourcesContent":["// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport languageReducer from \"../features/language/languageSlice\";\nimport bleReducer from \"../features/ble/bleSlice\";\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nconst customizedMiddleware = getDefaultMiddleware({\n  serializableCheck: false,\n});\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    language: languageReducer,\n    ble: bleReducer,\n  },\n  middleware: (getDefaultMiddleware) => customizedMiddleware,\n});\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\n\r\nconst initialState = {\r\n  status: BLE.BLE_DISCONNECTED,\r\n  device: null,\r\n  server: null,\r\n  service: null,\r\n  char: null,\r\n};\r\n\r\nexport const bleSlice = createSlice({\r\n  name: \"ble\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    setDevice: (state, action) => {\r\n      state.device = action.payload;\r\n    },\r\n    setServer: (state, action) => {\r\n      state.server = action.payload;\r\n    },\r\n    setService: (state, action) => {\r\n      state.service = action.payload;\r\n    },\r\n    setchar: (state, action) => {\r\n      state.char = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus, setDevice, setServer, setService, setchar } = bleSlice.actions;\r\nexport default bleSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nconst initialState = {\r\n  language: CONSTANTS.LANGUAGE.ENGLISH,\r\n};\r\n\r\nexport const languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState,\r\n  reducers: {\r\n    setLanguage: (state, action) => {\r\n      state.language = action.payload;\r\n      console.log(state.language);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLanguage } = languageSlice.actions;\r\nexport default languageSlice.reducer;\r\n","import { BLOCKLY_CATEGORIES_CONSTANTS } from \"./blocklyCategories\";\r\n\r\nexport const CONSTANTS = {\r\n  LANGUAGE: {\r\n    RUSSIAN: \"ru\",\r\n    ENGLISH: \"en\",\r\n  },\r\n};\r\n","import { store } from \"../app/store\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nexport const SMARTY = {\r\n  async moveForward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(\"{ 'ssid' : 'Notion360' , 'pass' : 'notion36@' , 'mode' : 'wifi' }\"));\r\n  },\r\n  async moveBackward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD));\r\n  },\r\n  async moveLeft() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT));\r\n  },\r\n  async moveRight() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT));\r\n  },\r\n  async rotateSmarty(angle) {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \",\" + angle));\r\n  },\r\n  async getDistance() {\r\n    let value = await store.getState().ble.char.readValue();\r\n    console.log(new TextDecoder().decode(value));\r\n    return new TextDecoder().decode(value);\r\n  },\r\n/////////////////////////\r\nasync moveForwardSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.FORWARD +\",\"+ num));\r\n},\r\nasync moveBackwardSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.BACKWARD +\",\"+ num));\r\n},\r\nasync moveLeftSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.LEFT +\",\"+ num));\r\n},\r\nasync moveRightSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.RIGHT +\",\"+ num));\r\n},\r\n\r\n};\r\n\r\nexport const RUNCODE = (code) => {\r\n  eval(code);\r\n};\r\n","import i18next from \"i18next\";\r\n\r\nexport const BLOCKLY_CATEGORIES_CONSTANTS = {\r\n  // ENGLISH\r\n  EN_SMARTY: \"Smarty\",\r\n  EN_LOGIC: \"Logic\",\r\n  EN_LOOPS: \"Loops\",\r\n  EN_MATH: \"Math\",\r\n  EN_TEXT: \"Text\",\r\n  EN_LISTS: \"List\",\r\n  EN_COLOUR: \"Colour\",\r\n  EN_FUNCTIONS: \"Functions\",\r\n\r\n  // RUSSIAN\r\n  RU_SMARTY: \"Smarty\",\r\n  RU_LOGIC: \"логика\",\r\n  RU_LOOPS: \"петли\",\r\n  RU_MATH: \"математика\",\r\n  RU_TEXT: \"текст\",\r\n  RU_LISTS: \"списки\",\r\n  RU_COLOUR: \"цвет\",\r\n  RU_FUNCTIONS: \"функции\",\r\n};\r\n","export const BLE = {\r\n  BLE_DEVICE_NAME: \"Long name works now\",\r\n  BLE_SERVICE_NAME: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  BLE_CHAR_UUID: \"beb5483e-36e1-4688-b7f5-ea07361b26a8\",\r\n  BLE_DISCONNECTED: \"disconnected\",\r\n  BLE_CONNECTED: \"Connected\",\r\n  getDevice() {\r\n    return navigator.bluetooth.requestDevice({ filters: [{ name: BLE.BLE_DEVICE_NAME }], optionalServices: [BLE.BLE_SERVICE_NAME] });\r\n  },\r\n  connectGattServer(device) {\r\n    return device.gatt.connect();\r\n  },\r\n  getServices(server) {\r\n    return server.getPrimaryService(BLE.BLE_SERVICE_NAME);\r\n  },\r\n  getChar(service) {\r\n    return service.getCharacteristic(BLE.BLE_CHAR_UUID);\r\n  },\r\n  writeBle(data, char) {\r\n    char.writeValue(BLE.getTextEncoder().encode(data));\r\n  },\r\n  getTextEncoder() {\r\n    return new TextEncoder();\r\n  },\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_EN = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-4  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" font-sas text-lg text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_en\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block_en\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block_en\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance_en\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_RU = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-2  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas   text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction_ru\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block_ru\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block_ru\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance_ru\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 ml-2 mr-2 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/robot.4d6a9af2.png\";","export default __webpack_public_path__ + \"static/media/bot.fdb0c459.png\";","/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n/**\r\n * @fileoverview Class responsible for creating a Blockly modal.\r\n * @author aschmiedt@google.com (Abby Schmiedt)\r\n */\r\n\r\nimport * as Blockly from \"blockly/core\";\r\nimport Robot from \"../../../assets/images/robot.png\";\r\nimport Bot from \"../../../assets/images/bot.png\";\r\n\r\n/**\r\n * Class responsible for creating a Blockly modal.\r\n */\r\nexport class Modal {\r\n  /**\r\n   * Constructor for creating a Blockly modal.\r\n   * @param {string} title The title for the modal.\r\n   * @param {!Blockly.WorkspaceSvg} workspace The workspace to display the modal\r\n   *     over.\r\n   */\r\n  constructor(title, buttonText, workspace) {\r\n    /**\r\n     * The title for the modal.\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.title_ = title;\r\n\r\n    /**\r\n     * The workspace to display the modal over.\r\n     * @type {!Blockly.WorkspaceSvg}\r\n     * @protected\r\n     */\r\n    this.workspace_ = workspace;\r\n\r\n    /**\r\n     * The last focusable element for the modal.\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.lastFocusableEl_ = null;\r\n\r\n    /**\r\n     * The first focusable element for the modal.\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.firstFocusableEl_ = null;\r\n\r\n    /**\r\n     * HTML container for the modal.\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.htmlDiv_ = null;\r\n\r\n    /**\r\n     * Array holding info needed to unbind events.\r\n     * Used for disposing.\r\n     * Ex: [[node, name, func], [node, name, func]].\r\n     * @type {!Array.<Array<?>>}\r\n     * @private\r\n     */\r\n    this.boundEvents_ = [];\r\n\r\n    /**\r\n     * If true close the modal when the user clicks outside the modal.\r\n     * Otherwise, only close when user hits the 'X' button or escape.\r\n     * @type {boolean}\r\n     */\r\n    this.shouldCloseOnOverlayClick = true;\r\n\r\n    /**\r\n     * If true close the modal when the user hits escape. Otherwise, do not\r\n     * close on escape.\r\n     */\r\n    this.shouldCloseOnEsc = true;\r\n\r\n    // The button text\r\n    this.buttonText = buttonText;\r\n  }\r\n\r\n  /**\r\n   * Initialize a Blockly modal.\r\n   */\r\n  init() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Disposes of this modal.\r\n   * Unlink from all DOM elements and remove all event listeners\r\n   * to prevent memory leaks.\r\n   */\r\n  dispose() {\r\n    for (const event of this.boundEvents_) {\r\n      Blockly.unbindEvent_(event);\r\n    }\r\n    this.boundEvents_ = [];\r\n    if (this.htmlDiv_) {\r\n      this.htmlDiv_.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows the Blockly modal and focus on the first focusable element.\r\n   */\r\n  show() {\r\n    Blockly.WidgetDiv.show(this, this.workspace_.RTL, () => this.widgetDispose_());\r\n    this.widgetCreate_();\r\n    const focusableEls = this.htmlDiv_.querySelectorAll(\"a[href],\" + \"area[href], input:not([disabled]), select:not([disabled]),\" + 'textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\r\n    if (focusableEls.length > 0) {\r\n      this.firstFocusableEl_ = focusableEls[0];\r\n      this.lastFocusableEl_ = focusableEls[focusableEls.length - 1];\r\n      if (focusableEls[0].classList.contains(\"blocklyModalBtnClose\") && focusableEls.length > 1) {\r\n        focusableEls[1].focus();\r\n      } else {\r\n        this.firstFocusableEl_.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the Blockly modal.\r\n   */\r\n  hide() {\r\n    Blockly.WidgetDiv.hide();\r\n  }\r\n\r\n  /**\r\n   * The function to be called when the user hits the 'x' button.\r\n   * @protected\r\n   */\r\n  onCancel_() {\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * Add the Blockly modal to the widget div and position it properly.\r\n   * @protected\r\n   */\r\n  widgetCreate_() {\r\n    const widgetDiv = Blockly.WidgetDiv.DIV;\r\n    Blockly.utils.dom.addClass(this.htmlDiv_, \"blocklyModalOpen\");\r\n    widgetDiv.appendChild(this.htmlDiv_);\r\n  }\r\n\r\n  /**\r\n   * Disposes of any events or dom-references belonging to the editor.\r\n   * @protected\r\n   */\r\n  widgetDispose_() {\r\n    Blockly.utils.dom.removeClass(this.htmlDiv_, \"blocklyModalOpen\");\r\n  }\r\n\r\n  /**\r\n   * Handle when the user goes to the previous focusable element.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleBackwardTab_(e) {\r\n    if (document.activeElement === this.firstFocusableEl_) {\r\n      e.preventDefault();\r\n      this.lastFocusableEl_.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle when the user goes to the next focusable element.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleForwardTab_(e) {\r\n    if (document.activeElement === this.lastFocusableEl_) {\r\n      e.preventDefault();\r\n      this.firstFocusableEl_.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event for a Blockly modal. Handles forward tab, backward\r\n   * tab, and escape button.\r\n   * @param {KeyboardEvent} e The keydown event.\r\n   * @private\r\n   */\r\n  handleKeyDown_(e) {\r\n    if (e.keyCode === Blockly.utils.KeyCodes.TAB) {\r\n      // If there are no elements or there is one element don't wrap.\r\n      if (!this.firstFocusableEl_ || this.firstFocusableEl_ === this.lastFocusableEl_) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        return;\r\n      }\r\n      if (e.shiftKey) {\r\n        this.handleBackwardTab_(e);\r\n      } else {\r\n        this.handleForwardTab_(e);\r\n      }\r\n    } else if (e.keyCode === Blockly.utils.KeyCodes.ESC && this.shouldCloseOnEsc) {\r\n      this.hide();\r\n    }\r\n    e.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Helper method for adding an event.\r\n   * @param {!Element} node Node upon which to listen.\r\n   * @param {string} name Event name to listen to (e.g. 'mousedown').\r\n   * @param {Object} thisObject The value of 'this' in the function.\r\n   * @param {!Function} func Function to call when event is triggered.\r\n   * @protected\r\n   */\r\n  addEvent_(node, name, thisObject, func) {\r\n    const event = Blockly.bindEventWithChecks_(node, name, thisObject, func);\r\n    this.boundEvents_.push(event);\r\n  }\r\n\r\n  /**\r\n   * Create all the dom elements for the modal.\r\n   */\r\n  render() {\r\n    // Create Overlay\r\n    this.htmlDiv_ = document.createElement(\"div\");\r\n    this.htmlDiv_.className = \"blocklyModalOverlay\";\r\n    // End Creating the Overlay\r\n\r\n    // Create Container\r\n    const modalContainer = document.createElement(\"div\");\r\n    modalContainer.className = \"blocklyModalContainer bg-yellow-500 text-white text-2xl  rounded-3xl font-sas\";\r\n    modalContainer.setAttribute(\"role\", \"dialog\");\r\n    modalContainer.setAttribute(\"aria-labelledby\", this.title_);\r\n    const img = document.createElement(\"img\");\r\n    if (this.buttonText === \"Try Again\" || this.buttonText === \"Попробуйте снова\") {\r\n      img.src = Bot;\r\n    } else {\r\n      img.src = Robot;\r\n    }\r\n    img.className = \"w-30 h-28 \";\r\n    img.alt = \"Lamp\";\r\n    modalContainer.appendChild(img);\r\n    // End creating the container\r\n\r\n    // Add Events\r\n    this.addEvent_(/** @type{!HTMLDivElement} */ modalContainer, \"keydown\", this, this.handleKeyDown_);\r\n\r\n    if (this.shouldCloseOnOverlayClick) {\r\n      this.addEvent_(this.htmlDiv_, \"click\", this, this.hide);\r\n      this.addEvent_(modalContainer, \"click\", this, (e) => {\r\n        e.stopPropagation();\r\n      });\r\n    }\r\n\r\n    // Create the header\r\n    const modalHeader = document.createElement(\"header\");\r\n    modalHeader.className = \"blocklyModalHeader\";\r\n\r\n    this.renderHeader_(modalHeader);\r\n\r\n    // const exitButton = document.createElement(\"button\");\r\n    // exitButton.className = \"blocklyModalBtn blocklyModalBtnClose\";\r\n    // this.addEvent_(exitButton, \"click\", this, this.onCancel_);\r\n    // modalHeader.appendChild(exitButton);\r\n    // End create header\r\n\r\n    // Create content\r\n    const modalContent = document.createElement(\"div\");\r\n    modalContent.className = \"blocklyModalContent\";\r\n    this.renderContent_(modalContent);\r\n    // End creating content\r\n\r\n    // Create Footer\r\n    const modalFooter = document.createElement(\"footer\");\r\n    modalFooter.className = \"flex justify-center items-center\";\r\n    const exitButton = document.createElement(\"button\");\r\n    exitButton.innerHTML = this.buttonText;\r\n    if (this.buttonText === \"Try Again\" || this.buttonText === \"Попробуйте снова\") {\r\n      exitButton.className = \"text-white mt-5 text-sm border-none p-4  bg-red-500 rounded-2xl shadow-lg\";\r\n    } else {\r\n      exitButton.className = \"text-white mt-5 text-sm border-none p-4 bg-purple-500  rounded-2xl shadow-lg\";\r\n    }\r\n    this.addEvent_(exitButton, \"click\", this, this.onCancel_);\r\n    modalFooter.appendChild(exitButton);\r\n\r\n    this.renderFooter_(modalFooter);\r\n    // End creating footer\r\n\r\n    modalContainer.appendChild(modalHeader);\r\n    modalContainer.appendChild(modalContent);\r\n    modalContainer.appendChild(modalFooter);\r\n    this.htmlDiv_.appendChild(modalContainer);\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal header.\r\n   * @param {HTMLElement} headerContainer The modal's header div.\r\n   * @protected\r\n   */\r\n  renderHeader_(headerContainer) {\r\n    const modalTitle = document.createElement(\"h2\");\r\n    modalTitle.className = \"blocklyModalHeaderTitle\";\r\n    modalTitle.appendChild(document.createTextNode(this.title_));\r\n    headerContainer.appendChild(modalTitle);\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal content div.\r\n   * @param {HTMLDivElement} _contentContainer The modal's content div.\r\n   * @protected\r\n   */\r\n  renderContent_(_contentContainer) {\r\n    // No-op on the base class.\r\n  }\r\n\r\n  /**\r\n   * Render content for the modal footer.\r\n   * @param {HTMLElement} _footerContainer The modal's footer div.\r\n   * @protected\r\n   */\r\n  renderFooter_(_footerContainer) {\r\n    // No-op on the base class.\r\n  }\r\n}\r\n\r\nBlockly.Css.register([\r\n  `\r\n     .blocklyModalOverlay {\r\n       width: 100%;\r\n       height: 100%;\r\n       left: 0px;\r\n       top: 0px;\r\n       position: fixed;\r\n     }\r\n     .blocklyModalContainer {\r\n       border: 1px solid gray;\r\n       font-family: Helvetica;\r\n       padding: 1em;\r\n       width: 400px;\r\n       text-align : center;\r\n       display: flex;\r\n       flex-direction: column;\r\n       justify-content: center;\r\n       align-items: center;\r\n       box-shadow: 0px 10px 20px grey;\r\n       z-index: 100;\r\n       margin: 15% auto;\r\n     }\r\n     .blocklyModalHeader {\r\n       display: flex;\r\n       justify-content: space-between;\r\n       align-items: center;\r\n     }\r\n     .blocklyModalHeaderTitle {\r\n       margin-top: 0;\r\n       margin-bottom: 0;\r\n       font-size: 1.2em;\r\n       line-height: 1.25;\r\n     }\r\n     .blocklyModalHeader .blocklyModalBtn {\r\n       margin-left: auto;\r\n       height: fit-content;\r\n     }\r\n     .blocklyModalBtnClose:before {\r\n       content: \"\\\\2715\";\r\n     }\r\n     .blocklyModalBtn {\r\n       margin-right: .5em;\r\n       border: 1px solid gray;\r\n       font-weight: 500;\r\n       color: gray;\r\n       border-radius: 25px;\r\n     }\r\n     .blocklyModalBtnPrimary {\r\n       background-color: gray;\r\n       color: white;\r\n     }`,\r\n]);\r\n","export const BLOCKS_LANGUAGE_CONSTANTS = {\r\n  BLOCKS: {\r\n    ROTATION_BLOCK: {\r\n      ENGLISH: \"Rotation\",\r\n      RUSSIAN: \"вращение\",\r\n    },\r\n    START_BLOCK: {\r\n      ENGLISH: \"Start Program\",\r\n      RUSSIAN: \"запустить программу\",\r\n    },\r\n    DIRECTION_BLOCK: {\r\n      ENGLISH: \"MOVE\",\r\n      RUSSIAN: \"двигаться\",\r\n      DIRECTIONS_ENGLISH: {\r\n        FORWARD: \"FORWARD\",\r\n        BACKWARD: \"BACKWARD\",\r\n        LEFT: \"LEFT\",\r\n        RIGHT: \"RIGHT \",\r\n      },\r\n      DIRECTIONS_RUSSIAN: {\r\n        FORWARD: \"вперед\",\r\n        BACKWARD: \"назад\",\r\n        LEFT: \"левый\",\r\n        RIGHT: \"Правильно\",\r\n      },\r\n    },\r\n    GET_DISTANCE_BLOCK: {\r\n      EMGLISH: \"Get Distance\",\r\n      RUSSIAN: \"Получить расстояние\",\r\n    },\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.START_BLOCK.ENGLISH + \"  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet rotationBlock = {\r\n  type: \"rotation_block_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_angle\",\r\n      name: \"angle\",\r\n      angle: 90,\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"rotation_block_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance_en\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.GET_DISTANCE_BLOCK.EMGLISH,\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance_en\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.RUSSIAN + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.FORWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.BACKWARD, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.LEFT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.RIGHT, BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.START_BLOCK.RUSSIAN + \"  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet rotationBlock = {\r\n  type: \"rotation_block_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.ROTATION_BLOCK.RUSSIAN + \" %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_angle\",\r\n      name: \"angle\",\r\n      angle: 90,\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"rotation_block_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance_ru\",\r\n  message0: BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.GET_DISTANCE_BLOCK.RUSSIAN,\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance_ru\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { BLOCKS_LANGUAGE_CONSTANTS } from \"../../../utils/blockConstants\";\r\n\r\n// For English Block\r\nBlockly.JavaScript[\"direction_en\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"\\nawait SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"\\nawait SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"\\nawait SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"\\nawait SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n\r\n// For Russian Block\r\nBlockly.JavaScript[\"direction_ru\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"\\nawait SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"\\nawait SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"\\nawait SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === BLOCKS_LANGUAGE_CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"\\nawait SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\n// For english block\r\nBlockly.JavaScript[\"start_block_en\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n\r\n// For russian block\r\nBlockly.JavaScript[\"start_block_ru\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\n// For english block\r\nBlockly.JavaScript[\"rotation_block_en\"] = function (block) {\r\n  var angle_angle = block.getFieldValue(\"angle\");\r\n  var code = \"\\nawait SMARTY.rotateSmarty(\" + angle_angle + \");\\n\";\r\n  return code;\r\n};\r\n\r\n// For russian block\r\nBlockly.JavaScript[\"rotation_block_ru\"] = function (block) {\r\n  var angle_angle = block.getFieldValue(\"angle\");\r\n  var code = \"\\nawait SMARTY.rotateSmarty(\" + angle_angle + \");\\n\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\n// For English Block\r\nBlockly.JavaScript[\"getdistance_en\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n\r\n// For russian  Block\r\nBlockly.JavaScript[\"getdistance_ru\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Blockly from \"blockly/core\";\r\nimport en from \"blockly/msg/en\";\r\nimport ru from \"blockly/msg/ru\";\r\nimport \"blockly/blocks\";\r\nimport \"./BlocklyComponent.css\";\r\nimport { INITIAL_TOOLBOX_JSON_EN } from \"./toolbox/en/toolbox\";\r\nimport { INITIAL_TOOLBOX_JSON_RU } from \"./toolbox/ru/toolbox\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { WorkspaceSearch } from \"@blockly/plugin-workspace-search\";\r\nimport { Modal } from \"./blocklyModal\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n// importing blocks\r\nimport \"./blocks-en\";\r\nimport \"./blocks-ru\";\r\nimport \"./generators\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.blocklyDiv = React.createRef();\r\n    this.toolbox = React.createRef();\r\n    this.blocklyArea = this.props.blocklyArea;\r\n    this.modal = null;\r\n    this.currentLanguage = \"\";\r\n    this.bleState = BLE.BLE_DISCONNECTED;\r\n  }\r\n\r\n  setLanguage() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.setLocale(en);\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.setLocale(ru);\r\n    }\r\n  }\r\n\r\n  // setBlocksLang() {\r\n  //   if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n  //     Blockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.ENGLISH;\r\n  //     // Directions Block\r\n  //     Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\n  //     // Start Block\r\n  //     Blockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.ENGLISH;\r\n  //     //Rotation Block\r\n  //     Blockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH;\r\n  //   } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n  //     Blockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.RUSSIAN;\r\n  //     // Directions Block\r\n  //     Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.RUSSIAN;\r\n\r\n  //     // Start Block\r\n  //     Blockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.RUSSIAN;\r\n  //     //Rotation Block\r\n  //     Blockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.RUSSIAN;\r\n  //   }\r\n  // }\r\n\r\n  setCategoryLang() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.ENGLISH;\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.RUSSIAN;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.currentLanguage != this.props.language) {\r\n      if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_EN);\r\n      } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n        console.log(INITIAL_TOOLBOX_JSON_RU);\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_RU);\r\n      }\r\n      this.currentLanguage = this.props.language;\r\n    }\r\n\r\n    if (this.bleState != this.props.bleState) {\r\n      const { t } = this.props;\r\n      if (this.props.bleState === BLE.BLE_CONNECTED) {\r\n        this.modal = new Modal(t(\"SMARTY_CONNECTION_SUCESS\"), t(\"OK\"), this.primaryWorkspace);\r\n        this.modal.init();\r\n        this.modal.show();\r\n      } else {\r\n        this.modal = new Modal(t(\"SMARTY_CONNECTION_SUCESS\"), t(\"TRY_AGAIN\"), this.primaryWorkspace);\r\n        this.modal.init();\r\n        this.modal.show();\r\n      }\r\n      this.bleState = this.props.bleState;\r\n    }\r\n  }\r\n\r\n  onResize(blocklyArea) {\r\n    console.log(\"fucntion callled\");\r\n    let element = blocklyArea;\r\n    let x = 0;\r\n    let y = 0;\r\n    do {\r\n      x += element.offsetLeft;\r\n      y += element.offsetTop;\r\n      element = element.offsetParent;\r\n    } while (element);\r\n    // Position blocklyDiv over blocklyArea.\r\n    this.blocklyDiv.current.style.left = x + \"px\";\r\n    this.blocklyDiv.current.style.top = y + \"px\";\r\n    this.blocklyDiv.current.style.width = this.blocklyArea.offsetWidth + \"px\";\r\n    this.blocklyDiv.current.style.height = this.blocklyArea.offsetHeight + \"px\";\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setLanguage();\r\n    this.initBlockly();\r\n  }\r\n\r\n  initBlockly() {\r\n    const { initialXml, children, blocklyArea, ...rest } = this.props;\r\n    Blockly.Scrollbar.scrollbarThickness = 0;\r\n    Blockly.Scrollbar.DEFAULT_SCROLLBAR_MARGIN = 0;\r\n    Blockly.Toolbox.height = 30;\r\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\r\n      toolbox: INITIAL_TOOLBOX_JSON_EN,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n    }\r\n    window.addEventListener(\"resize\", this.onResize(blocklyArea), false);\r\n    this.onResize(blocklyArea);\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n    this.primaryWorkspace.addChangeListener(this.props.onChange);\r\n    this.setSearchFuncBlockly();\r\n  }\r\n\r\n  setSearchFuncBlockly() {\r\n    const workspaceSearch = new WorkspaceSearch(this.primaryWorkspace);\r\n    workspaceSearch.init();\r\n  }\r\n\r\n  get workspace() {\r\n    return this.primaryWorkspace;\r\n  }\r\n\r\n  setXml(xml) {\r\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"w-full bottom-0 md:pb-20 lg:pb-0 pb-20  top-0 absolute  h-screen lg:h-full md:h-screen\" ref={this.blocklyDiv} id=\"blocklyDiv\" />\r\n        <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: \"none\" }} ref={this.toolbox}>\r\n          {children}\r\n        </xml>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    language: state.language.language,\r\n    bleState: state.ble.status,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withTranslation()(BlocklyComponent));\r\n","import React from \"react\";\r\nimport BlocklyComponent from \"./BlocklyComponent\";\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow };\r\n","export default __webpack_public_path__ + \"static/media/blocks_logo.bce3b0f2.png\";","export default __webpack_public_path__ + \"static/media/bluetooth.6914d994.png\";","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLanguage } from \"../features/language/languageSlice\";\r\nimport { changeStatus, setDevice, setServer, setService, setchar } from \"../features/ble/bleSlice\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nimport BlocklsLogo from \"../assets/images/blocks_logo.png\";\r\nimport UploadLogo from \"../assets/images/upload.png\";\r\nimport BleLogo from \"../assets/images/bluetooth.png\";\r\nimport { BLE } from \"../utils/bleConstants\";\r\nimport Popup from \"./Popup\";\r\nimport i18next from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function NavBar() {\r\n  const [navState, setnavState] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const language = useSelector((state) => state.language.language);\r\n  const bleStatus = useSelector((state) => state.ble.status);\r\n  const { t } = useTranslation();\r\n\r\n  const onDisconnected = () => {\r\n    console.log(\"Device disconnected!!!\");\r\n    dispatch(changeStatus(BLE.BLE_DISCONNECTED));\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    const device = await BLE.getDevice();\r\n    device.addEventListener(\"gattserverdisconnected\", onDisconnected);\r\n    const server = await BLE.connectGattServer(device);\r\n    const service = await BLE.getServices(server);\r\n    const char = await BLE.getChar(service);\r\n\r\n    if (device != undefined) {\r\n      dispatch(setDevice(device));\r\n      dispatch(setServer(server));\r\n      dispatch(setService(service));\r\n      dispatch(setchar(char));\r\n      dispatch(changeStatus(BLE.BLE_CONNECTED));\r\n      BLE.writeBle(\"This is from chrome\", char);\r\n    } else {\r\n      requestPermission();\r\n    }\r\n  };\r\n\r\n  const onLanguageChange = (e) => {\r\n    dispatch(setLanguage(e.target.value));\r\n    i18next.changeLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-pink-600   w-full\">\r\n      <nav className=\"flex  justify-center gap-x-0 md:gap-x-16 lg:gap-x-16 md:justify-between lg:justify-between pl-5 pr-10 items-center\">\r\n        <div className=\"p-2 flex  items-center justify-start\">\r\n          <img src={BlocklsLogo} className=\"w-12 h-14 \" alt=\"\" />\r\n          <label className=\"text-2xl  text-white font-sans font-medium ml-2\">{t(\"APP_TITLE\")}</label>\r\n        </div>\r\n        <div className=\"flex justify-center items-center invisible md:visible lg:visible\">\r\n          <label className=\"text-xl  text-white font-sans mr-2 uppercase lg:visible md:invisible \">{t(\"LANGUAGE\")}</label>\r\n          <select value={language} onChange={onLanguageChange} className=\" bg-gradient-to-r from-yellow-400 to-red-500 p-2 text-2xl shadow-lg pl-10 pr-10  rounded-2xl\">\r\n            <option value={CONSTANTS.LANGUAGE.ENGLISH} className=\"p-2 bg-blue-500 font-sans\">\r\n              English\r\n            </option>\r\n            <option value={CONSTANTS.LANGUAGE.RUSSIAN} className=\"p-2 bg-blue-500 font-sans\">\r\n              Russian\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\" invisible md:visible lg:visible \">\r\n          <ul className=\"flex items-center justify-between \">\r\n            <li>\r\n              <button\r\n                onClick={requestPermission}\r\n                className={\r\n                  \" ml-3  flex justify-center items-center rounded-md shadow-lg text-white hover:text-black uppercase font-medium text-sm  p-1 md:p-1 lg:p-3 md:p0 lg:p3 md:text-sm lg:text-xl \" +\r\n                  (bleStatus === BLE.BLE_CONNECTED ? \"bg-green-500 hover:bg-green-500\" : \"bg-yellow-300 hover:bg-yellow-500\")\r\n                }\r\n              >\r\n                <img src={BleLogo} className=\"w-8 h-8 mr-2\"></img>\r\n                {bleStatus === BLE.BLE_CONNECTED ? t(\"SUCESS\") : t(\"CONNECT_BLE\")}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fingerPaint.6f84c47d.ttf\";","import fingerPaint from \"../assets/fonts/fingerPaint.ttf\";\r\nexport const BLOCKLY_THEME = {\r\n  THEME: {\r\n    fontStyle: {\r\n      weight: \"bold\",\r\n      size: 12,\r\n    },\r\n    blockStyles: {\r\n      colour_blocks: {\r\n        colourPrimary: \"20\",\r\n      },\r\n      list_blocks: {\r\n        colourPrimary: \"260\",\r\n      },\r\n      logic_blocks: {\r\n        colourPrimary: \"210\",\r\n      },\r\n      loop_blocks: {\r\n        colourPrimary: \"120\",\r\n      },\r\n      math_blocks: {\r\n        colourPrimary: \"230\",\r\n      },\r\n      procedure_blocks: {\r\n        colourPrimary: \"290\",\r\n      },\r\n      text_blocks: {\r\n        colourPrimary: \"160\",\r\n      },\r\n      variable_blocks: {\r\n        colourPrimary: \"330\",\r\n      },\r\n      variable_dynamic_blocks: {\r\n        colourPrimary: \"310\",\r\n      },\r\n      hat_blocks: {\r\n        colourPrimary: \"330\",\r\n        hat: \"cap\",\r\n      },\r\n    },\r\n    categoryStyles: {},\r\n    componentStyles: {\r\n      workspaceBackgroundColour: \"#ECF0F1\",\r\n      toolboxBackgroundColour: \"#DB2777\",\r\n      flyoutBackgroundColour: \"#FFFFFF\",\r\n      flyoutOpacity: \"0.5\",\r\n      scrollbarColour: \"#FFFFFF\",\r\n      scrollbarOpacity: \"0.1\",\r\n      //   toolboxForegroundColour: \"#ffffff\",\r\n    },\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/play.74559e61.png\";","export default __webpack_public_path__ + \"static/media/pause.7d4f3660.png\";","export default __webpack_public_path__ + \"static/media/expand.75c14712.png\";","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BlocklyComponent from \"./modules/Blockly\";\r\nimport BlocklyJS from \"blockly/javascript\";\r\nimport { connect } from \"react-redux\";\r\nimport { BLE } from \"./utils/bleConstants\";\r\n//importing blocks\r\nimport \"./modules/Blockly/blocks-en\";\r\n//importing generators\r\nimport \"./modules/Blockly/generators\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { BLOCKLY_THEME } from \"./utils/blocklyTheme\";\r\nimport { RUNCODE } from \"./utils/smartyConstants\";\r\nimport Bot from \"./assets/images/bot.png\";\r\nimport PlayIcon from \"./assets/images/play.png\";\r\nimport PauseIcon from \"./assets/images/pause.png\";\r\nimport ExpandIcon from \"./assets/images/expand.png\";\r\nimport Editor, { DiffEditor, useMonaco, loader, Monaco } from \"@monaco-editor/react\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n    this.blocklyArea = React.createRef();\r\n    this.myButton = React.createRef();\r\n    this.code = \"\";\r\n    this.initInterpreter = null;\r\n    this.state = {\r\n      code: this.code,\r\n      expanded: false,\r\n    };\r\n  }\r\n  generateCode = () => {\r\n    this.code = BlocklyJS.workspaceToCode(this.simpleWorkspace.current);\r\n    console.log(this.code);\r\n    this.setState({\r\n      code: this.code,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.generateCode();\r\n  }\r\n\r\n  getBlocklyArea() {\r\n    return this.blocklyArea;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen w-screen overflow-hidden \">\r\n        <div>\r\n          <NavBar></NavBar>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-2 w-full h-full\">\r\n          <div style={{ height: \"90%\" }} className={\"relative col-span-3 md:col-span-3 bg-red-500 w-full \" + (this.state.expanded ? \"lg:col-span-1\" : \"lg:col-span-2\")}>\r\n            <div ref={this.blocklyArea}>\r\n              <BlocklyComponent\r\n                ref={this.simpleWorkspace}\r\n                readOnly={false}\r\n                blocklyArea={this.getBlocklyArea}\r\n                trashcan={true}\r\n                toolboxPosition=\"start\"\r\n                media={process.env.PUBLIC_URL + \"media/\"}\r\n                theme={BLOCKLY_THEME.THEME}\r\n                move={{\r\n                  scrollbars: true,\r\n                  drag: true,\r\n                  wheel: true,\r\n                }}\r\n                grid={{ spacing: 50, length: 5, colour: \"gray\", snap: true }}\r\n                zoom={{ controls: true, wheel: true, startScale: 1.0, maxScale: 3, minScale: 0.3, scaleSpeed: 1.2, pinch: true }}\r\n                onChange={this.generateCode}\r\n                initialXml={`\r\n                <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <block type=\"start_block_en\" x=\"200\" y= \"200\"></block>\r\n                </xml>\r\n          `}\r\n              ></BlocklyComponent>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={\"flex flex-col p-5 justify-between items-center bg-blue-300 md:invisible lg:visible invisible \" + (this.state.expanded ? \"col-span-2\" : \"\")}>\r\n            {/* This is the generate btn */}\r\n\r\n            <div className=\"flex  justify-center  items-center  w-full h-full p-5 \">\r\n              <div className=\"w-full h-full bg-yellow-500 border-4 border-white  shadow-2xl rounded-t-2xl p-5\">\r\n                <div className=\"flex justify-center md:justify-end -mt-16 \">\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({ expanded: !this.state.expanded });\r\n                    }}\r\n                    className=\"w-14 h-18 p-1 object-top  rounded bg-purple-300 cursor-pointer \"\r\n                    src={ExpandIcon}\r\n                  ></img>\r\n                </div>\r\n                <Editor theme=\"light\" defaultLanguage=\"javascript\" value={this.code} defaultValue={this.code} height=\"100%\" />\r\n              </div>\r\n            </div>\r\n            {/* This is the card */}\r\n            <div className=\"flex flex-col  justify-center w-full p-5 mb-16 items-start\">\r\n              <div className=\"w-full py-4 px-8 bg-pink-600  shadow-lg rounded-lg \">\r\n                <div className=\"flex justify-center md:justify-end -mt-16\">\r\n                  <img className=\"w-18 h-20 object-top  rounded   border-yellow-500 \" src={Bot}></img>\r\n                </div>\r\n                <div>\r\n                  {/* This is the buttons */}\r\n                  <div className=\"flex justify-around items-center \">\r\n                    <button\r\n                      onClick={() => {\r\n                        RUNCODE(this.state.code);\r\n                      }}\r\n                      className=\"p-5 flex flex-col text-white justify-center items-center text-2xl bg-blue-500 rounded-3xl\r\n                    shadow-3xl\"\r\n                    >\r\n                      <img className=\"w-16 h-16 \" src={PlayIcon}></img>\r\n                    </button>\r\n                    <button className=\"flex text-white flex-col justify-center items-center p-5 text-2xl  bg-blue-500 rounded-3xl shadow-3xl\">\r\n                      <img className=\"w-16 h-16 \" src={PauseIcon}></img>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    bleChar: state.ble.char,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\n// needed for translations\nimport i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport HttpApi from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { CONSTANTS } from \"./utils/constants\";\nimport { client } from \"./mqtt\";\ni18next\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    supportedLngs: [\"en\", \"ru\"],\n    fallbackLng: \"en\",\n    debug: false,\n    // Options for language detector\n    detection: {\n      order: [\"path\", \"cookie\", \"htmlTag\"],\n      // caches: [\"cookie\"],\n    },\n    react: { useSuspense: false },\n    backend: {\n      loadPath: \"/assets/locales/{{lng}}/translation.json\",\n    },\n  });\n\ni18next.changeLanguage(CONSTANTS.LANGUAGE.ENGLISH);\n\nReactDOM.render(\n  // <Suspense fallback={loadingMarkup}>\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // </Suspense>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}