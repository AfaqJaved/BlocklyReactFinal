{"version":3,"sources":["utils/bleConstants.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","modules/Blockly/toolbox/en/toolbox.js","modules/Blockly/toolbox/ru/toolbox.js","modules/Blockly/BlocklyComponent.jsx","modules/Blockly/index.js","modules/Blockly/blocks/myBlock.js","modules/Blockly/blocks/directionBlock.js","modules/Blockly/blocks/startBlock.js","modules/Blockly/blocks/rotationBlock.js","modules/Blockly/blocks/getDistanceBlock.js","modules/Blockly/generators/myBlockGenerator.js","modules/Blockly/generators/directionBlockGenerator.js","modules/Blockly/generators/startBlockGenerator.js","modules/Blockly/generators/rotationBlockGenerator.js","modules/Blockly/generators/getDistanceGenerator.js","assets/images/blocks_logo.png","assets/images/bluetooth.png","components/NavBar.jsx","assets/fonts/fingerPaint.ttf","utils/blocklyTheme.js","assets/images/bot.png","assets/images/play.png","assets/images/pause.png","assets/images/expand.png","App.js","mqtt/index.js","index.js","features/ble/bleSlice.js","utils/constants.js","features/language/languageSlice.js","utils/blocklyCategories.js","utils/smartyConstants.js"],"names":["BLE","BLE_DEVICE_NAME","BLE_SERVICE_NAME","BLE_CHAR_UUID","BLE_DISCONNECTED","BLE_CONNECTED","getDevice","navigator","bluetooth","requestDevice","filters","name","optionalServices","connectGattServer","device","gatt","connect","getServices","server","getPrimaryService","getChar","service","getCharacteristic","writeBle","data","char","writeValue","getTextEncoder","encode","TextEncoder","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","customizedMiddleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","counter","counterReducer","language","languageReducer","ble","bleReducer","middleware","INITIAL_TOOLBOX_JSON_EN","kind","contents","BLOCKLY_CATEGORIES_CONSTANTS","EN_SMARTY","cssConfig","container","row","label","icon","type","EN_LOGIC","blockxml","EN_LOOPS","EN_MATH","EN_TEXT","EN_LISTS","EN_COLOUR","EN_FUNCTIONS","custom","INITIAL_TOOLBOX_JSON_RU","RU_SMARTY","RU_LOGIC","RU_LOOPS","RU_MATH","RU_TEXT","RU_LISTS","RU_COLOUR","RU_FUNCTIONS","BlocklyComponent","props","blocklyDiv","React","createRef","toolbox","blocklyArea","modal","currentLanguage","this","CONSTANTS","LANGUAGE","ENGLISH","Blockly","setLocale","en","RUSSIAN","ru","Msg","MYBLOCK","BLOCKS","DIRECTION_BLOCK","DIRECTION_BLOCK_FORWARD","DIRECTIONS_ENGLISH","FORWARD","DIRECTION_BLOCK_BACKWARD","BACKWARD","DIRECTION_BLOCK_LEFT","LEFT","DIRECTION_BLOCK_RIGHT","RIGHT","START_BLOCK","ROTATION_BLOCK","DIRECTIONS_RUSSIAN","LOGIC_CATEGORY_NAME","CATERGORIES","LOGIC_CATEGORY","setLanguage","setBlocksLang","primaryWorkspace","updateToolbox","console","log","element","x","y","offsetLeft","offsetTop","offsetParent","current","style","left","top","width","offsetWidth","height","offsetHeight","svgResize","initBlockly","initialXml","children","rest","Scrollbar","scrollbarThickness","DEFAULT_SCROLLBAR_MARGIN","Toolbox","inject","Xml","domToWorkspace","textToDom","window","addEventListener","onResize","addChangeListener","onChange","setSearchFuncBlockly","WorkspaceSearch","init","xml","Fragment","className","ref","id","xmlns","is","display","Component","bleState","myBlock","message0","previousStatement","nextStatement","colour","tooltip","helpUrl","jsonInit","directionBlock","args0","options","startBlock","align","rotationBlock","getDistanceBlock","output","block","dropdown_direction","getFieldValue","statementToCode","ORDER_NONE","NavBar","useState","dispatch","useDispatch","useSelector","bleStatus","t","useTranslation","onDisconnected","changeStatus","requestPermission","undefined","setDevice","setServer","setService","setchar","src","BlocklsLogo","alt","e","target","i18next","changeLanguage","onClick","BleLogo","BLOCKLY_THEME","THEME","fontStyle","weight","size","blockStyles","colour_blocks","colourPrimary","list_blocks","logic_blocks","loop_blocks","math_blocks","procedure_blocks","text_blocks","variable_blocks","variable_dynamic_blocks","hat_blocks","hat","categoryStyles","componentStyles","workspaceBackgroundColour","toolboxBackgroundColour","flyoutBackgroundColour","flyoutOpacity","scrollbarColour","scrollbarOpacity","App","generateCode","code","BlocklyJS","workspaceToCode","simpleWorkspace","setState","myButton","initInterpreter","expanded","readOnly","getBlocklyArea","trashcan","toolboxPosition","media","theme","move","scrollbars","drag","wheel","grid","spacing","length","snap","zoom","controls","startScale","maxScale","minScale","scaleSpeed","pinch","ExpandIcon","defaultLanguage","defaultValue","Bot","RUNCODE","PlayIcon","PauseIcon","bleChar","client","mqtt","on","subscribe","err","topic","message","toString","use","HttpApi","LanguageDetector","initReactI18next","supportedLngs","fallbackLng","debug","detection","order","react","useSuspense","backend","loadPath","ReactDOM","render","StrictMode","document","getElementById","bleSlice","SMARTY_CATEGORY","SMARTY","LOGIC","LOOPS_CATEGORY","LOOPS","MATH_CATEGORY","MATH","TEXT_CATEGORY","TEXT","LISTS_CATEGORY","LISTS","COLOUR_CATEGORY","COLOUR","FUCNTIONS_CATEGORY","FUNCTIONS","languageSlice","moveForward","getState","moveBackward","moveLeft","moveRight","rotateSmarty","angle","getDistance","readValue","TextDecoder","decode","moveForwardSteps","num","DIRECTION_STEPS_BLOCK","DIRECTIONS_STEPS_ENGLISH","moveBackwardSteps","moveLeftSteps","moveRightSteps","eval"],"mappings":"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","file":"static/js/main.5aff9a52.chunk.js","sourcesContent":["export const BLE = {\r\n  BLE_DEVICE_NAME: \"Long name works now\",\r\n  BLE_SERVICE_NAME: \"4fafc201-1fb5-459e-8fcc-c5c9c331914b\",\r\n  BLE_CHAR_UUID: \"beb5483e-36e1-4688-b7f5-ea07361b26a8\",\r\n  BLE_DISCONNECTED: \"disconnected\",\r\n  BLE_CONNECTED: \"Connected\",\r\n  getDevice() {\r\n    return navigator.bluetooth.requestDevice({ filters: [{ name: BLE.BLE_DEVICE_NAME }], optionalServices: [BLE.BLE_SERVICE_NAME] });\r\n  },\r\n  connectGattServer(device) {\r\n    return device.gatt.connect();\r\n  },\r\n  getServices(server) {\r\n    return server.getPrimaryService(BLE.BLE_SERVICE_NAME);\r\n  },\r\n  getChar(service) {\r\n    return service.getCharacteristic(BLE.BLE_CHAR_UUID);\r\n  },\r\n  writeBle(data, char) {\r\n    char.writeValue(BLE.getTextEncoder().encode(data));\r\n  },\r\n  getTextEncoder() {\r\n    return new TextEncoder();\r\n  },\r\n};\r\n","// A mock function to mimic making an async request for data\r\nexport function fetchCount(amount = 1) {\r\n  return new Promise((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'counter/fetchCount',\r\n  async (amount) => {\r\n    const response = await fetchCount(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport languageReducer from \"../features/language/languageSlice\";\r\nimport bleReducer from \"../features/ble/bleSlice\";\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nconst customizedMiddleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n});\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    language: languageReducer,\r\n    ble: bleReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => customizedMiddleware,\r\n});\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_EN = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-4  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" font-sas text-lg text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          type: \"getdistance\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.EN_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas text-lg text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import \"../toolbox.css\";\r\nimport { BLOCKLY_CATEGORIES_CONSTANTS } from \"../../../../utils/blocklyCategories\";\r\n\r\nexport const INITIAL_TOOLBOX_JSON_RU = {\r\n  kind: \"categoryToolbox\",\r\n  contents: [\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_SMARTY,\r\n      cssConfig: {\r\n        container: \"p-2  flex flex-col text-center text-white\",\r\n        row: \"smartyIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas   text-white\",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"direction\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"start_block\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"rotation_block\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOGIC,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" logicIcon rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          type: \"controls_if\",\r\n        },\r\n\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_compare\"><field name=\"OP\">EQ</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_operation\"><field name=\"OP\">AND</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_negate\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '<block type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></block>',\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_null\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"logic_ternary\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LOOPS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"loopsIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \"mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '<block type=\"controls_repeat_ext\">\\n' +\r\n            '      <value name=\"TIMES\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"controls_for\">\\n' +\r\n            '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BY\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_MATH,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" mathIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_round\">\\n' +\r\n            '      <field name=\"OP\">ROUND</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">3.1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_single\">\\n' +\r\n            '      <field name=\"OP\">ROOT</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">9</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_trig\">\\n' +\r\n            '      <field name=\"OP\">SIN</field>\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">45</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_number_property\">\\n' +\r\n            '      <mutation divisor_input=\"false\"></mutation>\\n' +\r\n            '      <field name=\"PROPERTY\">EVEN</field>\\n' +\r\n            '      <value name=\"NUMBER_TO_CHECK\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_arithmetic\">\\n' +\r\n            '      <field name=\"OP\">ADD</field>\\n' +\r\n            '      <value name=\"A\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"B\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_modulo\">\\n' +\r\n            '      <value name=\"DIVIDEND\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">64</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"DIVISOR\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">10</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_constrain\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"LOW\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"HIGH\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"math_random_int\">\\n' +\r\n            '      <value name=\"FROM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">1</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"TO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"math_random_float\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_TEXT,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" textIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_charAt\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_append\">\\n' +\r\n            '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_length\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_isEmpty\">\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\"></field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"FIND\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_getSubstring\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"STRING\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_changeCase\">\\n' +\r\n            '      <field name=\"CASE\">UPPERCASE</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_trim\">\\n' +\r\n            '      <field name=\"MODE\">BOTH</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_print\">\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"text_prompt_ext\">\\n' +\r\n            '      <mutation type=\"TEXT\"></mutation>\\n' +\r\n            '      <field name=\"TYPE\">TEXT</field>\\n' +\r\n            '      <value name=\"TEXT\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">abc</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_LISTS,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"listIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_indexOf\">\\n' +\r\n            '      <field name=\"END\">FIRST</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_repeat\">\\n' +\r\n            '      <value name=\"NUM\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_length\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"lists_isEmpty\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getIndex\">\\n' +\r\n            '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">GET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"VALUE\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_setIndex\">\\n' +\r\n            '      <mutation at=\"true\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SET</field>\\n' +\r\n            '      <field name=\"WHERE\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_getSublist\">\\n' +\r\n            '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' +\r\n            '      <field name=\"WHERE1\">FROM_START</field>\\n' +\r\n            '      <field name=\"WHERE2\">FROM_START</field>\\n' +\r\n            '      <value name=\"LIST\">\\n' +\r\n            '        <block type=\"variables_get\">\\n' +\r\n            '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' +\r\n            \"        </block>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"lists_split\">\\n' +\r\n            '      <mutation mode=\"SPLIT\"></mutation>\\n' +\r\n            '      <field name=\"MODE\">SPLIT</field>\\n' +\r\n            '      <value name=\"DELIM\">\\n' +\r\n            '        <shadow type=\"text\">\\n' +\r\n            '          <field name=\"TEXT\">,</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_COLOUR,\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \" colorIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n      contents: [\r\n        {\r\n          kind: \"block\",\r\n          blockxml: '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          type: \"colour_random\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_rgb\">\\n' +\r\n            '      <value name=\"RED\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">100</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"GREEN\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">50</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"BLUE\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n        {\r\n          kind: \"block\",\r\n          blockxml:\r\n            '    <block type=\"colour_blend\">\\n' +\r\n            '      <value name=\"COLOUR1\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#ff0000</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"COLOUR2\">\\n' +\r\n            '        <shadow type=\"colour_picker\">\\n' +\r\n            '          <field name=\"COLOUR\">#3333ff</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            '      <value name=\"RATIO\">\\n' +\r\n            '        <shadow type=\"math_number\">\\n' +\r\n            '          <field name=\"NUM\">0.5</field>\\n' +\r\n            \"        </shadow>\\n\" +\r\n            \"      </value>\\n\" +\r\n            \"    </block>\\n\",\r\n        },\r\n      ],\r\n    },\r\n    // { kind: \"sep\" },\r\n    {\r\n      kind: \"category\",\r\n      name: BLOCKLY_CATEGORIES_CONSTANTS.RU_FUNCTIONS,\r\n      custom: \"PROCEDURE\",\r\n      cssConfig: {\r\n        container: \"p-4 flex flex-col text-center text-white\",\r\n        row: \"functionIcon smarty rounded-xl text-white  shadow-lg font-sans\",\r\n        label: \" mt-5 ml-2 mr-2 font-sas  text-white \",\r\n        icon: \"customicon w-20 h-16\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Blockly from \"blockly/core\";\r\nimport en from \"blockly/msg/en\";\r\nimport ru from \"blockly/msg/ru\";\r\nimport \"blockly/blocks\";\r\nimport \"./BlocklyComponent.css\";\r\nimport { INITIAL_TOOLBOX_JSON_EN } from \"./toolbox/en/toolbox\";\r\nimport { INITIAL_TOOLBOX_JSON_RU } from \"./toolbox/ru/toolbox\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nimport { WorkspaceSearch } from \"@blockly/plugin-workspace-search\";\r\n\r\nclass BlocklyComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.blocklyDiv = React.createRef();\r\n    this.toolbox = React.createRef();\r\n    this.blocklyArea = this.props.blocklyArea;\r\n    this.modal = null;\r\n    this.currentLanguage = \"\";\r\n  }\r\n\r\n  setLanguage() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.setLocale(en);\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.setLocale(ru);\r\n    }\r\n  }\r\n\r\n  setBlocksLang() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.ENGLISH;\r\n      // Directions Block\r\n      Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\n      Blockly.Msg.DIRECTION_BLOCK_FORWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_BACKWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_LEFT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT;\r\n      Blockly.Msg.DIRECTION_BLOCK_RIGHT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT;\r\n\r\n      // Start Block\r\n      Blockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.ENGLISH;\r\n      //Rotation Block\r\n      Blockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH;\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.RUSSIAN;\r\n      // Directions Block\r\n      Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.RUSSIAN;\r\n      Blockly.Msg.DIRECTION_BLOCK_FORWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.FORWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_BACKWARD = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.BACKWARD;\r\n      Blockly.Msg.DIRECTION_BLOCK_LEFT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.LEFT;\r\n      Blockly.Msg.DIRECTION_BLOCK_RIGHT = CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_RUSSIAN.RIGHT;\r\n\r\n      // Start Block\r\n      Blockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.RUSSIAN;\r\n      //Rotation Block\r\n      Blockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.RUSSIAN;\r\n    }\r\n  }\r\n\r\n  setCategoryLang() {\r\n    if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.ENGLISH;\r\n    } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n      Blockly.Msg.LOGIC_CATEGORY_NAME = CONSTANTS.CATERGORIES.LOGIC_CATEGORY.RUSSIAN;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setLanguage();\r\n    this.setBlocksLang();\r\n    if (this.currentLanguage != this.props.language) {\r\n      if (this.props.language === CONSTANTS.LANGUAGE.ENGLISH) {\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_EN);\r\n      } else if (this.props.language === CONSTANTS.LANGUAGE.RUSSIAN) {\r\n        console.log(INITIAL_TOOLBOX_JSON_RU);\r\n        this.primaryWorkspace.updateToolbox(INITIAL_TOOLBOX_JSON_RU);\r\n      }\r\n      this.currentLanguage = this.props.language;\r\n    }\r\n  }\r\n\r\n  onResize(blocklyArea) {\r\n    console.log(\"fucntion callled\");\r\n    let element = blocklyArea;\r\n    let x = 0;\r\n    let y = 0;\r\n    do {\r\n      x += element.offsetLeft;\r\n      y += element.offsetTop;\r\n      element = element.offsetParent;\r\n    } while (element);\r\n    // Position blocklyDiv over blocklyArea.\r\n    this.blocklyDiv.current.style.left = x + \"px\";\r\n    this.blocklyDiv.current.style.top = y + \"px\";\r\n    this.blocklyDiv.current.style.width = this.blocklyArea.offsetWidth + \"px\";\r\n    this.blocklyDiv.current.style.height = this.blocklyArea.offsetHeight + \"px\";\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setLanguage();\r\n    this.initBlockly();\r\n  }\r\n\r\n  initBlockly() {\r\n    const { initialXml, children, blocklyArea, ...rest } = this.props;\r\n    Blockly.Scrollbar.scrollbarThickness = 0;\r\n    Blockly.Scrollbar.DEFAULT_SCROLLBAR_MARGIN = 0;\r\n    Blockly.Toolbox.height = 30;\r\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\r\n      toolbox: INITIAL_TOOLBOX_JSON_EN,\r\n      ...rest,\r\n    });\r\n\r\n    if (initialXml) {\r\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\r\n    }\r\n    window.addEventListener(\"resize\", this.onResize(blocklyArea), false);\r\n    this.onResize(blocklyArea);\r\n    Blockly.svgResize(this.primaryWorkspace);\r\n    this.primaryWorkspace.addChangeListener(this.props.onChange);\r\n    this.setSearchFuncBlockly();\r\n  }\r\n\r\n  setSearchFuncBlockly() {\r\n    const workspaceSearch = new WorkspaceSearch(this.primaryWorkspace);\r\n    workspaceSearch.init();\r\n  }\r\n\r\n  get workspace() {\r\n    return this.primaryWorkspace;\r\n  }\r\n\r\n  setXml(xml) {\r\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"w-full bottom-0 md:pb-20 lg:pb-0 pb-20  top-0 absolute  h-screen lg:h-full md:h-screen\" ref={this.blocklyDiv} id=\"blocklyDiv\" />\r\n        <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: \"none\" }} ref={this.toolbox}>\r\n          {children}\r\n        </xml>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    language: state.language.language,\r\n    bleState: state.ble.status,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BlocklyComponent);\r\n","import React from \"react\";\r\nimport BlocklyComponent from \"./BlocklyComponent\";\r\n\r\nexport default BlocklyComponent;\r\n\r\nconst Block = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"block\", props, children);\r\n};\r\n\r\nconst Category = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"category\", props, children);\r\n};\r\n\r\nconst Value = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"value\", props, children);\r\n};\r\n\r\nconst Field = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"field\", props, children);\r\n};\r\n\r\nconst Shadow = (p) => {\r\n  const { children, ...props } = p;\r\n  props.is = \"blockly\";\r\n  return React.createElement(\"shadow\", props, children);\r\n};\r\n\r\nexport { Block, Category, Value, Field, Shadow };\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet myBlock = {\r\n  type: \"afaq_custom_block\",\r\n  message0: \"%{BKY_MYBLOCK}\",\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 315,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"afaq_custom_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(myBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.MYBLOCK = CONSTANTS.BLOCKS.MYBLOCK.ENGLISH;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet directionBlock = {\r\n  type: \"direction\",\r\n  message0: \"%{BKY_DIRECTION_BLOCK} %1\",\r\n  args0: [\r\n    {\r\n      type: \"field_dropdown\",\r\n      name: \"direction\",\r\n      options: [\r\n        //1st show 2nd value\r\n        [CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD, CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD],\r\n        [CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD, CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD],\r\n        [CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT, CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT],\r\n        [CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT, CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT],\r\n      ],\r\n    },\r\n  ],\r\n  previousStatement: null,\r\n  nextStatement: null,\r\n  colour: 270,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"direction\"] = {\r\n  init: function () {\r\n    this.jsonInit(directionBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet startBlock = {\r\n  type: \"start_block\",\r\n  message0: \"%{BKY_START_BLOCK}  %1 %2\",\r\n  args0: [\r\n    {\r\n      type: \"input_dummy\",\r\n      align: \"CENTRE\",\r\n    },\r\n    {\r\n      type: \"input_statement\",\r\n      name: \"NAME\",\r\n    },\r\n  ],\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"start_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(startBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.START_BLOCK = CONSTANTS.BLOCKS.START_BLOCK.ENGLISH;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet rotationBlock ={\r\n    \"type\": \"rotation_block\",\r\n    \"message0\": \"%{BKY_ROTATION_BLOCK} %1\",\r\n    \"args0\": [\r\n      {\r\n        \"type\": \"field_angle\",\r\n        \"name\": \"angle\",\r\n        \"angle\": 90\r\n      }\r\n    ],\r\n    \"previousStatement\": null,\r\n    \"nextStatement\": null,\r\n    \"colour\": 230,\r\n    \"tooltip\": \"\",\r\n    \"helpUrl\": \"\"\r\n  }\r\n\r\nBlockly.Blocks[\"rotation_block\"] = {\r\n  init: function () {\r\n    this.jsonInit(rotationBlock);\r\n  },\r\n};\r\n\r\nBlockly.Msg.ROTATION_BLOCK = CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH;\r\n// Blockly.Msg.MYBLOCK = \"Показать оповещение\";\r\n","import * as Blockly from \"blockly/core\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nlet getDistanceBlock = {\r\n  type: \"getdistance\",\r\n  message0: \"getDistance\",\r\n  output: \"Number\",\r\n  colour: 230,\r\n  tooltip: \"\",\r\n  helpUrl: \"\",\r\n};\r\n\r\nBlockly.Blocks[\"getdistance\"] = {\r\n  init: function () {\r\n    this.jsonInit(getDistanceBlock);\r\n  },\r\n};\r\n\r\n// Blockly.Msg.DIRECTION_BLOCK = CONSTANTS.BLOCKS.DIRECTION_BLOCK.ENGLISH;\r\n","import * as Blockly from \"blockly\";\r\n\r\nBlockly.JavaScript[\"afaq_custom_block\"] = function (block) {\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"alert('This is for test');\\n\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\nimport { CONSTANTS } from \"../../../utils/constants\";\r\n\r\nBlockly.JavaScript[\"direction\"] = function (block) {\r\n  var dropdown_direction = block.getFieldValue(\"direction\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.FORWARD) {\r\n    return \"await SMARTY.moveForward();\\n\";\r\n  } else if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD) {\r\n    return \"await SMARTY.moveBackward();\\n\";\r\n  } else if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT) {\r\n    return \"await SMARTY.moveLeft();\\n\";\r\n  } else if (dropdown_direction === CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT) {\r\n    return \"await SMARTY.moveRight();\\n\";\r\n  }\r\n  return \"\";\r\n};\r\n","import * as Blockly from \"blockly\";\r\n\r\nBlockly.JavaScript[\"start_block\"] = function (block) {\r\n  var statements_name = Blockly.JavaScript.statementToCode(block, \"NAME\");\r\n  // TODO: Assemble JavaScript into code variable.\r\n  var code = \"async function StartProgram(){\" + statements_name + \"};\\n\\n\\n\\n\\n StartProgram();\";\r\n  return code;\r\n};\r\n","import * as Blockly from \"blockly\";\r\nBlockly.JavaScript['rotation_block'] = function(block) {\r\n    var angle_angle = block.getFieldValue('angle');\r\n    var code = '\\nawait SMARTY.rotateSmarty('+angle_angle+');\\n';\r\n    return code;\r\n  };","import * as Blockly from \"blockly\";\r\nBlockly.JavaScript[\"getdistance\"] = function (block) {\r\n  var code = \"await SMARTY.getDistance()\";\r\n  return [code, Blockly.JavaScript.ORDER_NONE];\r\n};\r\n","export default __webpack_public_path__ + \"static/media/blocks_logo.bce3b0f2.png\";","export default __webpack_public_path__ + \"static/media/bluetooth.6914d994.png\";","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLanguage } from \"../features/language/languageSlice\";\r\nimport { changeStatus, setDevice, setServer, setService, setchar } from \"../features/ble/bleSlice\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nimport BlocklsLogo from \"../assets/images/blocks_logo.png\";\r\nimport UploadLogo from \"../assets/images/upload.png\";\r\nimport BleLogo from \"../assets/images/bluetooth.png\";\r\nimport { BLE } from \"../utils/bleConstants\";\r\nimport Popup from \"./Popup\";\r\nimport i18next from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function NavBar() {\r\n  const [navState, setnavState] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const language = useSelector((state) => state.language.language);\r\n  const bleStatus = useSelector((state) => state.ble.status);\r\n  const { t } = useTranslation();\r\n\r\n  const onDisconnected = () => {\r\n    console.log(\"Device disconnected!!!\");\r\n    dispatch(changeStatus(BLE.BLE_DISCONNECTED));\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    const device = await BLE.getDevice();\r\n    device.addEventListener(\"gattserverdisconnected\", onDisconnected);\r\n    const server = await BLE.connectGattServer(device);\r\n    const service = await BLE.getServices(server);\r\n    const char = await BLE.getChar(service);\r\n\r\n    if (device != undefined) {\r\n      dispatch(setDevice(device));\r\n      dispatch(setServer(server));\r\n      dispatch(setService(service));\r\n      dispatch(setchar(char));\r\n      dispatch(changeStatus(BLE.BLE_CONNECTED));\r\n      BLE.writeBle(\"This is from chrome\", char);\r\n    } else {\r\n      requestPermission();\r\n    }\r\n  };\r\n\r\n  const onLanguageChange = (e) => {\r\n    dispatch(setLanguage(e.target.value));\r\n    i18next.changeLanguage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-pink-600   w-full\">\r\n      <nav className=\"flex  justify-center gap-x-0 md:gap-x-16 lg:gap-x-16 md:justify-between lg:justify-between pl-5 pr-10 items-center\">\r\n        <div className=\"p-2 flex  items-center justify-start\">\r\n          <img src={BlocklsLogo} className=\"w-12 h-14 \" alt=\"\" />\r\n          <label className=\"text-2xl  text-white font-sans font-medium ml-2\">{t(\"APP_TITLE\")}</label>\r\n        </div>\r\n        <div className=\"flex justify-center items-center invisible md:visible lg:visible\">\r\n          <label className=\"text-xl  text-white font-sans mr-2 uppercase lg:visible md:invisible \">{t(\"LANGUAGE\")}</label>\r\n          <select value={language} onChange={onLanguageChange} className=\" bg-gradient-to-r from-yellow-400 to-red-500 p-2 text-2xl shadow-lg pl-10 pr-10  rounded-2xl\">\r\n            <option value={CONSTANTS.LANGUAGE.ENGLISH} className=\"p-2 bg-blue-500 font-sans\">\r\n              English\r\n            </option>\r\n            <option value={CONSTANTS.LANGUAGE.RUSSIAN} className=\"p-2 bg-blue-500 font-sans\">\r\n              Russian\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\" invisible md:visible lg:visible \">\r\n          <ul className=\"flex items-center justify-between \">\r\n            <li>\r\n              <button\r\n                onClick={requestPermission}\r\n                className={\r\n                  \" ml-3  flex justify-center items-center rounded-md shadow-lg text-white hover:text-black uppercase font-medium text-sm  p-1 md:p-1 lg:p-3 md:p0 lg:p3 md:text-sm lg:text-xl \" +\r\n                  (bleStatus === BLE.BLE_CONNECTED ? \"bg-green-500 hover:bg-green-500\" : \"bg-yellow-300 hover:bg-yellow-500\")\r\n                }\r\n              >\r\n                <img src={BleLogo} className=\"w-8 h-8 mr-2\"></img>\r\n                {bleStatus === BLE.BLE_CONNECTED ? t(\"SUCESS\") : t(\"CONNECT_BLE\")}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fingerPaint.6f84c47d.ttf\";","import fingerPaint from \"../assets/fonts/fingerPaint.ttf\";\r\nexport const BLOCKLY_THEME = {\r\n  THEME: {\r\n    fontStyle: {\r\n      weight: \"bold\",\r\n      size: 12,\r\n    },\r\n    blockStyles: {\r\n      colour_blocks: {\r\n        colourPrimary: \"20\",\r\n      },\r\n      list_blocks: {\r\n        colourPrimary: \"260\",\r\n      },\r\n      logic_blocks: {\r\n        colourPrimary: \"210\",\r\n      },\r\n      loop_blocks: {\r\n        colourPrimary: \"120\",\r\n      },\r\n      math_blocks: {\r\n        colourPrimary: \"230\",\r\n      },\r\n      procedure_blocks: {\r\n        colourPrimary: \"290\",\r\n      },\r\n      text_blocks: {\r\n        colourPrimary: \"160\",\r\n      },\r\n      variable_blocks: {\r\n        colourPrimary: \"330\",\r\n      },\r\n      variable_dynamic_blocks: {\r\n        colourPrimary: \"310\",\r\n      },\r\n      hat_blocks: {\r\n        colourPrimary: \"330\",\r\n        hat: \"cap\",\r\n      },\r\n    },\r\n    categoryStyles: {},\r\n    componentStyles: {\r\n      workspaceBackgroundColour: \"#ECF0F1\",\r\n      toolboxBackgroundColour: \"#DB2777\",\r\n      flyoutBackgroundColour: \"#FFFFFF\",\r\n      flyoutOpacity: \"0.5\",\r\n      scrollbarColour: \"#FFFFFF\",\r\n      scrollbarOpacity: \"0.1\",\r\n      //   toolboxForegroundColour: \"#ffffff\",\r\n    },\r\n  },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bot.fdb0c459.png\";","export default __webpack_public_path__ + \"static/media/play.74559e61.png\";","export default __webpack_public_path__ + \"static/media/pause.7d4f3660.png\";","export default __webpack_public_path__ + \"static/media/expand.75c14712.png\";","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport BlocklyComponent from \"./modules/Blockly\";\r\nimport BlocklyJS from \"blockly/javascript\";\r\nimport { connect } from \"react-redux\";\r\nimport { BLE } from \"./utils/bleConstants\";\r\n//importing blocks\r\nimport \"./modules/Blockly/blocks\";\r\n//importing generators\r\nimport \"./modules/Blockly/generators\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { BLOCKLY_THEME } from \"./utils/blocklyTheme\";\r\nimport { RUNCODE } from \"./utils/smartyConstants\";\r\nimport Bot from \"./assets/images/bot.png\";\r\nimport PlayIcon from \"./assets/images/play.png\";\r\nimport PauseIcon from \"./assets/images/pause.png\";\r\nimport ExpandIcon from \"./assets/images/expand.png\";\r\nimport Editor, { DiffEditor, useMonaco, loader, Monaco } from \"@monaco-editor/react\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n    this.blocklyArea = React.createRef();\r\n    this.myButton = React.createRef();\r\n    this.code = \"\";\r\n    this.initInterpreter = null;\r\n    this.state = {\r\n      code: this.code,\r\n      expanded: false,\r\n    };\r\n  }\r\n  generateCode = () => {\r\n    this.code = BlocklyJS.workspaceToCode(this.simpleWorkspace.current);\r\n    console.log(this.code);\r\n    this.setState({\r\n      code: this.code,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.generateCode();\r\n  }\r\n\r\n  getBlocklyArea() {\r\n    return this.blocklyArea;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-screen w-screen overflow-hidden \">\r\n        <div>\r\n          <NavBar></NavBar>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-2 w-full h-full\">\r\n          <div style={{ height: \"90%\" }} className={\"relative col-span-3 md:col-span-3 bg-red-500 w-full \" + (this.state.expanded ? \"lg:col-span-1\" : \"lg:col-span-2\")}>\r\n            <div ref={this.blocklyArea}>\r\n              <BlocklyComponent\r\n                ref={this.simpleWorkspace}\r\n                readOnly={false}\r\n                blocklyArea={this.getBlocklyArea}\r\n                trashcan={true}\r\n                toolboxPosition=\"start\"\r\n                media={process.env.PUBLIC_URL + \"media/\"}\r\n                theme={BLOCKLY_THEME.THEME}\r\n                move={{\r\n                  scrollbars: true,\r\n                  drag: true,\r\n                  wheel: true,\r\n                }}\r\n                grid={{ spacing: 50, length: 5, colour: \"gray\", snap: true }}\r\n                zoom={{ controls: true, wheel: true, startScale: 1.0, maxScale: 3, minScale: 0.3, scaleSpeed: 1.2, pinch: true }}\r\n                onChange={this.generateCode}\r\n                initialXml={`\r\n                <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <block type=\"start_block\" x=\"200\" y= \"200\"></block>\r\n                </xml>\r\n          `}\r\n              ></BlocklyComponent>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={\"flex flex-col p-5 justify-between items-center bg-blue-300 md:invisible lg:visible invisible \" + (this.state.expanded ? \"col-span-2\" : \"\")}>\r\n            {/* This is the generate btn */}\r\n\r\n            <div className=\"flex  justify-center  items-center  w-full h-full p-5 \">\r\n              <div className=\"w-full h-full bg-yellow-500 border-4 border-white  shadow-2xl rounded-t-2xl p-5\">\r\n                <div className=\"flex justify-center md:justify-end -mt-16 \">\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({ expanded: !this.state.expanded });\r\n                    }}\r\n                    className=\"w-14 h-18 p-1 object-top  rounded bg-purple-300 cursor-pointer \"\r\n                    src={ExpandIcon}\r\n                  ></img>\r\n                </div>\r\n                <Editor theme=\"light\" defaultLanguage=\"javascript\" value={this.code} defaultValue={this.code} height=\"100%\" />\r\n              </div>\r\n            </div>\r\n            {/* This is the card */}\r\n            <div className=\"flex flex-col  justify-center w-full p-5 mb-16 items-start\">\r\n              <div className=\"w-full py-4 px-8 bg-pink-600  shadow-lg rounded-lg \">\r\n                <div className=\"flex justify-center md:justify-end -mt-16\">\r\n                  <img className=\"w-18 h-20 object-top  rounded   border-yellow-500 \" src={Bot}></img>\r\n                </div>\r\n                <div>\r\n                  {/* This is the buttons */}\r\n                  <div className=\"flex justify-around items-center \">\r\n                    <button\r\n                      onClick={() => {\r\n                        RUNCODE(this.state.code);\r\n                      }}\r\n                      className=\"p-5 flex flex-col text-white justify-center items-center text-2xl bg-blue-500 rounded-3xl\r\n                    shadow-3xl\"\r\n                    >\r\n                      <img className=\"w-16 h-16 \" src={PlayIcon}></img>\r\n                    </button>\r\n                    <button className=\"flex text-white flex-col justify-center items-center p-5 text-2xl  bg-blue-500 rounded-3xl shadow-3xl\">\r\n                      <img className=\"w-16 h-16 \" src={PauseIcon}></img>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    bleChar: state.ble.char,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import * as mqtt from \"mqtt\";\r\nlet client = mqtt.connect(\"ws://192.46.209.78:1886/ws\"); // create a client\r\n\r\nclient.on(\"connect\", function () {\r\n  client.subscribe(\"presence\", function (err) {\r\n    if (!err) {\r\n      //   client.publish(\"presence\", \"Hello mqtt\");\r\n      client.subscribe(\"test\");\r\n    } else {\r\n      console.log(err);\r\n    }\r\n  });\r\n});\r\n\r\nclient.on(\"message\", function (topic, message) {\r\n  // message is Buffer\r\n  console.log(\"Topic  : \" + topic + \"     \" + message.toString());\r\n  //   console.log(message.toString());\r\n});\r\n\r\nexport default client;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// needed for translations\r\nimport i18next from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport HttpApi from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { CONSTANTS } from \"./utils/constants\";\r\nimport { client } from \"./mqtt\";\r\ni18next\r\n  .use(HttpApi)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    supportedLngs: [\"en\", \"ru\"],\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // Options for language detector\r\n    detection: {\r\n      order: [\"path\", \"cookie\", \"htmlTag\"],\r\n      // caches: [\"cookie\"],\r\n    },\r\n    react: { useSuspense: false },\r\n    backend: {\r\n      loadPath: \"/assets/locales/{{lng}}/translation.json\",\r\n    },\r\n  });\r\n\r\ni18next.changeLanguage(CONSTANTS.LANGUAGE.ENGLISH);\r\n\r\nReactDOM.render(\r\n  // <Suspense fallback={loadingMarkup}>\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  // </Suspense>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { BLE } from \"../../utils/bleConstants\";\r\n\r\nconst initialState = {\r\n  status: BLE.BLE_DISCONNECTED,\r\n  device: null,\r\n  server: null,\r\n  service: null,\r\n  char: null,\r\n};\r\n\r\nexport const bleSlice = createSlice({\r\n  name: \"ble\",\r\n  initialState,\r\n  reducers: {\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    setDevice: (state, action) => {\r\n      state.device = action.payload;\r\n    },\r\n    setServer: (state, action) => {\r\n      state.server = action.payload;\r\n    },\r\n    setService: (state, action) => {\r\n      state.service = action.payload;\r\n    },\r\n    setchar: (state, action) => {\r\n      state.char = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeStatus, setDevice, setServer, setService, setchar } = bleSlice.actions;\r\nexport default bleSlice.reducer;\r\n","import { BLOCKLY_CATEGORIES_CONSTANTS } from \"./blocklyCategories\";\r\n\r\nexport const CONSTANTS = {\r\n  LANGUAGE: {\r\n    RUSSIAN: \"ru\",\r\n    ENGLISH: \"en\",\r\n  },\r\n  BLOCKS: {\r\n    ROTATION_BLOCK: {\r\n      ENGLISH: \"Rotation\",\r\n      RUSSIAN: \"вращение\",\r\n    },\r\n    START_BLOCK: {\r\n      ENGLISH: \"Start Program\",\r\n      RUSSIAN: \"запустить программу\",\r\n    },\r\n    MYBLOCK: {\r\n      ENGLISH: \"Show Alert\",\r\n      RUSSIAN: \"Показать оповещение\",\r\n    },\r\n\r\n    DIRECTION_BLOCK: {\r\n      ENGLISH: \"MOVE\",\r\n      RUSSIAN: \"двигаться\",\r\n      DIRECTIONS_ENGLISH: {\r\n        FORWARD: \"FORWARD\",\r\n        BACKWARD: \"BACKWARD\",\r\n        LEFT: \"LEFT\",\r\n        RIGHT: \"RIGHT \",\r\n      },\r\n      DIRECTIONS_RUSSIAN: {\r\n        FORWARD: \"вперед\",\r\n        BACKWARD: \"назад\",\r\n        LEFT: \"левый\",\r\n        RIGHT: \"Правильно\",\r\n      },\r\n    },\r\n  },\r\n  CATERGORIES: {\r\n    SMARTY_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.SMARTY,\r\n      RUSSIAN: BLOCKLY_CATEGORIES_CONSTANTS.SMARTY,\r\n    },\r\n    LOGIC_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.LOGIC,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    LOOPS_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.LOOPS,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    MATH_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.MATH,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    TEXT_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.TEXT,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    LISTS_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.LISTS,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    COLOUR_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.COLOUR,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n    FUCNTIONS_CATEGORY: {\r\n      ENGLISH: BLOCKLY_CATEGORIES_CONSTANTS.FUNCTIONS,\r\n      RUSSIAN: \"логика\",\r\n    },\r\n  },\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { CONSTANTS } from \"../../utils/constants\";\r\nconst initialState = {\r\n  language: CONSTANTS.LANGUAGE.ENGLISH,\r\n};\r\n\r\nexport const languageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState,\r\n  reducers: {\r\n    setLanguage: (state, action) => {\r\n      state.language = action.payload;\r\n      console.log(state.language);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLanguage } = languageSlice.actions;\r\nexport default languageSlice.reducer;\r\n","import i18next from \"i18next\";\r\n\r\nexport const BLOCKLY_CATEGORIES_CONSTANTS = {\r\n  // ENGLISH\r\n  EN_SMARTY: \"Smarty\",\r\n  EN_LOGIC: \"Logic\",\r\n  EN_LOOPS: \"Loops\",\r\n  EN_MATH: \"Math\",\r\n  EN_TEXT: \"Text\",\r\n  EN_LISTS: \"List\",\r\n  EN_COLOUR: \"Colour\",\r\n  EN_FUNCTIONS: \"Functions\",\r\n\r\n  // RUSSIAN\r\n  RU_SMARTY: \"Smarty\",\r\n  RU_LOGIC: \"логика\",\r\n  RU_LOOPS: \"петли\",\r\n  RU_MATH: \"математика\",\r\n  RU_TEXT: \"текст\",\r\n  RU_LISTS: \"списки\",\r\n  RU_COLOUR: \"цвет\",\r\n  RU_FUNCTIONS: \"функции\",\r\n};\r\n","import { store } from \"../app/store\";\r\nimport { CONSTANTS } from \"../utils/constants\";\r\nexport const SMARTY = {\r\n  async moveForward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(\"{ 'ssid' : 'Notion360' , 'pass' : 'notion36@' , 'mode' : 'wifi' }\"));\r\n  },\r\n  async moveBackward() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.BACKWARD));\r\n  },\r\n  async moveLeft() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.LEFT));\r\n  },\r\n  async moveRight() {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_BLOCK.DIRECTIONS_ENGLISH.RIGHT));\r\n  },\r\n  async rotateSmarty(angle) {\r\n    await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.ROTATION_BLOCK.ENGLISH + \",\" + angle));\r\n  },\r\n  async getDistance() {\r\n    let value = await store.getState().ble.char.readValue();\r\n    console.log(new TextDecoder().decode(value));\r\n    return new TextDecoder().decode(value);\r\n  },\r\n/////////////////////////\r\nasync moveForwardSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.FORWARD +\",\"+ num));\r\n},\r\nasync moveBackwardSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.BACKWARD +\",\"+ num));\r\n},\r\nasync moveLeftSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.LEFT +\",\"+ num));\r\n},\r\nasync moveRightSteps(num) {\r\n  await store.getState().ble.char.writeValue(new TextEncoder().encode(CONSTANTS.BLOCKS.DIRECTION_STEPS_BLOCK.DIRECTIONS_STEPS_ENGLISH.RIGHT +\",\"+ num));\r\n},\r\n\r\n};\r\n\r\nexport const RUNCODE = (code) => {\r\n  eval(code);\r\n};\r\n"],"sourceRoot":""}